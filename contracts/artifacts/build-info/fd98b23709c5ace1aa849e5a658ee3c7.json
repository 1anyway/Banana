{
	"id": "fd98b23709c5ace1aa849e5a658ee3c7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BananaNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.26;\r\n\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {ERC721} from \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport {ERC721Enumerable} from \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract BananaNFT is ERC721Enumerable, Ownable {\r\n\r\n    uint256 private _tokenIdCounter;\r\n\r\n    IERC20 public token;\r\n    uint256 public mintPrice = 0.01 ether;\r\n    uint256 public mintInterval;\r\n    uint256 public endWhitelistMintTime;\r\n    bool public _isSaleActive;\r\n\r\n    mapping(uint256 tokenId => string) public _tokenURIs;\r\n    mapping(address => bool) whitelist;\r\n    mapping(address => uint256) public lastMintTime;\r\n\r\n    event Minted(address indexed user, uint256 tokenId);\r\n\r\n    constructor(\r\n        uint256 _mintInterval,\r\n        IERC20 _token,\r\n        uint256 whitelistMintTime\r\n    ) ERC721(\"BananaNFT\", \"BNFT\") Ownable(msg.sender) {\r\n        mintInterval = _mintInterval;\r\n        token = _token;\r\n        endWhitelistMintTime = block.timestamp + whitelistMintTime;\r\n    }\r\n\r\n    function tokenURI(\r\n        uint256 tokenId\r\n    ) public view override returns (string memory) {\r\n        _requireOwned(tokenId);\r\n        string memory _tokenURI = _tokenURIs[tokenId];\r\n        return _tokenURI;\r\n    }\r\n\r\n    function payToMint(string memory uri) external payable returns (uint256) {\r\n        require(_isSaleActive, \"Sale is not active\");\r\n        require(msg.value == mintPrice, \"Incorrect ETH value\");\r\n\r\n        ++_tokenIdCounter;\r\n        uint256 tokenId = _tokenIdCounter;\r\n        _safeMint(msg.sender, tokenId);\r\n        _setTokenURI(tokenId, uri);\r\n\r\n        emit Minted(msg.sender, tokenId);\r\n\r\n        return tokenId;\r\n    }\r\n\r\n    function judgeMint() external view returns (uint256 nextMintTime) {\r\n        if (lastMintTime[msg.sender] == 0) {\r\n            nextMintTime = 0;\r\n        } else {\r\n            nextMintTime = lastMintTime[msg.sender] + mintInterval;\r\n        }\r\n    }\r\n\r\n    function mint(string memory uri) external returns (uint256) {\r\n        require(\r\n            block.timestamp >= lastMintTime[msg.sender] + mintInterval,\r\n            \"Not reach mint time\"\r\n        );\r\n        if (block.timestamp < endWhitelistMintTime) {\r\n            require(whitelist[msg.sender], \"Only whitelist user can mint\"); \r\n        }\r\n\r\n        ++_tokenIdCounter;\r\n        uint256 tokenId = _tokenIdCounter;\r\n        lastMintTime[msg.sender] = block.timestamp;\r\n        _safeMint(msg.sender, tokenId);\r\n        _setTokenURI(tokenId, uri);\r\n\r\n        emit Minted(msg.sender, tokenId);\r\n\r\n        return tokenId;\r\n    }\r\n\r\n    function addToWhitelsit(address user) external {\r\n        whitelist[user] = true;\r\n    }\r\n\r\n    function _setTokenURI(\r\n        uint256 tokenId,\r\n        string memory _tokenURI\r\n    ) internal virtual {\r\n        _tokenURIs[tokenId] = _tokenURI;\r\n    }\r\n\r\n    function setMintInterval(uint256 _mintInterval) external onlyOwner {\r\n        mintInterval = _mintInterval;\r\n    }\r\n\r\n    function flipSaleActive() external onlyOwner {\r\n        _isSaleActive = !_isSaleActive;\r\n    }\r\n\r\n    function setMintPrice(uint256 _mintPrice) external onlyOwner {\r\n        mintPrice = _mintPrice;\r\n    }\r\n\r\n    function currentTokenId() public view returns (uint256) {\r\n        return _tokenIdCounter;\r\n    }\r\n\r\n    function withdraw() external onlyOwner {\r\n        payable(owner()).transfer(address(this).balance);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Enumerable} from \"./IERC721Enumerable.sol\";\nimport {IERC165} from \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n * of all the token ids in the contract as well as all token ids owned by each account.\n *\n * CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n * interfere with enumerability and should not be used together with `ERC721Enumerable`.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\n\n    uint256[] private _allTokens;\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\n\n    /**\n     * @dev An `owner`'s token query was out of bounds for `index`.\n     *\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\n     */\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\n\n    /**\n     * @dev Batch mint is not allowed.\n     */\n    error ERC721EnumerableForbiddenBatchMint();\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\n        if (index >= balanceOf(owner)) {\n            revert ERC721OutOfBoundsIndex(owner, index);\n        }\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\n        if (index >= totalSupply()) {\n            revert ERC721OutOfBoundsIndex(address(0), index);\n        }\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_update}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n\n        if (previousOwner == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n\n        return previousOwner;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = balanceOf(to) - 1;\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = balanceOf(from);\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n\n    /**\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\n     */\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\n        if (amount > 0) {\n            revert ERC721EnumerableForbiddenBatchMint();\n        }\n        super._increaseBalance(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 395,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 397,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 401,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 405,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 409,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 415,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ERC721Enumerable": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.",
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 395,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 397,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 401,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 405,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 409,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 415,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1525,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1529,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1532,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1536,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220612d2958d6622324dc120007448f1079bf9ae45fc50bc4191ba7a985bdb8822364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220612d2958d6622324dc120007448f1079bf9ae45fc50bc4191ba7a985bdb8822364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x2D29 PC 0xD6 PUSH3 0x2324DC SLT STOP SMOD PREVRANDAO DUP16 LT PUSH26 0xBF9AE45FC50BC4191BA7A985BDB8822364736F6C634300081A00 CALLER ",
							"sourceMap": "251:2847:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220612d2958d6622324dc120007448f1079bf9ae45fc50bc4191ba7a985bdb8822364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x2D29 PC 0xD6 PUSH3 0x2324DC SLT STOP SMOD PREVRANDAO DUP16 LT PUSH26 0xBF9AE45FC50BC4191BA7A985BDB8822364736F6C634300081A00 CALLER ",
							"sourceMap": "251:2847:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220612d2958d6622324dc120007448f1079bf9ae45fc50bc4191ba7a985bdb8822364736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/BananaNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cecc8dc37f0313d8b3e9d8bcd4df796b831b65b8975b01cab782a6e48887c7ff64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cecc8dc37f0313d8b3e9d8bcd4df796b831b65b8975b01cab782a6e48887c7ff64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xCC DUP14 0xC3 PUSH32 0x313D8B3E9D8BCD4DF796B831B65B8975B01CAB782A6E48887C7FF64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cecc8dc37f0313d8b3e9d8bcd4df796b831b65b8975b01cab782a6e48887c7ff64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xCC DUP14 0xC3 PUSH32 0x313D8B3E9D8BCD4DF796B831B65B8975B01CAB782A6E48887C7FF64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cecc8dc37f0313d8b3e9d8bcd4df796b831b65b8975b01cab782a6e48887c7ff64736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/BananaNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cde5e888ba6a2e63b661c0926ab958f8ec8e672cbb964797df5ba21f457291ad64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cde5e888ba6a2e63b661c0926ab958f8ec8e672cbb964797df5ba21f457291ad64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xE5 0xE8 DUP9 0xBA PUSH11 0x2E63B661C0926AB958F8EC DUP15 PUSH8 0x2CBB964797DF5BA2 0x1F GASLIMIT PUSH19 0x91AD64736F6C634300081A0033000000000000 ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cde5e888ba6a2e63b661c0926ab958f8ec8e672cbb964797df5ba21f457291ad64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xE5 0xE8 DUP9 0xBA PUSH11 0x2E63B661C0926AB958F8EC DUP15 PUSH8 0x2CBB964797DF5BA2 0x1F GASLIMIT PUSH19 0x91AD64736F6C634300081A0033000000000000 ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cde5e888ba6a2e63b661c0926ab958f8ec8e672cbb964797df5ba21f457291ad64736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/BananaNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BananaNFT.sol": {
				"BananaNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mintInterval",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "whitelistMintTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_isSaleActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "_tokenURIs",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "addToWhitelsit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endWhitelistMintTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flipSaleActive",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "judgeMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nextMintTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastMintTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "payToMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mintInterval",
									"type": "uint256"
								}
							],
							"name": "setMintInterval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mintPrice",
									"type": "uint256"
								}
							],
							"name": "setMintPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BananaNFT.sol\":382:3544  contract BananaNFT is ERC721Enumerable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BananaNFT.sol\":532:542  0.01 ether */\n  0x2386f26fc10000\n    /* \"contracts/BananaNFT.sol\":505:542  uint256 public mintPrice = 0.01 ether */\n  0x0d\n  sstore\n    /* \"contracts/BananaNFT.sol\":875:1175  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/BananaNFT.sol\":1022:1032  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xba, 0x10985b985b98539195)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe2, 0x10939195)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3338:3389   */\n  mstore\n    /* \"#utility.yul\":3311:3329   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/BananaNFT.sol\":1045:1057  mintInterval */\n  0x0e\n    /* \"contracts/BananaNFT.sol\":1045:1073  mintInterval = _mintInterval */\n  dup4\n  swap1\n  sstore\n    /* \"contracts/BananaNFT.sol\":1084:1089  token */\n  0x0c\n    /* \"contracts/BananaNFT.sol\":1084:1098  token = _token */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/BananaNFT.sol\":1132:1167  block.timestamp + whitelistMintTime */\n  tag_18\n    /* \"contracts/BananaNFT.sol\":1150:1167  whitelistMintTime */\n  dup2\n    /* \"contracts/BananaNFT.sol\":1132:1147  block.timestamp */\n  timestamp\n    /* \"contracts/BananaNFT.sol\":1132:1167  block.timestamp + whitelistMintTime */\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"contracts/BananaNFT.sol\":1109:1129  endWhitelistMintTime */\n  0x0f\n    /* \"contracts/BananaNFT.sol\":1109:1167  endWhitelistMintTime = block.timestamp + whitelistMintTime */\n  sstore\n  pop\n    /* \"contracts/BananaNFT.sol\":382:3544  contract BananaNFT is ERC721Enumerable, Ownable {... */\n  tag_27\n  swap2\n  pop\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x0a\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:546   */\ntag_3:\n    /* \"#utility.yul\":116:122   */\n  0x00\n    /* \"#utility.yul\":124:130   */\n  dup1\n    /* \"#utility.yul\":132:138   */\n  0x00\n    /* \"#utility.yul\":185:187   */\n  0x60\n    /* \"#utility.yul\":173:182   */\n  dup5\n    /* \"#utility.yul\":164:171   */\n  dup7\n    /* \"#utility.yul\":160:183   */\n  sub\n    /* \"#utility.yul\":156:188   */\n  slt\n    /* \"#utility.yul\":153:205   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":201:202   */\n  0x00\n    /* \"#utility.yul\":198:199   */\n  dup1\n    /* \"#utility.yul\":191:203   */\n  revert\n    /* \"#utility.yul\":153:205   */\ntag_29:\n    /* \"#utility.yul\":246:262   */\n  dup4\n  mload\n    /* \"#utility.yul\":331:333   */\n  0x20\n    /* \"#utility.yul\":316:334   */\n  dup6\n  add\n    /* \"#utility.yul\":310:335   */\n  mload\n    /* \"#utility.yul\":246:262   */\n  swap1\n  swap4\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":366:399   */\n  dup2\n  and\n    /* \"#utility.yul\":354:400   */\n  dup2\n  eq\n    /* \"#utility.yul\":344:418   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":414:415   */\n  0x00\n    /* \"#utility.yul\":411:412   */\n  dup1\n    /* \"#utility.yul\":404:416   */\n  revert\n    /* \"#utility.yul\":344:418   */\ntag_30:\n    /* \"#utility.yul\":510:512   */\n  0x40\n    /* \"#utility.yul\":495:513   */\n  swap5\n  swap1\n  swap5\n  add\n    /* \"#utility.yul\":489:514   */\n  mload\n    /* \"#utility.yul\":14:546   */\n  swap3\n  swap6\n    /* \"#utility.yul\":437:444   */\n  swap4\n  swap5\n  pop\n    /* \"#utility.yul\":489:514   */\n  swap2\n  swap3\n    /* \"#utility.yul\":14:546   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":551:678   */\ntag_22:\n    /* \"#utility.yul\":612:622   */\n  0x4e487b71\n    /* \"#utility.yul\":607:610   */\n  0xe0\n    /* \"#utility.yul\":603:623   */\n  shl\n    /* \"#utility.yul\":600:601   */\n  0x00\n    /* \"#utility.yul\":593:624   */\n  mstore\n    /* \"#utility.yul\":643:647   */\n  0x41\n    /* \"#utility.yul\":640:641   */\n  0x04\n    /* \"#utility.yul\":633:648   */\n  mstore\n    /* \"#utility.yul\":667:671   */\n  0x24\n    /* \"#utility.yul\":664:665   */\n  0x00\n    /* \"#utility.yul\":657:672   */\n  revert\n    /* \"#utility.yul\":683:1063   */\ntag_23:\n    /* \"#utility.yul\":762:763   */\n  0x01\n    /* \"#utility.yul\":758:770   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":805:817   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":826:887   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":880:884   */\n  0x7f\n    /* \"#utility.yul\":872:878   */\n  dup3\n    /* \"#utility.yul\":868:885   */\n  and\n    /* \"#utility.yul\":858:885   */\n  swap2\n  pop\n    /* \"#utility.yul\":826:887   */\ntag_33:\n    /* \"#utility.yul\":933:935   */\n  0x20\n    /* \"#utility.yul\":925:931   */\n  dup3\n    /* \"#utility.yul\":922:936   */\n  lt\n    /* \"#utility.yul\":902:920   */\n  dup2\n    /* \"#utility.yul\":899:937   */\n  sub\n    /* \"#utility.yul\":896:1057   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":979:989   */\n  0x4e487b71\n    /* \"#utility.yul\":974:977   */\n  0xe0\n    /* \"#utility.yul\":970:990   */\n  shl\n    /* \"#utility.yul\":967:968   */\n  0x00\n    /* \"#utility.yul\":960:991   */\n  mstore\n    /* \"#utility.yul\":1014:1018   */\n  0x22\n    /* \"#utility.yul\":1011:1012   */\n  0x04\n    /* \"#utility.yul\":1004:1019   */\n  mstore\n    /* \"#utility.yul\":1042:1046   */\n  0x24\n    /* \"#utility.yul\":1039:1040   */\n  0x00\n    /* \"#utility.yul\":1032:1047   */\n  revert\n    /* \"#utility.yul\":896:1057   */\ntag_34:\n  pop\n    /* \"#utility.yul\":683:1063   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1194:1712   */\ntag_25:\n    /* \"#utility.yul\":1296:1298   */\n  0x1f\n    /* \"#utility.yul\":1291:1294   */\n  dup3\n    /* \"#utility.yul\":1288:1299   */\n  gt\n    /* \"#utility.yul\":1285:1706   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1332:1337   */\n  dup1\n    /* \"#utility.yul\":1329:1330   */\n  0x00\n    /* \"#utility.yul\":1322:1338   */\n  mstore\n    /* \"#utility.yul\":1376:1380   */\n  0x20\n    /* \"#utility.yul\":1373:1374   */\n  0x00\n    /* \"#utility.yul\":1363:1381   */\n  keccak256\n    /* \"#utility.yul\":1446:1448   */\n  0x1f\n    /* \"#utility.yul\":1434:1444   */\n  dup5\n    /* \"#utility.yul\":1430:1449   */\n  add\n    /* \"#utility.yul\":1427:1428   */\n  0x05\n    /* \"#utility.yul\":1423:1450   */\n  shr\n    /* \"#utility.yul\":1417:1421   */\n  dup2\n    /* \"#utility.yul\":1413:1451   */\n  add\n    /* \"#utility.yul\":1482:1486   */\n  0x20\n    /* \"#utility.yul\":1470:1480   */\n  dup6\n    /* \"#utility.yul\":1467:1487   */\n  lt\n    /* \"#utility.yul\":1464:1511   */\n  iszero\n  tag_38\n  jumpi\n  pop\n    /* \"#utility.yul\":1505:1509   */\n  dup1\n    /* \"#utility.yul\":1464:1511   */\ntag_38:\n    /* \"#utility.yul\":1560:1562   */\n  0x1f\n    /* \"#utility.yul\":1555:1558   */\n  dup5\n    /* \"#utility.yul\":1551:1563   */\n  add\n    /* \"#utility.yul\":1548:1549   */\n  0x05\n    /* \"#utility.yul\":1544:1564   */\n  shr\n    /* \"#utility.yul\":1538:1542   */\n  dup3\n    /* \"#utility.yul\":1534:1565   */\n  add\n    /* \"#utility.yul\":1524:1565   */\n  swap2\n  pop\n    /* \"#utility.yul\":1615:1696   */\ntag_39:\n    /* \"#utility.yul\":1633:1635   */\n  dup2\n    /* \"#utility.yul\":1626:1631   */\n  dup2\n    /* \"#utility.yul\":1623:1636   */\n  lt\n    /* \"#utility.yul\":1615:1696   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1692:1693   */\n  0x00\n    /* \"#utility.yul\":1678:1694   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1659:1660   */\n  0x01\n    /* \"#utility.yul\":1648:1661   */\n  add\n    /* \"#utility.yul\":1615:1696   */\n  jump(tag_39)\ntag_41:\n    /* \"#utility.yul\":1619:1622   */\n  pop\n  pop\n    /* \"#utility.yul\":1285:1706   */\ntag_37:\n    /* \"#utility.yul\":1194:1712   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1888:3187   */\ntag_9:\n    /* \"#utility.yul\":2008:2018   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2030:2060   */\n  dup2\n  gt\n    /* \"#utility.yul\":2027:2083   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":2063:2081   */\n  tag_45\n  tag_22\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2092:2189   */\n  tag_46\n    /* \"#utility.yul\":2182:2188   */\n  dup2\n    /* \"#utility.yul\":2142:2180   */\n  tag_47\n    /* \"#utility.yul\":2174:2178   */\n  dup5\n    /* \"#utility.yul\":2168:2179   */\n  sload\n    /* \"#utility.yul\":2142:2180   */\n  tag_23\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2136:2140   */\n  dup5\n    /* \"#utility.yul\":2092:2189   */\n  tag_25\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2238:2242   */\n  0x20\n    /* \"#utility.yul\":2269:2271   */\n  0x1f\n    /* \"#utility.yul\":2258:2272   */\n  dup3\n  gt\n    /* \"#utility.yul\":2286:2287   */\n  0x01\n    /* \"#utility.yul\":2281:2930   */\n  dup2\n  eq\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2974:2975   */\n  0x00\n    /* \"#utility.yul\":2991:2997   */\n  dup4\n    /* \"#utility.yul\":2988:3077   */\n  iszero\n  tag_50\n  jumpi\n  pop\n    /* \"#utility.yul\":3043:3062   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3037:3063   */\n  mload\n    /* \"#utility.yul\":2988:3077   */\ntag_50:\n  not(0x00)\n    /* \"#utility.yul\":1845:1846   */\n  0x03\n    /* \"#utility.yul\":1841:1852   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1837:1861   */\n  shr\n    /* \"#utility.yul\":1833:1862   */\n  not\n    /* \"#utility.yul\":1823:1863   */\n  and\n    /* \"#utility.yul\":1869:1870   */\n  0x01\n    /* \"#utility.yul\":1865:1876   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1820:1877   */\n  or\n    /* \"#utility.yul\":3090:3171   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2251:3181   */\n  jump(tag_41)\n    /* \"#utility.yul\":2281:2930   */\ntag_49:\n    /* \"#utility.yul\":1141:1142   */\n  0x00\n    /* \"#utility.yul\":1134:1148   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1178:1182   */\n  0x20\n    /* \"#utility.yul\":1165:1183   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2317:2337   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2435:2657   */\ntag_53:\n    /* \"#utility.yul\":2449:2456   */\n  dup3\n    /* \"#utility.yul\":2446:2447   */\n  dup2\n    /* \"#utility.yul\":2443:2457   */\n  lt\n    /* \"#utility.yul\":2435:2657   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2531:2550   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2525:2551   */\n  mload\n    /* \"#utility.yul\":2510:2552   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2638:2642   */\n  0x20\n    /* \"#utility.yul\":2623:2643   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2591:2592   */\n  0x01\n    /* \"#utility.yul\":2579:2593   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2465:2477   */\n  add\n    /* \"#utility.yul\":2435:2657   */\n  jump(tag_53)\ntag_55:\n    /* \"#utility.yul\":2439:2442   */\n  pop\n    /* \"#utility.yul\":2685:2691   */\n  dup5\n    /* \"#utility.yul\":2676:2683   */\n  dup3\n    /* \"#utility.yul\":2673:2692   */\n  lt\n    /* \"#utility.yul\":2670:2871   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":2746:2765   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2740:2766   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2829:2830   */\n  0x03\n    /* \"#utility.yul\":2825:2839   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2841:2844   */\n  0xf8\n    /* \"#utility.yul\":2821:2845   */\n  and\n    /* \"#utility.yul\":2817:2854   */\n  shr\n    /* \"#utility.yul\":2813:2855   */\n  not\n    /* \"#utility.yul\":2798:2856   */\n  and\n    /* \"#utility.yul\":2783:2857   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2670:2871   */\ntag_56:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2917:2918   */\n  0x01\n    /* \"#utility.yul\":2901:2915   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2897:2919   */\n  add\n    /* \"#utility.yul\":2884:2920   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1888:3187   */\n  jump\t// out\n    /* \"#utility.yul\":3400:3622   */\ntag_19:\n    /* \"#utility.yul\":3465:3474   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3486:3496   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3483:3616   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3538:3548   */\n  0x4e487b71\n    /* \"#utility.yul\":3533:3536   */\n  0xe0\n    /* \"#utility.yul\":3529:3549   */\n  shl\n    /* \"#utility.yul\":3526:3527   */\n  0x00\n    /* \"#utility.yul\":3519:3550   */\n  mstore\n    /* \"#utility.yul\":3573:3577   */\n  0x11\n    /* \"#utility.yul\":3570:3571   */\n  0x04\n    /* \"#utility.yul\":3563:3578   */\n  mstore\n    /* \"#utility.yul\":3601:3605   */\n  0x24\n    /* \"#utility.yul\":3598:3599   */\n  0x00\n    /* \"#utility.yul\":3591:3606   */\n  revert\n    /* \"#utility.yul\":3483:3616   */\ntag_59:\n    /* \"#utility.yul\":3400:3622   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_27:\n    /* \"contracts/BananaNFT.sol\":382:3544  contract BananaNFT is ERC721Enumerable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BananaNFT.sol\":382:3544  contract BananaNFT is ERC721Enumerable, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xde8b51e1\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xde8b51e1\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf4a0a528\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0xb88d4fde\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xcada2a18\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd85d3d27\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x70a08231\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x6352211e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x6817c76c\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x6aa71d18\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7080d6fc\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x18160ddd\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x3004defe\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x3004defe\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x4f6ccce7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x537efe31\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x18160ddd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x232e623e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x081812fc\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x0bb78ec1\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x0e726e6b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x9a9b7b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06dbc131\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BananaNFT.sol\":3330:3427  function currentTokenId() public view returns (uint256) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n        /* \"contracts/BananaNFT.sol\":3404:3419  _tokenIdCounter */\n      sload(0x0b)\n        /* \"contracts/BananaNFT.sol\":3330:3427  function currentTokenId() public view returns (uint256) {... */\n    tag_45:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/BananaNFT.sol\":3330:3427  function currentTokenId() public view returns (uint256) {... */\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":747:761   */\n      swap1\n      iszero\n        /* \"#utility.yul\":740:762   */\n      iszero\n        /* \"#utility.yul\":722:763   */\n      dup2\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x20\n        /* \"#utility.yul\":695:713   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n      tag_47\n        /* \"#utility.yul\":582:769   */\n      jump\n        /* \"contracts/BananaNFT.sol\":1844:2093  function judgeMint() external view returns (uint256 nextMintTime) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_45\n      tag_58\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1799:1831   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1781:1832   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1769:1771   */\n      0x20\n        /* \"#utility.yul\":1754:1772   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      tag_47\n        /* \"#utility.yul\":1635:1838   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/BananaNFT.sol\":659:711  mapping(uint256 tokenId => string) public _tokenURIs */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_61\n      tag_79\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"contracts/BananaNFT.sol\":549:576  uint256 public mintInterval */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_45\n      sload(0x0e)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2150  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2157  _allTokens.length */\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_45)\n        /* \"contracts/BananaNFT.sol\":583:618  uint256 public endWhitelistMintTime */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_45\n      sload(0x0f)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_73\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_45\n      tag_101\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"contracts/BananaNFT.sol\":2736:2824  function addToWhitelsit(address user) external {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_73\n      tag_106\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BananaNFT.sol\":2794:2809  whitelist[user] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BananaNFT.sol\":2794:2803  whitelist */\n      0x12\n        /* \"contracts/BananaNFT.sol\":2794:2809  whitelist[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/BananaNFT.sol\":2794:2816  whitelist[user] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/BananaNFT.sol\":2812:2816  true */\n      0x01\n        /* \"contracts/BananaNFT.sol\":2794:2816  whitelist[user] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/BananaNFT.sol\":2736:2824  function addToWhitelsit(address user) external {... */\n      jump\n        /* \"contracts/BananaNFT.sol\":3435:3541  function withdraw() external onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_73\n      tag_111\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_73\n      tag_114\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_45\n      tag_118\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"contracts/BananaNFT.sol\":1411:1836  function payToMint(string memory uri) external payable returns (uint256) {... */\n    tag_18:\n      tag_45\n      tag_122\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_66\n      tag_128\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"contracts/BananaNFT.sol\":505:542  uint256 public mintPrice = 0.01 ether */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_45\n      sload(0x0d)\n      dup2\n      jump\n        /* \"contracts/BananaNFT.sol\":759:806  mapping(address => uint256) public lastMintTime */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_45\n      tag_137\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_137:\n      mstore(0x20, 0x13)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/BananaNFT.sol\":625:650  bool public _isSaleActive */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      sload(0x10)\n      tag_50\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_45\n      tag_146\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_73\n      tag_151\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0a))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_66)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_61\n      tag_158\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_73\n      tag_162\n      calldatasize\n      0x04\n      tag_163\n      jump\t// in\n    tag_162:\n      tag_164\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_73\n      tag_167\n      calldatasize\n      0x04\n      tag_168\n      jump\t// in\n    tag_167:\n      tag_169\n      jump\t// in\n        /* \"contracts/BananaNFT.sol\":1183:1403  function tokenURI(... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      tag_61\n      tag_172\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_172:\n      tag_173\n      jump\t// in\n        /* \"contracts/BananaNFT.sol\":2996:3110  function setMintInterval(uint256 _mintInterval) external onlyOwner {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      tag_73\n      tag_177\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_177:\n      tag_178\n      jump\t// in\n        /* \"contracts/BananaNFT.sol\":2101:2728  function mint(string memory uri) external returns (uint256) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      tag_45\n      tag_181\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_181:\n      tag_182\n      jump\t// in\n        /* \"contracts/BananaNFT.sol\":3118:3212  function flipSaleActive() external onlyOwner {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      tag_73\n      tag_186\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      tag_50\n      tag_189\n      calldatasize\n      0x04\n      tag_190\n      jump\t// in\n    tag_189:\n      tag_191\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      tag_73\n      tag_195\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_195:\n      tag_196\n      jump\t// in\n        /* \"contracts/BananaNFT.sol\":3220:3322  function setMintPrice(uint256 _mintPrice) external onlyOwner {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      tag_73\n      tag_199\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_199:\n      tag_200\n      jump\t// in\n        /* \"contracts/BananaNFT.sol\":479:498  IERC20 public token */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      sload(0x0c)\n      tag_66\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1537:1541  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1610  interfaceId == type(IERC721Enumerable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x780e9d63)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1650  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      tag_209\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1650  super.supportsInterface(interfaceId) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1638:1649  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1637  super.supportsInterface */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1650  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1553:1650  return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BananaNFT.sol\":1844:2093  function judgeMint() external view returns (uint256 nextMintTime) {... */\n    tag_58:\n        /* \"contracts/BananaNFT.sol\":1938:1948  msg.sender */\n      caller\n        /* \"contracts/BananaNFT.sol\":1888:1908  uint256 nextMintTime */\n      0x00\n        /* \"contracts/BananaNFT.sol\":1925:1949  lastMintTime[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BananaNFT.sol\":1925:1937  lastMintTime */\n      0x13\n        /* \"contracts/BananaNFT.sol\":1925:1949  lastMintTime[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/BananaNFT.sol\":1925:1954  lastMintTime[msg.sender] == 0 */\n      dup2\n      sub\n        /* \"contracts/BananaNFT.sol\":1921:2086  if (lastMintTime[msg.sender] == 0) {... */\n      tag_212\n      jumpi\n      pop\n        /* \"contracts/BananaNFT.sol\":1986:1987  0 */\n      0x00\n        /* \"contracts/BananaNFT.sol\":1844:2093  function judgeMint() external view returns (uint256 nextMintTime) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BananaNFT.sol\":1921:2086  if (lastMintTime[msg.sender] == 0) {... */\n    tag_212:\n        /* \"contracts/BananaNFT.sol\":2062:2074  mintInterval */\n      sload(0x0e)\n        /* \"contracts/BananaNFT.sol\":2048:2058  msg.sender */\n      caller\n        /* \"contracts/BananaNFT.sol\":2035:2059  lastMintTime[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BananaNFT.sol\":2035:2047  lastMintTime */\n      0x13\n        /* \"contracts/BananaNFT.sol\":2035:2059  lastMintTime[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/BananaNFT.sol\":2035:2074  lastMintTime[msg.sender] + mintInterval */\n      tag_214\n      swap2\n        /* \"contracts/BananaNFT.sol\":2062:2074  mintInterval */\n      swap1\n        /* \"contracts/BananaNFT.sol\":2035:2074  lastMintTime[msg.sender] + mintInterval */\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"contracts/BananaNFT.sol\":2020:2074  nextMintTime = lastMintTime[msg.sender] + mintInterval */\n      swap1\n      pop\n        /* \"contracts/BananaNFT.sol\":1844:2093  function judgeMint() external view returns (uint256 nextMintTime) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_219\n      swap1\n      tag_218\n      jump\t// in\n    tag_219:\n      dup1\n      iszero\n      tag_220\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_221\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_220)\n    tag_221:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_222:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_222\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_224:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BananaNFT.sol\":659:711  mapping(uint256 tokenId => string) public _tokenURIs */\n    tag_80:\n      mstore(0x20, 0x11)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      tag_233\n      swap1\n      tag_218\n      jump\t// in\n    tag_233:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_234\n      swap1\n      tag_218\n      jump\t// in\n    tag_234:\n      dup1\n      iszero\n      tag_235\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_236\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_235)\n    tag_236:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_237:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_237\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1781:1832   */\n      mstore\n        /* \"#utility.yul\":1754:1772   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      shl(0xe0, 0x64283d7b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6629:6661   */\n      dup1\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6611:6662   */\n      mstore\n        /* \"#utility.yul\":6678:6696   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6671:6705   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":6741:6773   */\n      dup3\n      and\n        /* \"#utility.yul\":6721:6739   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6714:6774   */\n      mstore\n        /* \"#utility.yul\":6584:6602   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      tag_241\n        /* \"#utility.yul\":6409:6780   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1824:1831  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1872  balanceOf(owner) */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1866:1871  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1865  balanceOf */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1872  balanceOf(owner) */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1847:1852  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1847:1872  index >= balanceOf(owner) */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1843:1942  if (index >= balanceOf(owner)) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1895:1931  ERC721OutOfBoundsIndex(owner, index) */\n      mload(0x40)\n      shl(0xe2, 0x295f44f7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6977:7009   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1895:1931  ERC721OutOfBoundsIndex(owner, index) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6959:7010   */\n      mstore\n        /* \"#utility.yul\":7026:7044   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7019:7053   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6932:6950   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1895:1931  ERC721OutOfBoundsIndex(owner, index) */\n      tag_241\n        /* \"#utility.yul\":6785:7059   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1843:1942  if (index >= balanceOf(owner)) {... */\n    tag_250:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1977  _ownedTokens[owner] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1970  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1977  _ownedTokens[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1984  _ownedTokens[owner][index] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/BananaNFT.sol\":3435:3541  function withdraw() external onlyOwner {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x0a)\n        /* \"contracts/BananaNFT.sol\":3485:3533  payable(owner()).transfer(address(this).balance) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/BananaNFT.sol\":3511:3532  address(this).balance */\n      selfbalance\n        /* \"contracts/BananaNFT.sol\":3485:3533  payable(owner()).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/BananaNFT.sol\":3511:3532  address(this).balance */\n      dup6\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup9\n        /* \"contracts/BananaNFT.sol\":3485:3533  payable(owner()).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_260\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_260:\n      pop\n        /* \"contracts/BananaNFT.sol\":3435:3541  function withdraw() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2302:2309  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2347  totalSupply() */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2150  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2157  _allTokens.length */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2347  totalSupply() */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2325:2330  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2325:2347  index >= totalSupply() */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2321:2422  if (index >= totalSupply()) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2370:2411  ERC721OutOfBoundsIndex(address(0), index) */\n      mload(0x40)\n      shl(0xe2, 0x295f44f7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2401:2402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2370:2411  ERC721OutOfBoundsIndex(address(0), index) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6959:7010   */\n      mstore\n        /* \"#utility.yul\":7026:7044   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7019:7053   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6932:6950   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2370:2411  ERC721OutOfBoundsIndex(address(0), index) */\n      tag_241\n        /* \"#utility.yul\":6785:7059   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2321:2422  if (index >= totalSupply()) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2438:2448  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2449:2454  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2438:2455  _allTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_268\n      jumpi\n      tag_268\n      tag_269\n      jump\t// in\n    tag_268:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2431:2455  return _allTokens[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BananaNFT.sol\":1411:1836  function payToMint(string memory uri) external payable returns (uint256) {... */\n    tag_124:\n        /* \"contracts/BananaNFT.sol\":1503:1516  _isSaleActive */\n      sload(0x10)\n        /* \"contracts/BananaNFT.sol\":1475:1482  uint256 */\n      0x00\n      swap1\n        /* \"contracts/BananaNFT.sol\":1503:1516  _isSaleActive */\n      0xff\n      and\n        /* \"contracts/BananaNFT.sol\":1495:1539  require(_isSaleActive, \"Sale is not active\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7398:7400   */\n      0x20\n        /* \"contracts/BananaNFT.sol\":1495:1539  require(_isSaleActive, \"Sale is not active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7380:7401   */\n      mstore\n        /* \"#utility.yul\":7437:7439   */\n      0x12\n        /* \"#utility.yul\":7417:7435   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7410:7440   */\n      mstore\n      shl(0x70, 0x53616c65206973206e6f7420616374697665)\n        /* \"#utility.yul\":7456:7474   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7449:7497   */\n      mstore\n        /* \"#utility.yul\":7514:7532   */\n      0x64\n      add\n        /* \"contracts/BananaNFT.sol\":1495:1539  require(_isSaleActive, \"Sale is not active\") */\n      tag_241\n        /* \"#utility.yul\":7196:7538   */\n      jump\n        /* \"contracts/BananaNFT.sol\":1495:1539  require(_isSaleActive, \"Sale is not active\") */\n    tag_272:\n        /* \"contracts/BananaNFT.sol\":1571:1580  mintPrice */\n      sload(0x0d)\n        /* \"contracts/BananaNFT.sol\":1558:1567  msg.value */\n      callvalue\n        /* \"contracts/BananaNFT.sol\":1558:1580  msg.value == mintPrice */\n      eq\n        /* \"contracts/BananaNFT.sol\":1550:1604  require(msg.value == mintPrice, \"Incorrect ETH value\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7745:7747   */\n      0x20\n        /* \"contracts/BananaNFT.sol\":1550:1604  require(msg.value == mintPrice, \"Incorrect ETH value\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7727:7748   */\n      mstore\n        /* \"#utility.yul\":7784:7786   */\n      0x13\n        /* \"#utility.yul\":7764:7782   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7757:7787   */\n      mstore\n      shl(0x68, 0x496e636f7272656374204554482076616c7565)\n        /* \"#utility.yul\":7803:7821   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7796:7845   */\n      mstore\n        /* \"#utility.yul\":7862:7880   */\n      0x64\n      add\n        /* \"contracts/BananaNFT.sol\":1550:1604  require(msg.value == mintPrice, \"Incorrect ETH value\") */\n      tag_241\n        /* \"#utility.yul\":7543:7886   */\n      jump\n        /* \"contracts/BananaNFT.sol\":1550:1604  require(msg.value == mintPrice, \"Incorrect ETH value\") */\n    tag_275:\n        /* \"contracts/BananaNFT.sol\":1619:1634  _tokenIdCounter */\n      0x0b\n      0x00\n        /* \"contracts/BananaNFT.sol\":1617:1634  ++_tokenIdCounter */\n      dup2\n      sload\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/BananaNFT.sol\":1663:1678  _tokenIdCounter */\n      sload(0x0b)\n        /* \"contracts/BananaNFT.sol\":1689:1719  _safeMint(msg.sender, tokenId) */\n      tag_280\n        /* \"contracts/BananaNFT.sol\":1699:1709  msg.sender */\n      caller\n        /* \"contracts/BananaNFT.sol\":1663:1678  _tokenIdCounter */\n      dup3\n        /* \"contracts/BananaNFT.sol\":1689:1698  _safeMint */\n      tag_281\n        /* \"contracts/BananaNFT.sol\":1689:1719  _safeMint(msg.sender, tokenId) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/BananaNFT.sol\":1730:1756  _setTokenURI(tokenId, uri) */\n      tag_282\n        /* \"contracts/BananaNFT.sol\":1743:1750  tokenId */\n      dup2\n        /* \"contracts/BananaNFT.sol\":1752:1755  uri */\n      dup5\n        /* \"contracts/BananaNFT.sol\":1730:1742  _setTokenURI */\n      tag_283\n        /* \"contracts/BananaNFT.sol\":1730:1756  _setTokenURI(tokenId, uri) */\n      jump\t// in\n    tag_282:\n        /* \"contracts/BananaNFT.sol\":1774:1801  Minted(msg.sender, tokenId) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BananaNFT.sol\":1781:1791  msg.sender */\n      caller\n      swap1\n        /* \"contracts/BananaNFT.sol\":1774:1801  Minted(msg.sender, tokenId) */\n      0x30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/BananaNFT.sol\":1774:1801  Minted(msg.sender, tokenId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/BananaNFT.sol\":1821:1828  tokenId */\n      swap3\n        /* \"contracts/BananaNFT.sol\":1411:1836  function payToMint(string memory uri) external payable returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x22718ad9)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1781:1832   */\n      mstore\n        /* \"#utility.yul\":1754:1772   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      tag_241\n        /* \"#utility.yul\":1635:1838   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_288:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_291\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_293\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_294\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_229\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_305\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_307\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_309\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n        /* \"contracts/BananaNFT.sol\":1183:1403  function tokenURI(... */\n    tag_173:\n        /* \"contracts/BananaNFT.sol\":1264:1277  string memory */\n      0x60\n        /* \"contracts/BananaNFT.sol\":1290:1312  _requireOwned(tokenId) */\n      tag_311\n        /* \"contracts/BananaNFT.sol\":1304:1311  tokenId */\n      dup3\n        /* \"contracts/BananaNFT.sol\":1290:1303  _requireOwned */\n      tag_225\n        /* \"contracts/BananaNFT.sol\":1290:1312  _requireOwned(tokenId) */\n      jump\t// in\n    tag_311:\n      pop\n        /* \"contracts/BananaNFT.sol\":1323:1346  string memory _tokenURI */\n      0x00\n        /* \"contracts/BananaNFT.sol\":1349:1368  _tokenURIs[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/BananaNFT.sol\":1349:1359  _tokenURIs */\n      0x11\n        /* \"contracts/BananaNFT.sol\":1349:1368  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/BananaNFT.sol\":1323:1368  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_312\n      swap1\n      tag_218\n      jump\t// in\n    tag_312:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_313\n      swap1\n      tag_218\n      jump\t// in\n    tag_313:\n      dup1\n      iszero\n      tag_314\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_315\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_314)\n    tag_315:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_316:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_316\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_314:\n      pop\n      swap4\n      swap8\n        /* \"contracts/BananaNFT.sol\":1183:1403  function tokenURI(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BananaNFT.sol\":2996:3110  function setMintInterval(uint256 _mintInterval) external onlyOwner {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_318\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_318:\n        /* \"contracts/BananaNFT.sol\":3074:3086  mintInterval */\n      0x0e\n        /* \"contracts/BananaNFT.sol\":3074:3102  mintInterval = _mintInterval */\n      sstore\n        /* \"contracts/BananaNFT.sol\":2996:3110  function setMintInterval(uint256 _mintInterval) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BananaNFT.sol\":2101:2728  function mint(string memory uri) external returns (uint256) {... */\n    tag_182:\n        /* \"contracts/BananaNFT.sol\":2240:2252  mintInterval */\n      sload(0x0e)\n        /* \"contracts/BananaNFT.sol\":2226:2236  msg.sender */\n      caller\n        /* \"contracts/BananaNFT.sol\":2152:2159  uint256 */\n      0x00\n        /* \"contracts/BananaNFT.sol\":2213:2237  lastMintTime[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BananaNFT.sol\":2213:2225  lastMintTime */\n      0x13\n        /* \"contracts/BananaNFT.sol\":2213:2237  lastMintTime[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/BananaNFT.sol\":2152:2159  uint256 */\n      swap1\n      swap2\n        /* \"contracts/BananaNFT.sol\":2213:2252  lastMintTime[msg.sender] + mintInterval */\n      tag_321\n      swap2\n      tag_215\n      jump\t// in\n    tag_321:\n        /* \"contracts/BananaNFT.sol\":2194:2209  block.timestamp */\n      timestamp\n        /* \"contracts/BananaNFT.sol\":2194:2252  block.timestamp >= lastMintTime[msg.sender] + mintInterval */\n      lt\n      iszero\n        /* \"contracts/BananaNFT.sol\":2172:2299  require(... */\n      tag_322\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8233:8235   */\n      0x20\n        /* \"contracts/BananaNFT.sol\":2172:2299  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8215:8236   */\n      mstore\n        /* \"#utility.yul\":8272:8274   */\n      0x13\n        /* \"#utility.yul\":8252:8270   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8245:8275   */\n      mstore\n      shl(0x68, 0x4e6f74207265616368206d696e742074696d65)\n        /* \"#utility.yul\":8291:8309   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8284:8333   */\n      mstore\n        /* \"#utility.yul\":8350:8368   */\n      0x64\n      add\n        /* \"contracts/BananaNFT.sol\":2172:2299  require(... */\n      tag_241\n        /* \"#utility.yul\":8031:8374   */\n      jump\n        /* \"contracts/BananaNFT.sol\":2172:2299  require(... */\n    tag_322:\n        /* \"contracts/BananaNFT.sol\":2332:2352  endWhitelistMintTime */\n      sload(0x0f)\n        /* \"contracts/BananaNFT.sol\":2314:2329  block.timestamp */\n      timestamp\n        /* \"contracts/BananaNFT.sol\":2314:2352  block.timestamp < endWhitelistMintTime */\n      lt\n        /* \"contracts/BananaNFT.sol\":2310:2444  if (block.timestamp < endWhitelistMintTime) {... */\n      iszero\n      tag_326\n      jumpi\n        /* \"contracts/BananaNFT.sol\":2387:2397  msg.sender */\n      caller\n        /* \"contracts/BananaNFT.sol\":2377:2398  whitelist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BananaNFT.sol\":2377:2386  whitelist */\n      0x12\n        /* \"contracts/BananaNFT.sol\":2377:2398  whitelist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/BananaNFT.sol\":2369:2431  require(whitelist[msg.sender], \"Only whitelist user can mint\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8581:8583   */\n      0x20\n        /* \"contracts/BananaNFT.sol\":2369:2431  require(whitelist[msg.sender], \"Only whitelist user can mint\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8563:8584   */\n      mstore\n        /* \"#utility.yul\":8620:8622   */\n      0x1c\n        /* \"#utility.yul\":8600:8618   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8593:8623   */\n      mstore\n        /* \"#utility.yul\":8659:8689   */\n      0x4f6e6c792077686974656c69737420757365722063616e206d696e7400000000\n        /* \"#utility.yul\":8639:8657   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8632:8690   */\n      mstore\n        /* \"#utility.yul\":8707:8725   */\n      0x64\n      add\n        /* \"contracts/BananaNFT.sol\":2369:2431  require(whitelist[msg.sender], \"Only whitelist user can mint\") */\n      tag_241\n        /* \"#utility.yul\":8379:8731   */\n      jump\n        /* \"contracts/BananaNFT.sol\":2369:2431  require(whitelist[msg.sender], \"Only whitelist user can mint\") */\n    tag_326:\n        /* \"contracts/BananaNFT.sol\":2458:2473  _tokenIdCounter */\n      0x0b\n      0x00\n        /* \"contracts/BananaNFT.sol\":2456:2473  ++_tokenIdCounter */\n      dup2\n      sload\n      tag_329\n      swap1\n      tag_279\n      jump\t// in\n    tag_329:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/BananaNFT.sol\":2502:2517  _tokenIdCounter */\n      sload(0x0b)\n        /* \"contracts/BananaNFT.sol\":2541:2551  msg.sender */\n      caller\n        /* \"contracts/BananaNFT.sol\":2484:2499  uint256 tokenId */\n      0x00\n        /* \"contracts/BananaNFT.sol\":2528:2552  lastMintTime[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BananaNFT.sol\":2528:2540  lastMintTime */\n      0x13\n        /* \"contracts/BananaNFT.sol\":2528:2552  lastMintTime[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/BananaNFT.sol\":2555:2570  block.timestamp */\n      timestamp\n        /* \"contracts/BananaNFT.sol\":2528:2570  lastMintTime[msg.sender] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/BananaNFT.sol\":2581:2611  _safeMint(msg.sender, tokenId) */\n      tag_280\n      swap1\n        /* \"contracts/BananaNFT.sol\":2502:2517  _tokenIdCounter */\n      dup3\n        /* \"contracts/BananaNFT.sol\":2581:2590  _safeMint */\n      tag_281\n        /* \"contracts/BananaNFT.sol\":2581:2611  _safeMint(msg.sender, tokenId) */\n      jump\t// in\n        /* \"contracts/BananaNFT.sol\":3118:3212  function flipSaleActive() external onlyOwner {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_334\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_334:\n        /* \"contracts/BananaNFT.sol\":3191:3204  _isSaleActive */\n      0x10\n      dup1\n      sload\n      not(0xff)\n        /* \"contracts/BananaNFT.sol\":3174:3204  _isSaleActive = !_isSaleActive */\n      dup2\n      and\n        /* \"contracts/BananaNFT.sol\":3191:3204  _isSaleActive */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"contracts/BananaNFT.sol\":3190:3204  !_isSaleActive */\n      iszero\n        /* \"contracts/BananaNFT.sol\":3174:3204  _isSaleActive = !_isSaleActive */\n      or\n      swap1\n      sstore\n        /* \"contracts/BananaNFT.sol\":3118:3212  function flipSaleActive() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_338\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_338:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1781:1832   */\n      mstore\n        /* \"#utility.yul\":1754:1772   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_241\n        /* \"#utility.yul\":1635:1838   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_260\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_294\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/BananaNFT.sol\":3220:3322  function setMintPrice(uint256 _mintPrice) external onlyOwner {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_344\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_344:\n        /* \"contracts/BananaNFT.sol\":3292:3301  mintPrice */\n      0x0d\n        /* \"contracts/BananaNFT.sol\":3292:3314  mintPrice = _mintPrice */\n      sstore\n        /* \"contracts/BananaNFT.sol\":3220:3322  function setMintPrice(uint256 _mintPrice) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      tag_347\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_209\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_209\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      tag_241\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_360\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2518:3143  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2613:2620  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2632:2653  address previousOwner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2688  super._update(to, tokenId, auth) */\n      tag_362\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2670:2672  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2674:2681  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2683:2687  auth */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2669  super._update */\n      tag_363\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2688  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2632:2688  address previousOwner = super._update(to, tokenId, auth) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2703:2730  previousOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n      tag_364\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2786  _addTokenToAllTokensEnumeration(tokenId) */\n      tag_365\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2778:2785  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3949:3959  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3949:3966  _allTokens.length */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3946  _allTokensIndex[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3937  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3946  _allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3966  _allTokensIndex[tokenId] = _allTokens.length */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3976:4000  _allTokens.push(tokenId) */\n      0x01\n      dup3\n      add\n      dup4\n      sstore\n      swap2\n      swap1\n      swap2\n      mstore\n      0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3\n      add\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3846:4007  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2786  _addTokenToAllTokensEnumeration(tokenId) */\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n      jump(tag_369)\n    tag_364:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2824:2826  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2826  previousOwner != to */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2820  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2826  previousOwner != to */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2803:2909  if (previousOwner != to) {... */\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2898  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      tag_369\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2875:2888  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2890:2897  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2874  _removeTokenFromOwnerEnumeration */\n      tag_370\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2898  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      jump\t// in\n    tag_369:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2922:2938  to == address(0) */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n      tag_371\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2999  _removeTokenFromAllTokensEnumeration(tokenId) */\n      tag_372\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2991:2998  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2990  _removeTokenFromAllTokensEnumeration */\n      tag_373\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2999  _removeTokenFromAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n      jump(tag_376)\n    tag_371:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3037:3039  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3039  previousOwner != to */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3033  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3039  previousOwner != to */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3016:3106  if (previousOwner != to) {... */\n      tag_376\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3095  _addTokenToOwnerEnumeration(to, tokenId) */\n      tag_376\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3083:3085  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3087:3094  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3082  _addTokenToOwnerEnumeration */\n      tag_377\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3095  _addTokenToOwnerEnumeration(to, tokenId) */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3123:3136  previousOwner */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2518:3143  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0a))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1781:1832   */\n      mstore\n        /* \"#utility.yul\":1754:1772   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_241\n        /* \"#utility.yul\":1635:1838   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_386\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"contracts/BananaNFT.sol\":2832:2988  function _setTokenURI(... */\n    tag_283:\n        /* \"contracts/BananaNFT.sol\":2949:2968  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/BananaNFT.sol\":2949:2959  _tokenURIs */\n      0x11\n        /* \"contracts/BananaNFT.sol\":2949:2968  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/BananaNFT.sol\":2949:2980  _tokenURIs[tokenId] = _tokenURI */\n      tag_262\n        /* \"contracts/BananaNFT.sol\":2971:2980  _tokenURI */\n      dup3\n        /* \"contracts/BananaNFT.sol\":2949:2968  _tokenURIs[tokenId] */\n      dup3\n        /* \"contracts/BananaNFT.sol\":2949:2980  _tokenURIs[tokenId] = _tokenURI */\n      tag_389\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x0a\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_392\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      shl(0xe3, 0x0b611743)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1799:1831   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1781:1832   */\n      mstore\n        /* \"#utility.yul\":1754:1772   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      tag_241\n        /* \"#utility.yul\":1635:1838   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_392:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":722:763   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":695:713   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_309:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_398\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_399\n      jump\t// in\n    tag_398:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_400\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_401\n      swap2\n      dup2\n      add\n      swap1\n      tag_402\n      jump\t// in\n    tag_401:\n      0x01\n    tag_400:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_403\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_408\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_407)\n    tag_408:\n      0x60\n      swap2\n      pop\n    tag_407:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_409\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1799:1831   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1781:1832   */\n      mstore\n        /* \"#utility.yul\":1754:1772   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      tag_241\n        /* \"#utility.yul\":1635:1838   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_409:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_403:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1799:1831   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1781:1832   */\n      mstore\n        /* \"#utility.yul\":1754:1772   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      tag_241\n        /* \"#utility.yul\":1635:1838   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_413:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_418\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_418:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_419\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_420\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_420:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      tag_421\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_421:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_422\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_423\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_423:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_422:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_424\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1799:1831   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1781:1832   */\n      mstore\n        /* \"#utility.yul\":1754:1772   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      tag_241\n        /* \"#utility.yul\":1635:1838   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_424:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_426\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_426:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_419:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_430\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_430\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_431\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_430:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_432\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_433\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_360\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_433:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_432:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_434\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_434:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup8\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4624:5583  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4886:4908  uint256 lastTokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4926  balanceOf(from) */\n      tag_438\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4921:4925  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4920  balanceOf */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4926  balanceOf(from) */\n      jump\t// in\n    tag_438:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4936:4954  uint256 tokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4983  _ownedTokensIndex[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4974  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4983  _ownedTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4886:4926  uint256 lastTokenIndex = balanceOf(from) */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5087:5115  tokenIndex != lastTokenIndex */\n      dup1\n      dup3\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5083:5406  if (tokenIndex != lastTokenIndex) {... */\n      tag_439\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5171  _ownedTokens[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5131:5150  uint256 lastTokenId */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5171  _ownedTokens[from] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5165  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5171  _ownedTokens[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5187  _ownedTokens[from][lastTokenIndex] */\n      dup6\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5232  _ownedTokens[from][tokenIndex] */\n      dup5\n      dup5\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5246  _ownedTokens[from][tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5348  _ownedTokensIndex[lastTokenId] */\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5335  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5348  _ownedTokensIndex[lastTokenId] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5361  _ownedTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5083:5406  if (tokenIndex != lastTokenIndex) {... */\n    tag_439:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5525  _ownedTokensIndex[tokenId] */\n      0x00\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5516  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5525  _ownedTokensIndex[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5492:5525  delete _ownedTokensIndex[tokenId] */\n      dup5\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5560  _ownedTokens[from] */\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5554  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5560  _ownedTokens[from] */\n      dup2\n      mstore\n      dup4\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5576  _ownedTokens[from][lastTokenIndex] */\n      swap2\n      dup4\n      mstore\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5535:5576  delete _ownedTokens[from][lastTokenIndex] */\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4624:5583  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5871:6932  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6155  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6162  _allTokens.length */\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6120:6142  uint256 lastTokenIndex */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6166  _allTokens.length - 1 */\n      tag_441\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6165:6166  1 */\n      0x01\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6166  _allTokens.length - 1 */\n      tag_442\n      jump\t// in\n    tag_441:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6176:6194  uint256 tokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6221  _allTokensIndex[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6212  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6221  _allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6565:6575  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6565:6591  _allTokens[lastTokenIndex] */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6120:6166  uint256 lastTokenIndex = _allTokens.length - 1 */\n      swap4\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6221  _allTokensIndex[tokenId] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6120:6166  uint256 lastTokenIndex = _allTokens.length - 1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6565:6591  _allTokens[lastTokenIndex] */\n      dup2\n      lt\n      tag_444\n      jumpi\n      tag_444\n      tag_269\n      jump\t// in\n    tag_444:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6543:6591  uint256 lastTokenId = _allTokens[lastTokenIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6627:6638  lastTokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6612  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6613:6623  tokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6624  _allTokens[tokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_447\n      jumpi\n      tag_447\n      tag_269\n      jump\t// in\n    tag_447:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6638  _allTokens[tokenIndex] = lastTokenId */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6734  _allTokensIndex[lastTokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6721  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6734  _allTokensIndex[lastTokenId] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6747  _allTokensIndex[lastTokenId] = tokenIndex */\n      dup5\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6875:6899  _allTokensIndex[tokenId] */\n      dup6\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6868:6899  delete _allTokensIndex[tokenId] */\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6909:6919  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6909:6925  _allTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_450\n      jumpi\n      tag_450\n      tag_451\n      jump\t// in\n    tag_450:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5942:6932  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5871:6932  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3437:3651  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n    tag_377:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3521:3535  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3554:3555  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3551  balanceOf(to) */\n      tag_454\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3548:3550  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3547  balanceOf */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3551  balanceOf(to) */\n      jump\t// in\n    tag_454:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3555  balanceOf(to) - 1 */\n      tag_455\n      swap2\n      swap1\n      tag_442\n      jump\t// in\n    tag_455:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3581  _ownedTokens[to] */\n      swap1\n      swap4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3577  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3581  _ownedTokens[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3589  _ownedTokens[to][length] */\n      dup7\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3599  _ownedTokens[to][length] = tokenId */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3635  _ownedTokensIndex[tokenId] */\n      swap4\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3626  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3635  _ownedTokensIndex[tokenId] */\n      swap1\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3644  _ownedTokensIndex[tokenId] = length */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3437:3651  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_386:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_457\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_458\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_457:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_309\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_431:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_461\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_462\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_461:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_262\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_464\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      tag_241\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_464:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6977:7009   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6959:7010   */\n      mstore\n        /* \"#utility.yul\":7026:7044   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7019:7053   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6932:6950   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      tag_241\n        /* \"#utility.yul\":6785:7059   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_458:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_469\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1781:1832   */\n      mstore\n        /* \"#utility.yul\":1754:1772   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      tag_241\n        /* \"#utility.yul\":1635:1838   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_469:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_471\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_471:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x39e35637)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1781:1832   */\n      mstore\n        /* \"#utility.yul\":1754:1772   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      tag_241\n        /* \"#utility.yul\":1635:1838   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_462:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      tag_376\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_477\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_477\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_477:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_376\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      swap2\n      and\n      eq\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"#utility.yul\":196:327   */\n    tag_480:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":270:302   */\n      dup2\n      and\n        /* \"#utility.yul\":260:303   */\n      dup2\n      eq\n        /* \"#utility.yul\":250:321   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":332:577   */\n    tag_52:\n        /* \"#utility.yul\":390:396   */\n      0x00\n        /* \"#utility.yul\":443:445   */\n      0x20\n        /* \"#utility.yul\":431:440   */\n      dup3\n        /* \"#utility.yul\":422:429   */\n      dup5\n        /* \"#utility.yul\":418:441   */\n      sub\n        /* \"#utility.yul\":414:446   */\n      slt\n        /* \"#utility.yul\":411:463   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":459:460   */\n      0x00\n        /* \"#utility.yul\":456:457   */\n      dup1\n        /* \"#utility.yul\":449:461   */\n      revert\n        /* \"#utility.yul\":411:463   */\n    tag_494:\n        /* \"#utility.yul\":498:507   */\n      dup2\n        /* \"#utility.yul\":485:508   */\n      calldataload\n        /* \"#utility.yul\":517:547   */\n      tag_495\n        /* \"#utility.yul\":541:546   */\n      dup2\n        /* \"#utility.yul\":517:547   */\n      tag_480\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":566:571   */\n      swap4\n        /* \"#utility.yul\":332:577   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:1174   */\n    tag_481:\n        /* \"#utility.yul\":816:819   */\n      0x00\n        /* \"#utility.yul\":854:859   */\n      dup2\n        /* \"#utility.yul\":848:860   */\n      mload\n        /* \"#utility.yul\":881:887   */\n      dup1\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":869:888   */\n      mstore\n        /* \"#utility.yul\":906:907   */\n      0x00\n        /* \"#utility.yul\":916:1055   */\n    tag_498:\n        /* \"#utility.yul\":930:936   */\n      dup2\n        /* \"#utility.yul\":927:928   */\n      dup2\n        /* \"#utility.yul\":924:937   */\n      lt\n        /* \"#utility.yul\":916:1055   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":1038:1042   */\n      0x20\n        /* \"#utility.yul\":1023:1036   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1019:1043   */\n      dup2\n      add\n        /* \"#utility.yul\":1013:1044   */\n      mload\n        /* \"#utility.yul\":993:1004   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":989:1011   */\n      dup3\n      add\n        /* \"#utility.yul\":982:1045   */\n      mstore\n        /* \"#utility.yul\":945:957   */\n      add\n        /* \"#utility.yul\":916:1055   */\n      jump(tag_498)\n    tag_500:\n        /* \"#utility.yul\":920:923   */\n      pop\n        /* \"#utility.yul\":1100:1101   */\n      0x00\n        /* \"#utility.yul\":1093:1097   */\n      0x20\n        /* \"#utility.yul\":1084:1090   */\n      dup3\n        /* \"#utility.yul\":1079:1082   */\n      dup7\n        /* \"#utility.yul\":1075:1091   */\n      add\n        /* \"#utility.yul\":1071:1098   */\n      add\n        /* \"#utility.yul\":1064:1102   */\n      mstore\n        /* \"#utility.yul\":1163:1167   */\n      0x20\n        /* \"#utility.yul\":1156:1158   */\n      0x1f\n        /* \"#utility.yul\":1152:1159   */\n      not\n        /* \"#utility.yul\":1147:1149   */\n      0x1f\n        /* \"#utility.yul\":1139:1145   */\n      dup4\n        /* \"#utility.yul\":1135:1150   */\n      add\n        /* \"#utility.yul\":1131:1160   */\n      and\n        /* \"#utility.yul\":1126:1129   */\n      dup6\n        /* \"#utility.yul\":1122:1161   */\n      add\n        /* \"#utility.yul\":1118:1168   */\n      add\n        /* \"#utility.yul\":1111:1168   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":774:1174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1179:1399   */\n    tag_64:\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1317:1326   */\n      dup2\n        /* \"#utility.yul\":1310:1331   */\n      mstore\n        /* \"#utility.yul\":1291:1295   */\n      0x00\n        /* \"#utility.yul\":1348:1393   */\n      tag_495\n        /* \"#utility.yul\":1389:1391   */\n      0x20\n        /* \"#utility.yul\":1378:1387   */\n      dup4\n        /* \"#utility.yul\":1374:1392   */\n      add\n        /* \"#utility.yul\":1366:1372   */\n      dup5\n        /* \"#utility.yul\":1348:1393   */\n      tag_481\n      jump\t// in\n        /* \"#utility.yul\":1404:1630   */\n    tag_68:\n        /* \"#utility.yul\":1463:1469   */\n      0x00\n        /* \"#utility.yul\":1516:1518   */\n      0x20\n        /* \"#utility.yul\":1504:1513   */\n      dup3\n        /* \"#utility.yul\":1495:1502   */\n      dup5\n        /* \"#utility.yul\":1491:1514   */\n      sub\n        /* \"#utility.yul\":1487:1519   */\n      slt\n        /* \"#utility.yul\":1484:1536   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":1532:1533   */\n      0x00\n        /* \"#utility.yul\":1529:1530   */\n      dup1\n        /* \"#utility.yul\":1522:1534   */\n      revert\n        /* \"#utility.yul\":1484:1536   */\n    tag_504:\n      pop\n        /* \"#utility.yul\":1577:1600   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1404:1630   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1843:2016   */\n    tag_482:\n        /* \"#utility.yul\":1911:1931   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1960:1991   */\n      dup2\n      and\n        /* \"#utility.yul\":1950:1992   */\n      dup2\n      eq\n        /* \"#utility.yul\":1940:2010   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":2006:2007   */\n      0x00\n        /* \"#utility.yul\":2003:2004   */\n      dup1\n        /* \"#utility.yul\":1996:2008   */\n      revert\n        /* \"#utility.yul\":1940:2010   */\n    tag_507:\n        /* \"#utility.yul\":1843:2016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2021:2321   */\n    tag_75:\n        /* \"#utility.yul\":2089:2095   */\n      0x00\n        /* \"#utility.yul\":2097:2103   */\n      dup1\n        /* \"#utility.yul\":2150:2152   */\n      0x40\n        /* \"#utility.yul\":2138:2147   */\n      dup4\n        /* \"#utility.yul\":2129:2136   */\n      dup6\n        /* \"#utility.yul\":2125:2148   */\n      sub\n        /* \"#utility.yul\":2121:2153   */\n      slt\n        /* \"#utility.yul\":2118:2170   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":2166:2167   */\n      0x00\n        /* \"#utility.yul\":2163:2164   */\n      dup1\n        /* \"#utility.yul\":2156:2168   */\n      revert\n        /* \"#utility.yul\":2118:2170   */\n    tag_509:\n        /* \"#utility.yul\":2189:2218   */\n      tag_510\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2189:2218   */\n      tag_482\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":2179:2218   */\n      swap5\n        /* \"#utility.yul\":2287:2289   */\n      0x20\n        /* \"#utility.yul\":2272:2290   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2259:2291   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2021:2321   */\n      jump\t// out\n        /* \"#utility.yul\":2326:2700   */\n    tag_97:\n        /* \"#utility.yul\":2403:2409   */\n      0x00\n        /* \"#utility.yul\":2411:2417   */\n      dup1\n        /* \"#utility.yul\":2419:2425   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x60\n        /* \"#utility.yul\":2460:2469   */\n      dup5\n        /* \"#utility.yul\":2451:2458   */\n      dup7\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2492   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":2488:2489   */\n      0x00\n        /* \"#utility.yul\":2485:2486   */\n      dup1\n        /* \"#utility.yul\":2478:2490   */\n      revert\n        /* \"#utility.yul\":2440:2492   */\n    tag_512:\n        /* \"#utility.yul\":2511:2540   */\n      tag_513\n        /* \"#utility.yul\":2530:2539   */\n      dup5\n        /* \"#utility.yul\":2511:2540   */\n      tag_482\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":2501:2540   */\n      swap3\n      pop\n        /* \"#utility.yul\":2559:2597   */\n      tag_514\n        /* \"#utility.yul\":2593:2595   */\n      0x20\n        /* \"#utility.yul\":2582:2591   */\n      dup6\n        /* \"#utility.yul\":2578:2596   */\n      add\n        /* \"#utility.yul\":2559:2597   */\n      tag_482\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":2326:2700   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2549:2597   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2666:2668   */\n      0x40\n        /* \"#utility.yul\":2651:2669   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2638:2670   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2326:2700   */\n      jump\t// out\n        /* \"#utility.yul\":2705:2891   */\n    tag_107:\n        /* \"#utility.yul\":2764:2770   */\n      0x00\n        /* \"#utility.yul\":2817:2819   */\n      0x20\n        /* \"#utility.yul\":2805:2814   */\n      dup3\n        /* \"#utility.yul\":2796:2803   */\n      dup5\n        /* \"#utility.yul\":2792:2815   */\n      sub\n        /* \"#utility.yul\":2788:2820   */\n      slt\n        /* \"#utility.yul\":2785:2837   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":2833:2834   */\n      0x00\n        /* \"#utility.yul\":2830:2831   */\n      dup1\n        /* \"#utility.yul\":2823:2835   */\n      revert\n        /* \"#utility.yul\":2785:2837   */\n    tag_516:\n        /* \"#utility.yul\":2856:2885   */\n      tag_495\n        /* \"#utility.yul\":2875:2884   */\n      dup3\n        /* \"#utility.yul\":2856:2885   */\n      tag_482\n      jump\t// in\n        /* \"#utility.yul\":2896:3023   */\n    tag_483:\n        /* \"#utility.yul\":2957:2967   */\n      0x4e487b71\n        /* \"#utility.yul\":2952:2955   */\n      0xe0\n        /* \"#utility.yul\":2948:2968   */\n      shl\n        /* \"#utility.yul\":2945:2946   */\n      0x00\n        /* \"#utility.yul\":2938:2969   */\n      mstore\n        /* \"#utility.yul\":2988:2992   */\n      0x41\n        /* \"#utility.yul\":2985:2986   */\n      0x04\n        /* \"#utility.yul\":2978:2993   */\n      mstore\n        /* \"#utility.yul\":3012:3016   */\n      0x24\n        /* \"#utility.yul\":3009:3010   */\n      0x00\n        /* \"#utility.yul\":3002:3017   */\n      revert\n        /* \"#utility.yul\":3028:3744   */\n    tag_484:\n        /* \"#utility.yul\":3093:3098   */\n      0x00\n        /* \"#utility.yul\":3125:3126   */\n      dup1\n        /* \"#utility.yul\":3149:3167   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3141:3147   */\n      dup5\n        /* \"#utility.yul\":3138:3168   */\n      gt\n        /* \"#utility.yul\":3135:3191   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":3171:3189   */\n      tag_521\n      tag_483\n      jump\t// in\n    tag_521:\n      pop\n        /* \"#utility.yul\":3326:3328   */\n      0x40\n        /* \"#utility.yul\":3320:3329   */\n      mload\n      not(0x1f)\n        /* \"#utility.yul\":3239:3241   */\n      0x1f\n        /* \"#utility.yul\":3218:3233   */\n      dup6\n      add\n        /* \"#utility.yul\":3214:3243   */\n      dup2\n      and\n        /* \"#utility.yul\":3384:3386   */\n      0x3f\n        /* \"#utility.yul\":3372:3387   */\n      add\n        /* \"#utility.yul\":3368:3397   */\n      and\n        /* \"#utility.yul\":3356:3398   */\n      dup2\n      add\n        /* \"#utility.yul\":3449:3471   */\n      dup2\n      dup2\n      lt\n        /* \"#utility.yul\":3428:3446   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3413:3447   */\n      dup3\n      gt\n        /* \"#utility.yul\":3410:3472   */\n      or\n        /* \"#utility.yul\":3407:3495   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":3475:3493   */\n      tag_523\n      tag_483\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":3511:3513   */\n      0x40\n        /* \"#utility.yul\":3504:3526   */\n      mstore\n        /* \"#utility.yul\":3559:3581   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3544:3550   */\n      swap1\n      pop\n      dup1\n        /* \"#utility.yul\":3596:3612   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":3593:3618   */\n      dup6\n      lt\n        /* \"#utility.yul\":3590:3635   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":3631:3632   */\n      0x00\n        /* \"#utility.yul\":3628:3629   */\n      dup1\n        /* \"#utility.yul\":3621:3633   */\n      revert\n        /* \"#utility.yul\":3590:3635   */\n    tag_524:\n        /* \"#utility.yul\":3681:3687   */\n      dup4\n        /* \"#utility.yul\":3676:3679   */\n      dup4\n        /* \"#utility.yul\":3669:3673   */\n      0x20\n        /* \"#utility.yul\":3661:3667   */\n      dup4\n        /* \"#utility.yul\":3657:3674   */\n      add\n        /* \"#utility.yul\":3644:3688   */\n      calldatacopy\n        /* \"#utility.yul\":3736:3737   */\n      0x00\n        /* \"#utility.yul\":3729:3733   */\n      0x20\n        /* \"#utility.yul\":3720:3726   */\n      dup6\n        /* \"#utility.yul\":3712:3718   */\n      dup4\n        /* \"#utility.yul\":3708:3727   */\n      add\n        /* \"#utility.yul\":3704:3734   */\n      add\n        /* \"#utility.yul\":3697:3738   */\n      mstore\n      pop\n        /* \"#utility.yul\":3028:3744   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3749:4200   */\n    tag_123:\n        /* \"#utility.yul\":3818:3824   */\n      0x00\n        /* \"#utility.yul\":3871:3873   */\n      0x20\n        /* \"#utility.yul\":3859:3868   */\n      dup3\n        /* \"#utility.yul\":3850:3857   */\n      dup5\n        /* \"#utility.yul\":3846:3869   */\n      sub\n        /* \"#utility.yul\":3842:3874   */\n      slt\n        /* \"#utility.yul\":3839:3891   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":3887:3888   */\n      0x00\n        /* \"#utility.yul\":3884:3885   */\n      dup1\n        /* \"#utility.yul\":3877:3889   */\n      revert\n        /* \"#utility.yul\":3839:3891   */\n    tag_526:\n        /* \"#utility.yul\":3927:3936   */\n      dup2\n        /* \"#utility.yul\":3914:3937   */\n      calldataload\n        /* \"#utility.yul\":3960:3978   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3952:3958   */\n      dup2\n        /* \"#utility.yul\":3949:3979   */\n      gt\n        /* \"#utility.yul\":3946:3996   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":3992:3993   */\n      0x00\n        /* \"#utility.yul\":3989:3990   */\n      dup1\n        /* \"#utility.yul\":3982:3994   */\n      revert\n        /* \"#utility.yul\":3946:3996   */\n    tag_527:\n        /* \"#utility.yul\":4015:4037   */\n      dup3\n      add\n        /* \"#utility.yul\":4068:4072   */\n      0x1f\n        /* \"#utility.yul\":4060:4073   */\n      dup2\n      add\n        /* \"#utility.yul\":4056:4083   */\n      dup5\n      sgt\n        /* \"#utility.yul\":4046:4101   */\n      tag_528\n      jumpi\n        /* \"#utility.yul\":4097:4098   */\n      0x00\n        /* \"#utility.yul\":4094:4095   */\n      dup1\n        /* \"#utility.yul\":4087:4099   */\n      revert\n        /* \"#utility.yul\":4046:4101   */\n    tag_528:\n        /* \"#utility.yul\":4120:4194   */\n      tag_376\n        /* \"#utility.yul\":4186:4193   */\n      dup5\n        /* \"#utility.yul\":4181:4183   */\n      dup3\n        /* \"#utility.yul\":4168:4184   */\n      calldataload\n        /* \"#utility.yul\":4163:4165   */\n      0x20\n        /* \"#utility.yul\":4159:4161   */\n      dup5\n        /* \"#utility.yul\":4155:4166   */\n      add\n        /* \"#utility.yul\":4120:4194   */\n      tag_484\n      jump\t// in\n        /* \"#utility.yul\":4205:4552   */\n    tag_163:\n        /* \"#utility.yul\":4270:4276   */\n      0x00\n        /* \"#utility.yul\":4278:4284   */\n      dup1\n        /* \"#utility.yul\":4331:4333   */\n      0x40\n        /* \"#utility.yul\":4319:4328   */\n      dup4\n        /* \"#utility.yul\":4310:4317   */\n      dup6\n        /* \"#utility.yul\":4306:4329   */\n      sub\n        /* \"#utility.yul\":4302:4334   */\n      slt\n        /* \"#utility.yul\":4299:4351   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":4347:4348   */\n      0x00\n        /* \"#utility.yul\":4344:4345   */\n      dup1\n        /* \"#utility.yul\":4337:4349   */\n      revert\n        /* \"#utility.yul\":4299:4351   */\n    tag_531:\n        /* \"#utility.yul\":4370:4399   */\n      tag_532\n        /* \"#utility.yul\":4389:4398   */\n      dup4\n        /* \"#utility.yul\":4370:4399   */\n      tag_482\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":4360:4399   */\n      swap2\n      pop\n        /* \"#utility.yul\":4449:4451   */\n      0x20\n        /* \"#utility.yul\":4438:4447   */\n      dup4\n        /* \"#utility.yul\":4434:4452   */\n      add\n        /* \"#utility.yul\":4421:4453   */\n      calldataload\n        /* \"#utility.yul\":4496:4501   */\n      dup1\n        /* \"#utility.yul\":4489:4502   */\n      iszero\n        /* \"#utility.yul\":4482:4503   */\n      iszero\n        /* \"#utility.yul\":4475:4480   */\n      dup2\n        /* \"#utility.yul\":4472:4504   */\n      eq\n        /* \"#utility.yul\":4462:4522   */\n      tag_533\n      jumpi\n        /* \"#utility.yul\":4518:4519   */\n      0x00\n        /* \"#utility.yul\":4515:4516   */\n      dup1\n        /* \"#utility.yul\":4508:4520   */\n      revert\n        /* \"#utility.yul\":4462:4522   */\n    tag_533:\n        /* \"#utility.yul\":4541:4546   */\n      dup1\n        /* \"#utility.yul\":4531:4546   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4205:4552   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4557:5270   */\n    tag_168:\n        /* \"#utility.yul\":4652:4658   */\n      0x00\n        /* \"#utility.yul\":4660:4666   */\n      dup1\n        /* \"#utility.yul\":4668:4674   */\n      0x00\n        /* \"#utility.yul\":4676:4682   */\n      dup1\n        /* \"#utility.yul\":4729:4732   */\n      0x80\n        /* \"#utility.yul\":4717:4726   */\n      dup6\n        /* \"#utility.yul\":4708:4715   */\n      dup8\n        /* \"#utility.yul\":4704:4727   */\n      sub\n        /* \"#utility.yul\":4700:4733   */\n      slt\n        /* \"#utility.yul\":4697:4750   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":4746:4747   */\n      0x00\n        /* \"#utility.yul\":4743:4744   */\n      dup1\n        /* \"#utility.yul\":4736:4748   */\n      revert\n        /* \"#utility.yul\":4697:4750   */\n    tag_535:\n        /* \"#utility.yul\":4769:4798   */\n      tag_536\n        /* \"#utility.yul\":4788:4797   */\n      dup6\n        /* \"#utility.yul\":4769:4798   */\n      tag_482\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":4759:4798   */\n      swap4\n      pop\n        /* \"#utility.yul\":4817:4855   */\n      tag_537\n        /* \"#utility.yul\":4851:4853   */\n      0x20\n        /* \"#utility.yul\":4840:4849   */\n      dup7\n        /* \"#utility.yul\":4836:4854   */\n      add\n        /* \"#utility.yul\":4817:4855   */\n      tag_482\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":4807:4855   */\n      swap3\n      pop\n        /* \"#utility.yul\":4924:4926   */\n      0x40\n        /* \"#utility.yul\":4909:4927   */\n      dup6\n      add\n        /* \"#utility.yul\":4896:4928   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5003:5005   */\n      0x60\n        /* \"#utility.yul\":4988:5006   */\n      dup6\n      add\n        /* \"#utility.yul\":4975:5007   */\n      calldataload\n        /* \"#utility.yul\":5030:5048   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5019:5049   */\n      dup2\n      gt\n        /* \"#utility.yul\":5016:5066   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":5062:5063   */\n      0x00\n        /* \"#utility.yul\":5059:5060   */\n      dup1\n        /* \"#utility.yul\":5052:5064   */\n      revert\n        /* \"#utility.yul\":5016:5066   */\n    tag_538:\n        /* \"#utility.yul\":5085:5107   */\n      dup6\n      add\n        /* \"#utility.yul\":5138:5142   */\n      0x1f\n        /* \"#utility.yul\":5130:5143   */\n      dup2\n      add\n        /* \"#utility.yul\":5126:5153   */\n      dup8\n      sgt\n        /* \"#utility.yul\":5116:5171   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":5167:5168   */\n      0x00\n        /* \"#utility.yul\":5164:5165   */\n      dup1\n        /* \"#utility.yul\":5157:5169   */\n      revert\n        /* \"#utility.yul\":5116:5171   */\n    tag_539:\n        /* \"#utility.yul\":5190:5264   */\n      tag_540\n        /* \"#utility.yul\":5256:5263   */\n      dup8\n        /* \"#utility.yul\":5251:5253   */\n      dup3\n        /* \"#utility.yul\":5238:5254   */\n      calldataload\n        /* \"#utility.yul\":5233:5235   */\n      0x20\n        /* \"#utility.yul\":5229:5231   */\n      dup5\n        /* \"#utility.yul\":5225:5236   */\n      add\n        /* \"#utility.yul\":5190:5264   */\n      tag_484\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":5180:5264   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4557:5270   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5275:5535   */\n    tag_190:\n        /* \"#utility.yul\":5343:5349   */\n      0x00\n        /* \"#utility.yul\":5351:5357   */\n      dup1\n        /* \"#utility.yul\":5404:5406   */\n      0x40\n        /* \"#utility.yul\":5392:5401   */\n      dup4\n        /* \"#utility.yul\":5383:5390   */\n      dup6\n        /* \"#utility.yul\":5379:5402   */\n      sub\n        /* \"#utility.yul\":5375:5407   */\n      slt\n        /* \"#utility.yul\":5372:5424   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":5420:5421   */\n      0x00\n        /* \"#utility.yul\":5417:5418   */\n      dup1\n        /* \"#utility.yul\":5410:5422   */\n      revert\n        /* \"#utility.yul\":5372:5424   */\n    tag_542:\n        /* \"#utility.yul\":5443:5472   */\n      tag_543\n        /* \"#utility.yul\":5462:5471   */\n      dup4\n        /* \"#utility.yul\":5443:5472   */\n      tag_482\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":5433:5472   */\n      swap2\n      pop\n        /* \"#utility.yul\":5491:5529   */\n      tag_544\n        /* \"#utility.yul\":5525:5527   */\n      0x20\n        /* \"#utility.yul\":5514:5523   */\n      dup5\n        /* \"#utility.yul\":5510:5528   */\n      add\n        /* \"#utility.yul\":5491:5529   */\n      tag_482\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":5481:5529   */\n      swap1\n      pop\n        /* \"#utility.yul\":5275:5535   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5762:5889   */\n    tag_485:\n        /* \"#utility.yul\":5823:5833   */\n      0x4e487b71\n        /* \"#utility.yul\":5818:5821   */\n      0xe0\n        /* \"#utility.yul\":5814:5834   */\n      shl\n        /* \"#utility.yul\":5811:5812   */\n      0x00\n        /* \"#utility.yul\":5804:5835   */\n      mstore\n        /* \"#utility.yul\":5854:5858   */\n      0x11\n        /* \"#utility.yul\":5851:5852   */\n      0x04\n        /* \"#utility.yul\":5844:5859   */\n      mstore\n        /* \"#utility.yul\":5878:5882   */\n      0x24\n        /* \"#utility.yul\":5875:5876   */\n      0x00\n        /* \"#utility.yul\":5868:5883   */\n      revert\n        /* \"#utility.yul\":5894:6019   */\n    tag_215:\n        /* \"#utility.yul\":5959:5968   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5980:5990   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5977:6013   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":5993:6011   */\n      tag_209\n      tag_485\n      jump\t// in\n        /* \"#utility.yul\":6024:6404   */\n    tag_218:\n        /* \"#utility.yul\":6103:6104   */\n      0x01\n        /* \"#utility.yul\":6099:6111   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6146:6158   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6167:6228   */\n      tag_551\n      jumpi\n        /* \"#utility.yul\":6221:6225   */\n      0x7f\n        /* \"#utility.yul\":6213:6219   */\n      dup3\n        /* \"#utility.yul\":6209:6226   */\n      and\n        /* \"#utility.yul\":6199:6226   */\n      swap2\n      pop\n        /* \"#utility.yul\":6167:6228   */\n    tag_551:\n        /* \"#utility.yul\":6274:6276   */\n      0x20\n        /* \"#utility.yul\":6266:6272   */\n      dup3\n        /* \"#utility.yul\":6263:6277   */\n      lt\n        /* \"#utility.yul\":6243:6261   */\n      dup2\n        /* \"#utility.yul\":6240:6278   */\n      sub\n        /* \"#utility.yul\":6237:6398   */\n      tag_552\n      jumpi\n        /* \"#utility.yul\":6320:6330   */\n      0x4e487b71\n        /* \"#utility.yul\":6315:6318   */\n      0xe0\n        /* \"#utility.yul\":6311:6331   */\n      shl\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6301:6332   */\n      mstore\n        /* \"#utility.yul\":6355:6359   */\n      0x22\n        /* \"#utility.yul\":6352:6353   */\n      0x04\n        /* \"#utility.yul\":6345:6360   */\n      mstore\n        /* \"#utility.yul\":6383:6387   */\n      0x24\n        /* \"#utility.yul\":6380:6381   */\n      0x00\n        /* \"#utility.yul\":6373:6388   */\n      revert\n        /* \"#utility.yul\":6237:6398   */\n    tag_552:\n      pop\n        /* \"#utility.yul\":6024:6404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7064:7191   */\n    tag_269:\n        /* \"#utility.yul\":7125:7135   */\n      0x4e487b71\n        /* \"#utility.yul\":7120:7123   */\n      0xe0\n        /* \"#utility.yul\":7116:7136   */\n      shl\n        /* \"#utility.yul\":7113:7114   */\n      0x00\n        /* \"#utility.yul\":7106:7137   */\n      mstore\n        /* \"#utility.yul\":7156:7160   */\n      0x32\n        /* \"#utility.yul\":7153:7154   */\n      0x04\n        /* \"#utility.yul\":7146:7161   */\n      mstore\n        /* \"#utility.yul\":7180:7184   */\n      0x24\n        /* \"#utility.yul\":7177:7178   */\n      0x00\n        /* \"#utility.yul\":7170:7185   */\n      revert\n        /* \"#utility.yul\":7891:8026   */\n    tag_279:\n        /* \"#utility.yul\":7930:7933   */\n      0x00\n        /* \"#utility.yul\":7951:7968   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":7948:7991   */\n      tag_560\n      jumpi\n        /* \"#utility.yul\":7971:7989   */\n      tag_560\n      tag_485\n      jump\t// in\n    tag_560:\n      pop\n        /* \"#utility.yul\":8018:8019   */\n      0x01\n        /* \"#utility.yul\":8007:8020   */\n      add\n      swap1\n        /* \"#utility.yul\":7891:8026   */\n      jump\t// out\n        /* \"#utility.yul\":8862:9380   */\n    tag_487:\n        /* \"#utility.yul\":8964:8966   */\n      0x1f\n        /* \"#utility.yul\":8959:8962   */\n      dup3\n        /* \"#utility.yul\":8956:8967   */\n      gt\n        /* \"#utility.yul\":8953:9374   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":9000:9005   */\n      dup1\n        /* \"#utility.yul\":8997:8998   */\n      0x00\n        /* \"#utility.yul\":8990:9006   */\n      mstore\n        /* \"#utility.yul\":9044:9048   */\n      0x20\n        /* \"#utility.yul\":9041:9042   */\n      0x00\n        /* \"#utility.yul\":9031:9049   */\n      keccak256\n        /* \"#utility.yul\":9114:9116   */\n      0x1f\n        /* \"#utility.yul\":9102:9112   */\n      dup5\n        /* \"#utility.yul\":9098:9117   */\n      add\n        /* \"#utility.yul\":9095:9096   */\n      0x05\n        /* \"#utility.yul\":9091:9118   */\n      shr\n        /* \"#utility.yul\":9085:9089   */\n      dup2\n        /* \"#utility.yul\":9081:9119   */\n      add\n        /* \"#utility.yul\":9150:9154   */\n      0x20\n        /* \"#utility.yul\":9138:9148   */\n      dup6\n        /* \"#utility.yul\":9135:9155   */\n      lt\n        /* \"#utility.yul\":9132:9179   */\n      iszero\n      tag_566\n      jumpi\n      pop\n        /* \"#utility.yul\":9173:9177   */\n      dup1\n        /* \"#utility.yul\":9132:9179   */\n    tag_566:\n        /* \"#utility.yul\":9228:9230   */\n      0x1f\n        /* \"#utility.yul\":9223:9226   */\n      dup5\n        /* \"#utility.yul\":9219:9231   */\n      add\n        /* \"#utility.yul\":9216:9217   */\n      0x05\n        /* \"#utility.yul\":9212:9232   */\n      shr\n        /* \"#utility.yul\":9206:9210   */\n      dup3\n        /* \"#utility.yul\":9202:9233   */\n      add\n        /* \"#utility.yul\":9192:9233   */\n      swap2\n      pop\n        /* \"#utility.yul\":9283:9364   */\n    tag_567:\n        /* \"#utility.yul\":9301:9303   */\n      dup2\n        /* \"#utility.yul\":9294:9299   */\n      dup2\n        /* \"#utility.yul\":9291:9304   */\n      lt\n        /* \"#utility.yul\":9283:9364   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":9360:9361   */\n      0x00\n        /* \"#utility.yul\":9346:9362   */\n      dup2\n      sstore\n        /* \"#utility.yul\":9327:9328   */\n      0x01\n        /* \"#utility.yul\":9316:9329   */\n      add\n        /* \"#utility.yul\":9283:9364   */\n      jump(tag_567)\n        /* \"#utility.yul\":9556:10855   */\n    tag_389:\n        /* \"#utility.yul\":9682:9685   */\n      dup2\n        /* \"#utility.yul\":9676:9686   */\n      mload\n        /* \"#utility.yul\":9709:9727   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9701:9707   */\n      dup2\n        /* \"#utility.yul\":9698:9728   */\n      gt\n        /* \"#utility.yul\":9695:9751   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":9731:9749   */\n      tag_573\n      tag_483\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":9760:9857   */\n      tag_574\n        /* \"#utility.yul\":9850:9856   */\n      dup2\n        /* \"#utility.yul\":9810:9848   */\n      tag_575\n        /* \"#utility.yul\":9842:9846   */\n      dup5\n        /* \"#utility.yul\":9836:9847   */\n      sload\n        /* \"#utility.yul\":9810:9848   */\n      tag_218\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":9804:9808   */\n      dup5\n        /* \"#utility.yul\":9760:9857   */\n      tag_487\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":9906:9910   */\n      0x20\n        /* \"#utility.yul\":9937:9939   */\n      0x1f\n        /* \"#utility.yul\":9926:9940   */\n      dup3\n      gt\n        /* \"#utility.yul\":9954:9955   */\n      0x01\n        /* \"#utility.yul\":9949:10598   */\n      dup2\n      eq\n      tag_577\n      jumpi\n        /* \"#utility.yul\":10642:10643   */\n      0x00\n        /* \"#utility.yul\":10659:10665   */\n      dup4\n        /* \"#utility.yul\":10656:10745   */\n      iszero\n      tag_578\n      jumpi\n      pop\n        /* \"#utility.yul\":10711:10730   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":10705:10731   */\n      mload\n        /* \"#utility.yul\":10656:10745   */\n    tag_578:\n      not(0x00)\n        /* \"#utility.yul\":9513:9514   */\n      0x03\n        /* \"#utility.yul\":9509:9520   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":9505:9529   */\n      shr\n        /* \"#utility.yul\":9501:9530   */\n      not\n        /* \"#utility.yul\":9491:9531   */\n      and\n        /* \"#utility.yul\":9537:9538   */\n      0x01\n        /* \"#utility.yul\":9533:9544   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":9488:9545   */\n      or\n        /* \"#utility.yul\":10758:10839   */\n      dup5\n      sstore\n        /* \"#utility.yul\":9919:10849   */\n      jump(tag_413)\n        /* \"#utility.yul\":9949:10598   */\n    tag_577:\n        /* \"#utility.yul\":8809:8810   */\n      0x00\n        /* \"#utility.yul\":8802:8816   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":8846:8850   */\n      0x20\n        /* \"#utility.yul\":8833:8851   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":9985:10005   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":10103:10325   */\n    tag_581:\n        /* \"#utility.yul\":10117:10124   */\n      dup3\n        /* \"#utility.yul\":10114:10115   */\n      dup2\n        /* \"#utility.yul\":10111:10125   */\n      lt\n        /* \"#utility.yul\":10103:10325   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":10199:10218   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":10193:10219   */\n      mload\n        /* \"#utility.yul\":10178:10220   */\n      dup3\n      sstore\n        /* \"#utility.yul\":10306:10310   */\n      0x20\n        /* \"#utility.yul\":10291:10311   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":10259:10260   */\n      0x01\n        /* \"#utility.yul\":10247:10261   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":10133:10145   */\n      add\n        /* \"#utility.yul\":10103:10325   */\n      jump(tag_581)\n    tag_583:\n        /* \"#utility.yul\":10107:10110   */\n      pop\n        /* \"#utility.yul\":10353:10359   */\n      dup5\n        /* \"#utility.yul\":10344:10351   */\n      dup3\n        /* \"#utility.yul\":10341:10360   */\n      lt\n        /* \"#utility.yul\":10338:10539   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":10414:10433   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":10408:10434   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":10497:10498   */\n      0x03\n        /* \"#utility.yul\":10493:10507   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":10509:10512   */\n      0xf8\n        /* \"#utility.yul\":10489:10513   */\n      and\n        /* \"#utility.yul\":10485:10522   */\n      shr\n        /* \"#utility.yul\":10481:10523   */\n      not\n        /* \"#utility.yul\":10466:10524   */\n      and\n        /* \"#utility.yul\":10451:10525   */\n      dup2\n      sstore\n        /* \"#utility.yul\":10338:10539   */\n    tag_584:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10585:10586   */\n      0x01\n        /* \"#utility.yul\":10569:10583   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":10565:10587   */\n      add\n        /* \"#utility.yul\":10552:10588   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":9556:10855   */\n      jump\t// out\n        /* \"#utility.yul\":10860:11345   */\n    tag_399:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11091:11123   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11073:11124   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11160:11192   */\n      dup5\n      and\n        /* \"#utility.yul\":11155:11157   */\n      0x20\n        /* \"#utility.yul\":11140:11158   */\n      dup3\n      add\n        /* \"#utility.yul\":11133:11193   */\n      mstore\n        /* \"#utility.yul\":11224:11226   */\n      0x40\n        /* \"#utility.yul\":11209:11227   */\n      dup2\n      add\n        /* \"#utility.yul\":11202:11236   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11272:11275   */\n      0x80\n        /* \"#utility.yul\":11267:11269   */\n      0x60\n        /* \"#utility.yul\":11252:11270   */\n      dup3\n      add\n        /* \"#utility.yul\":11245:11276   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":11293:11339   */\n      tag_586\n      swap1\n        /* \"#utility.yul\":11319:11338   */\n      dup4\n      add\n        /* \"#utility.yul\":11311:11317   */\n      dup5\n        /* \"#utility.yul\":11293:11339   */\n      tag_481\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":11285:11339   */\n      swap7\n        /* \"#utility.yul\":10860:11345   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11350:11599   */\n    tag_402:\n        /* \"#utility.yul\":11419:11425   */\n      0x00\n        /* \"#utility.yul\":11472:11474   */\n      0x20\n        /* \"#utility.yul\":11460:11469   */\n      dup3\n        /* \"#utility.yul\":11451:11458   */\n      dup5\n        /* \"#utility.yul\":11447:11470   */\n      sub\n        /* \"#utility.yul\":11443:11475   */\n      slt\n        /* \"#utility.yul\":11440:11492   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":11488:11489   */\n      0x00\n        /* \"#utility.yul\":11485:11486   */\n      dup1\n        /* \"#utility.yul\":11478:11490   */\n      revert\n        /* \"#utility.yul\":11440:11492   */\n    tag_588:\n        /* \"#utility.yul\":11520:11529   */\n      dup2\n        /* \"#utility.yul\":11514:11530   */\n      mload\n        /* \"#utility.yul\":11539:11569   */\n      tag_495\n        /* \"#utility.yul\":11563:11568   */\n      dup2\n        /* \"#utility.yul\":11539:11569   */\n      tag_480\n      jump\t// in\n        /* \"#utility.yul\":11604:11732   */\n    tag_442:\n        /* \"#utility.yul\":11671:11680   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":11692:11703   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":11689:11726   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":11706:11724   */\n      tag_209\n      tag_485\n      jump\t// in\n        /* \"#utility.yul\":11737:11864   */\n    tag_451:\n        /* \"#utility.yul\":11798:11808   */\n      0x4e487b71\n        /* \"#utility.yul\":11793:11796   */\n      0xe0\n        /* \"#utility.yul\":11789:11809   */\n      shl\n        /* \"#utility.yul\":11786:11787   */\n      0x00\n        /* \"#utility.yul\":11779:11810   */\n      mstore\n        /* \"#utility.yul\":11829:11833   */\n      0x31\n        /* \"#utility.yul\":11826:11827   */\n      0x04\n        /* \"#utility.yul\":11819:11834   */\n      mstore\n        /* \"#utility.yul\":11853:11857   */\n      0x24\n        /* \"#utility.yul\":11850:11851   */\n      0x00\n        /* \"#utility.yul\":11843:11858   */\n      revert\n\n    auxdata: 0xa2646970667358221220ee74cac879b28e8bfbdee495019d9c67c93ce68aca16621f92649cbb20a18bc964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3510": {
									"entryPoint": null,
									"id": 3510,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_432": {
									"entryPoint": null,
									"id": 432,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 260,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$362t_uint256_fromMemory": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3624:16",
										"nodeType": "YulBlock",
										"src": "0:3624:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "143:403:16",
													"nodeType": "YulBlock",
													"src": "143:403:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "189:16:16",
																"nodeType": "YulBlock",
																"src": "189:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "198:1:16",
																					"nodeType": "YulLiteral",
																					"src": "198:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "201:1:16",
																					"nodeType": "YulLiteral",
																					"src": "201:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "191:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "191:6:16"
																			},
																			"nativeSrc": "191:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "191:12:16"
																		},
																		"nativeSrc": "191:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "191:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "164:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "164:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "173:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "173:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "160:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "160:3:16"
																		},
																		"nativeSrc": "160:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "160:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "185:2:16",
																		"nodeType": "YulLiteral",
																		"src": "185:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "156:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:16"
																},
																"nativeSrc": "156:32:16",
																"nodeType": "YulFunctionCall",
																"src": "156:32:16"
															},
															"nativeSrc": "153:52:16",
															"nodeType": "YulIf",
															"src": "153:52:16"
														},
														{
															"nativeSrc": "214:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "214:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "227:1:16",
																"nodeType": "YulLiteral",
																"src": "227:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "218:5:16",
																	"nodeType": "YulTypedName",
																	"src": "218:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "237:25:16",
															"nodeType": "YulAssignment",
															"src": "237:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "252:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "252:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "246:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "246:5:16"
																},
																"nativeSrc": "246:16:16",
																"nodeType": "YulFunctionCall",
																"src": "246:16:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "237:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "237:5:16"
																}
															]
														},
														{
															"nativeSrc": "271:15:16",
															"nodeType": "YulAssignment",
															"src": "271:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "281:5:16",
																"nodeType": "YulIdentifier",
																"src": "281:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "271:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:16"
																}
															]
														},
														{
															"nativeSrc": "295:40:16",
															"nodeType": "YulVariableDeclaration",
															"src": "295:40:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "320:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "320:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "331:2:16",
																				"nodeType": "YulLiteral",
																				"src": "331:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "316:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "316:3:16"
																		},
																		"nativeSrc": "316:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "316:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "310:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "310:5:16"
																},
																"nativeSrc": "310:25:16",
																"nodeType": "YulFunctionCall",
																"src": "310:25:16"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "299:7:16",
																	"nodeType": "YulTypedName",
																	"src": "299:7:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "402:16:16",
																"nodeType": "YulBlock",
																"src": "402:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "411:1:16",
																					"nodeType": "YulLiteral",
																					"src": "411:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:1:16",
																					"nodeType": "YulLiteral",
																					"src": "414:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "404:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "404:6:16"
																			},
																			"nativeSrc": "404:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "404:12:16"
																		},
																		"nativeSrc": "404:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "404:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "357:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "357:7:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nativeSrc": "370:7:16",
																						"nodeType": "YulIdentifier",
																						"src": "370:7:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "387:3:16",
																										"nodeType": "YulLiteral",
																										"src": "387:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "392:1:16",
																										"nodeType": "YulLiteral",
																										"src": "392:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "383:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "383:3:16"
																								},
																								"nativeSrc": "383:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "383:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "396:1:16",
																								"nodeType": "YulLiteral",
																								"src": "396:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "379:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "379:3:16"
																						},
																						"nativeSrc": "379:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "379:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "366:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "366:3:16"
																				},
																				"nativeSrc": "366:33:16",
																				"nodeType": "YulFunctionCall",
																				"src": "366:33:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "354:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "354:2:16"
																		},
																		"nativeSrc": "354:46:16",
																		"nodeType": "YulFunctionCall",
																		"src": "354:46:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "347:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "347:6:16"
																},
																"nativeSrc": "347:54:16",
																"nodeType": "YulFunctionCall",
																"src": "347:54:16"
															},
															"nativeSrc": "344:74:16",
															"nodeType": "YulIf",
															"src": "344:74:16"
														},
														{
															"nativeSrc": "427:17:16",
															"nodeType": "YulAssignment",
															"src": "427:17:16",
															"value": {
																"name": "value_1",
																"nativeSrc": "437:7:16",
																"nodeType": "YulIdentifier",
																"src": "437:7:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "427:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "427:6:16"
																}
															]
														},
														{
															"nativeSrc": "453:16:16",
															"nodeType": "YulVariableDeclaration",
															"src": "453:16:16",
															"value": {
																"kind": "number",
																"nativeSrc": "468:1:16",
																"nodeType": "YulLiteral",
																"src": "468:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "457:7:16",
																	"nodeType": "YulTypedName",
																	"src": "457:7:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "478:36:16",
															"nodeType": "YulAssignment",
															"src": "478:36:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "499:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "499:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "510:2:16",
																				"nodeType": "YulLiteral",
																				"src": "510:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "495:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "495:3:16"
																		},
																		"nativeSrc": "495:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "495:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "489:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "489:5:16"
																},
																"nativeSrc": "489:25:16",
																"nodeType": "YulFunctionCall",
																"src": "489:25:16"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "478:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "478:7:16"
																}
															]
														},
														{
															"nativeSrc": "523:17:16",
															"nodeType": "YulAssignment",
															"src": "523:17:16",
															"value": {
																"name": "value_2",
																"nativeSrc": "533:7:16",
																"nodeType": "YulIdentifier",
																"src": "533:7:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "523:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$362t_uint256_fromMemory",
												"nativeSrc": "14:532:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "93:9:16",
														"nodeType": "YulTypedName",
														"src": "93:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "104:7:16",
														"nodeType": "YulTypedName",
														"src": "104:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "116:6:16",
														"nodeType": "YulTypedName",
														"src": "116:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "124:6:16",
														"nodeType": "YulTypedName",
														"src": "124:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "132:6:16",
														"nodeType": "YulTypedName",
														"src": "132:6:16",
														"type": ""
													}
												],
												"src": "14:532:16"
											},
											{
												"body": {
													"nativeSrc": "583:95:16",
													"nodeType": "YulBlock",
													"src": "583:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "600:1:16",
																		"nodeType": "YulLiteral",
																		"src": "600:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "607:3:16",
																				"nodeType": "YulLiteral",
																				"src": "607:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "612:10:16",
																				"nodeType": "YulLiteral",
																				"src": "612:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "603:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "603:3:16"
																		},
																		"nativeSrc": "603:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "603:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "593:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "593:6:16"
																},
																"nativeSrc": "593:31:16",
																"nodeType": "YulFunctionCall",
																"src": "593:31:16"
															},
															"nativeSrc": "593:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "593:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "640:1:16",
																		"nodeType": "YulLiteral",
																		"src": "640:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "643:4:16",
																		"nodeType": "YulLiteral",
																		"src": "643:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "633:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "633:6:16"
																},
																"nativeSrc": "633:15:16",
																"nodeType": "YulFunctionCall",
																"src": "633:15:16"
															},
															"nativeSrc": "633:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "633:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "664:1:16",
																		"nodeType": "YulLiteral",
																		"src": "664:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "667:4:16",
																		"nodeType": "YulLiteral",
																		"src": "667:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "657:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "657:6:16"
																},
																"nativeSrc": "657:15:16",
																"nodeType": "YulFunctionCall",
																"src": "657:15:16"
															},
															"nativeSrc": "657:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "657:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "551:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "551:127:16"
											},
											{
												"body": {
													"nativeSrc": "738:325:16",
													"nodeType": "YulBlock",
													"src": "738:325:16",
													"statements": [
														{
															"nativeSrc": "748:22:16",
															"nodeType": "YulAssignment",
															"src": "748:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "762:1:16",
																		"nodeType": "YulLiteral",
																		"src": "762:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "765:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "765:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "758:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "758:3:16"
																},
																"nativeSrc": "758:12:16",
																"nodeType": "YulFunctionCall",
																"src": "758:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "748:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "748:6:16"
																}
															]
														},
														{
															"nativeSrc": "779:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "779:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "809:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "809:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "815:1:16",
																		"nodeType": "YulLiteral",
																		"src": "815:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "805:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "805:3:16"
																},
																"nativeSrc": "805:12:16",
																"nodeType": "YulFunctionCall",
																"src": "805:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "783:18:16",
																	"nodeType": "YulTypedName",
																	"src": "783:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "856:31:16",
																"nodeType": "YulBlock",
																"src": "856:31:16",
																"statements": [
																	{
																		"nativeSrc": "858:27:16",
																		"nodeType": "YulAssignment",
																		"src": "858:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "872:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "872:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "880:4:16",
																					"nodeType": "YulLiteral",
																					"src": "880:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "868:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "868:3:16"
																			},
																			"nativeSrc": "868:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "868:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "858:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "858:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "836:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "836:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "829:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "829:6:16"
																},
																"nativeSrc": "829:26:16",
																"nodeType": "YulFunctionCall",
																"src": "829:26:16"
															},
															"nativeSrc": "826:61:16",
															"nodeType": "YulIf",
															"src": "826:61:16"
														},
														{
															"body": {
																"nativeSrc": "946:111:16",
																"nodeType": "YulBlock",
																"src": "946:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "967:1:16",
																					"nodeType": "YulLiteral",
																					"src": "967:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "974:3:16",
																							"nodeType": "YulLiteral",
																							"src": "974:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "979:10:16",
																							"nodeType": "YulLiteral",
																							"src": "979:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "970:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "970:3:16"
																					},
																					"nativeSrc": "970:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "970:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "960:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "960:6:16"
																			},
																			"nativeSrc": "960:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "960:31:16"
																		},
																		"nativeSrc": "960:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "960:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1011:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1011:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1014:4:16",
																					"nodeType": "YulLiteral",
																					"src": "1014:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1004:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1004:6:16"
																			},
																			"nativeSrc": "1004:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:15:16"
																		},
																		"nativeSrc": "1004:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1039:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1039:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1042:4:16",
																					"nodeType": "YulLiteral",
																					"src": "1042:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1032:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1032:6:16"
																			},
																			"nativeSrc": "1032:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1032:15:16"
																		},
																		"nativeSrc": "1032:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1032:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "902:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "902:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "925:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "925:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "933:2:16",
																				"nodeType": "YulLiteral",
																				"src": "933:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "922:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "922:2:16"
																		},
																		"nativeSrc": "922:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "922:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "899:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "899:2:16"
																},
																"nativeSrc": "899:38:16",
																"nodeType": "YulFunctionCall",
																"src": "899:38:16"
															},
															"nativeSrc": "896:161:16",
															"nodeType": "YulIf",
															"src": "896:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "683:380:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "718:4:16",
														"nodeType": "YulTypedName",
														"src": "718:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "727:6:16",
														"nodeType": "YulTypedName",
														"src": "727:6:16",
														"type": ""
													}
												],
												"src": "683:380:16"
											},
											{
												"body": {
													"nativeSrc": "1124:65:16",
													"nodeType": "YulBlock",
													"src": "1124:65:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1141:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1141:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1144:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1144:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1134:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1134:6:16"
																},
																"nativeSrc": "1134:14:16",
																"nodeType": "YulFunctionCall",
																"src": "1134:14:16"
															},
															"nativeSrc": "1134:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "1134:14:16"
														},
														{
															"nativeSrc": "1157:26:16",
															"nodeType": "YulAssignment",
															"src": "1157:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1175:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1175:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1178:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1178:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1165:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "1165:9:16"
																},
																"nativeSrc": "1165:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1165:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1157:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1157:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1068:121:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1107:3:16",
														"nodeType": "YulTypedName",
														"src": "1107:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1115:4:16",
														"nodeType": "YulTypedName",
														"src": "1115:4:16",
														"type": ""
													}
												],
												"src": "1068:121:16"
											},
											{
												"body": {
													"nativeSrc": "1275:437:16",
													"nodeType": "YulBlock",
													"src": "1275:437:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1308:398:16",
																"nodeType": "YulBlock",
																"src": "1308:398:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1329:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1329:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1332:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "1332:5:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1322:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1322:6:16"
																			},
																			"nativeSrc": "1322:16:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1322:16:16"
																		},
																		"nativeSrc": "1322:16:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1322:16:16"
																	},
																	{
																		"nativeSrc": "1351:30:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1351:30:16",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1373:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1373:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1376:4:16",
																					"nodeType": "YulLiteral",
																					"src": "1376:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1363:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1363:9:16"
																			},
																			"nativeSrc": "1363:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1363:18:16"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1355:4:16",
																				"nodeType": "YulTypedName",
																				"src": "1355:4:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1394:57:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1394:57:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1417:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "1417:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1427:1:16",
																							"nodeType": "YulLiteral",
																							"src": "1427:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1434:10:16",
																									"nodeType": "YulIdentifier",
																									"src": "1434:10:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1446:2:16",
																									"nodeType": "YulLiteral",
																									"src": "1446:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1430:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "1430:3:16"
																							},
																							"nativeSrc": "1430:19:16",
																							"nodeType": "YulFunctionCall",
																							"src": "1430:19:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1423:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "1423:3:16"
																					},
																					"nativeSrc": "1423:27:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1423:27:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1413:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1413:3:16"
																			},
																			"nativeSrc": "1413:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1413:38:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1398:11:16",
																				"nodeType": "YulTypedName",
																				"src": "1398:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1488:23:16",
																			"nodeType": "YulBlock",
																			"src": "1488:23:16",
																			"statements": [
																				{
																					"nativeSrc": "1490:19:16",
																					"nodeType": "YulAssignment",
																					"src": "1490:19:16",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1505:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "1505:4:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1490:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "1490:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1470:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "1470:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1482:4:16",
																					"nodeType": "YulLiteral",
																					"src": "1482:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1467:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "1467:2:16"
																			},
																			"nativeSrc": "1467:20:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1467:20:16"
																		},
																		"nativeSrc": "1464:47:16",
																		"nodeType": "YulIf",
																		"src": "1464:47:16"
																	},
																	{
																		"nativeSrc": "1524:41:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1524:41:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1538:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "1538:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1548:1:16",
																							"nodeType": "YulLiteral",
																							"src": "1548:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1555:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1555:3:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1560:2:16",
																									"nodeType": "YulLiteral",
																									"src": "1560:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1551:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "1551:3:16"
																							},
																							"nativeSrc": "1551:12:16",
																							"nodeType": "YulFunctionCall",
																							"src": "1551:12:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1544:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "1544:3:16"
																					},
																					"nativeSrc": "1544:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1544:20:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1534:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1534:3:16"
																			},
																			"nativeSrc": "1534:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1534:31:16"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1528:2:16",
																				"nodeType": "YulTypedName",
																				"src": "1528:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1578:24:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1578:24:16",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1591:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "1591:11:16"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1582:5:16",
																				"nodeType": "YulTypedName",
																				"src": "1582:5:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1676:20:16",
																			"nodeType": "YulBlock",
																			"src": "1676:20:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1685:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "1685:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1692:1:16",
																								"nodeType": "YulLiteral",
																								"src": "1692:1:16",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1678:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "1678:6:16"
																						},
																						"nativeSrc": "1678:16:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1678:16:16"
																					},
																					"nativeSrc": "1678:16:16",
																					"nodeType": "YulExpressionStatement",
																					"src": "1678:16:16"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1626:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "1626:5:16"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1633:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "1633:2:16"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1623:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "1623:2:16"
																			},
																			"nativeSrc": "1623:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1623:13:16"
																		},
																		"nativeSrc": "1615:81:16",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1637:26:16",
																			"nodeType": "YulBlock",
																			"src": "1637:26:16",
																			"statements": [
																				{
																					"nativeSrc": "1639:22:16",
																					"nodeType": "YulAssignment",
																					"src": "1639:22:16",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1652:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "1652:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1659:1:16",
																								"nodeType": "YulLiteral",
																								"src": "1659:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1648:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1648:3:16"
																						},
																						"nativeSrc": "1648:13:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1648:13:16"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1639:5:16",
																							"nodeType": "YulIdentifier",
																							"src": "1639:5:16"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1619:3:16",
																			"nodeType": "YulBlock",
																			"src": "1619:3:16",
																			"statements": []
																		},
																		"src": "1615:81:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1291:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1291:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1296:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1296:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1288:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1288:2:16"
																},
																"nativeSrc": "1288:11:16",
																"nodeType": "YulFunctionCall",
																"src": "1288:11:16"
															},
															"nativeSrc": "1285:421:16",
															"nodeType": "YulIf",
															"src": "1285:421:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1194:518:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1247:5:16",
														"nodeType": "YulTypedName",
														"src": "1247:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1254:3:16",
														"nodeType": "YulTypedName",
														"src": "1254:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1259:10:16",
														"nodeType": "YulTypedName",
														"src": "1259:10:16",
														"type": ""
													}
												],
												"src": "1194:518:16"
											},
											{
												"body": {
													"nativeSrc": "1802:81:16",
													"nodeType": "YulBlock",
													"src": "1802:81:16",
													"statements": [
														{
															"nativeSrc": "1812:65:16",
															"nodeType": "YulAssignment",
															"src": "1812:65:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1827:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "1827:4:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1845:1:16",
																										"nodeType": "YulLiteral",
																										"src": "1845:1:16",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1848:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "1848:3:16"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1841:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1841:3:16"
																								},
																								"nativeSrc": "1841:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "1841:11:16"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1858:1:16",
																										"nodeType": "YulLiteral",
																										"src": "1858:1:16",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1854:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1854:3:16"
																								},
																								"nativeSrc": "1854:6:16",
																								"nodeType": "YulFunctionCall",
																								"src": "1854:6:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1837:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1837:3:16"
																						},
																						"nativeSrc": "1837:24:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1837:24:16"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1833:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1833:3:16"
																				},
																				"nativeSrc": "1833:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1833:29:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1823:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1823:3:16"
																		},
																		"nativeSrc": "1823:40:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1823:40:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1869:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1869:1:16",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1872:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1865:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1865:3:16"
																		},
																		"nativeSrc": "1865:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1865:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1820:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1820:2:16"
																},
																"nativeSrc": "1820:57:16",
																"nodeType": "YulFunctionCall",
																"src": "1820:57:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1812:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1812:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1717:166:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1779:4:16",
														"nodeType": "YulTypedName",
														"src": "1779:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1785:3:16",
														"nodeType": "YulTypedName",
														"src": "1785:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1793:4:16",
														"nodeType": "YulTypedName",
														"src": "1793:4:16",
														"type": ""
													}
												],
												"src": "1717:166:16"
											},
											{
												"body": {
													"nativeSrc": "1984:1203:16",
													"nodeType": "YulBlock",
													"src": "1984:1203:16",
													"statements": [
														{
															"nativeSrc": "1994:24:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1994:24:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2014:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2014:3:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2008:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2008:5:16"
																},
																"nativeSrc": "2008:10:16",
																"nodeType": "YulFunctionCall",
																"src": "2008:10:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1998:6:16",
																	"nodeType": "YulTypedName",
																	"src": "1998:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2061:22:16",
																"nodeType": "YulBlock",
																"src": "2061:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2063:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "2063:16:16"
																			},
																			"nativeSrc": "2063:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2063:18:16"
																		},
																		"nativeSrc": "2063:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2063:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2033:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2033:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2049:2:16",
																						"nodeType": "YulLiteral",
																						"src": "2049:2:16",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2053:1:16",
																						"nodeType": "YulLiteral",
																						"src": "2053:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2045:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2045:3:16"
																				},
																				"nativeSrc": "2045:10:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2045:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2057:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2057:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2041:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:16"
																		},
																		"nativeSrc": "2041:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2041:18:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2030:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2030:2:16"
																},
																"nativeSrc": "2030:30:16",
																"nodeType": "YulFunctionCall",
																"src": "2030:30:16"
															},
															"nativeSrc": "2027:56:16",
															"nodeType": "YulIf",
															"src": "2027:56:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2136:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2136:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2174:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "2174:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2168:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2168:5:16"
																				},
																				"nativeSrc": "2168:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2168:11:16"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2142:25:16",
																			"nodeType": "YulIdentifier",
																			"src": "2142:25:16"
																		},
																		"nativeSrc": "2142:38:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2142:38:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2182:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2182:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2092:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "2092:43:16"
																},
																"nativeSrc": "2092:97:16",
																"nodeType": "YulFunctionCall",
																"src": "2092:97:16"
															},
															"nativeSrc": "2092:97:16",
															"nodeType": "YulExpressionStatement",
															"src": "2092:97:16"
														},
														{
															"nativeSrc": "2198:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2198:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2215:1:16",
																"nodeType": "YulLiteral",
																"src": "2215:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2202:9:16",
																	"nodeType": "YulTypedName",
																	"src": "2202:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2225:17:16",
															"nodeType": "YulAssignment",
															"src": "2225:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2238:4:16",
																"nodeType": "YulLiteral",
																"src": "2238:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2225:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "2225:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2288:642:16",
																		"nodeType": "YulBlock",
																		"src": "2288:642:16",
																		"statements": [
																			{
																				"nativeSrc": "2302:35:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2302:35:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2321:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "2321:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2333:2:16",
																									"nodeType": "YulLiteral",
																									"src": "2333:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2329:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "2329:3:16"
																							},
																							"nativeSrc": "2329:7:16",
																							"nodeType": "YulFunctionCall",
																							"src": "2329:7:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2317:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2317:3:16"
																					},
																					"nativeSrc": "2317:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2317:20:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2306:7:16",
																						"nodeType": "YulTypedName",
																						"src": "2306:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2350:49:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2350:49:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2394:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "2394:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2364:29:16",
																						"nodeType": "YulIdentifier",
																						"src": "2364:29:16"
																					},
																					"nativeSrc": "2364:35:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2364:35:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2354:6:16",
																						"nodeType": "YulTypedName",
																						"src": "2354:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2412:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2412:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2421:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2421:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2416:1:16",
																						"nodeType": "YulTypedName",
																						"src": "2416:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2492:165:16",
																					"nodeType": "YulBlock",
																					"src": "2492:165:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2517:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "2517:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2535:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "2535:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2540:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "2540:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2531:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "2531:3:16"
																												},
																												"nativeSrc": "2531:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "2531:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2525:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "2525:5:16"
																										},
																										"nativeSrc": "2525:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "2525:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2510:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "2510:6:16"
																								},
																								"nativeSrc": "2510:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2510:42:16"
																							},
																							"nativeSrc": "2510:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "2510:42:16"
																						},
																						{
																							"nativeSrc": "2569:24:16",
																							"nodeType": "YulAssignment",
																							"src": "2569:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2583:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "2583:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2591:1:16",
																										"nodeType": "YulLiteral",
																										"src": "2591:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2579:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "2579:3:16"
																								},
																								"nativeSrc": "2579:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2579:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2569:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "2569:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2610:33:16",
																							"nodeType": "YulAssignment",
																							"src": "2610:33:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2627:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "2627:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2638:4:16",
																										"nodeType": "YulLiteral",
																										"src": "2638:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2623:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "2623:3:16"
																								},
																								"nativeSrc": "2623:20:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2623:20:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2610:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "2610:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2446:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "2446:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2449:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "2449:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2443:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "2443:2:16"
																					},
																					"nativeSrc": "2443:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2443:14:16"
																				},
																				"nativeSrc": "2435:222:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2458:21:16",
																					"nodeType": "YulBlock",
																					"src": "2458:21:16",
																					"statements": [
																						{
																							"nativeSrc": "2460:17:16",
																							"nodeType": "YulAssignment",
																							"src": "2460:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2469:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "2469:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2472:4:16",
																										"nodeType": "YulLiteral",
																										"src": "2472:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2465:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "2465:3:16"
																								},
																								"nativeSrc": "2465:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2465:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2460:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "2460:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2439:3:16",
																					"nodeType": "YulBlock",
																					"src": "2439:3:16",
																					"statements": []
																				},
																				"src": "2435:222:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "2705:166:16",
																					"nodeType": "YulBlock",
																					"src": "2705:166:16",
																					"statements": [
																						{
																							"nativeSrc": "2723:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2723:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2750:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "2750:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2755:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "2755:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2746:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "2746:3:16"
																										},
																										"nativeSrc": "2746:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "2746:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2740:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "2740:5:16"
																								},
																								"nativeSrc": "2740:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2740:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2727:9:16",
																									"nodeType": "YulTypedName",
																									"src": "2727:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2790:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "2790:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2802:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "2802:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2829:1:16",
																																				"nodeType": "YulLiteral",
																																				"src": "2829:1:16",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2832:6:16",
																																				"nodeType": "YulIdentifier",
																																				"src": "2832:6:16"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2825:3:16",
																																			"nodeType": "YulIdentifier",
																																			"src": "2825:3:16"
																																		},
																																		"nativeSrc": "2825:14:16",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2825:14:16"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2841:3:16",
																																		"nodeType": "YulLiteral",
																																		"src": "2841:3:16",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2821:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "2821:3:16"
																																},
																																"nativeSrc": "2821:24:16",
																																"nodeType": "YulFunctionCall",
																																"src": "2821:24:16"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2851:1:16",
																																		"nodeType": "YulLiteral",
																																		"src": "2851:1:16",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2847:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "2847:3:16"
																																},
																																"nativeSrc": "2847:6:16",
																																"nodeType": "YulFunctionCall",
																																"src": "2847:6:16"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2817:3:16",
																															"nodeType": "YulIdentifier",
																															"src": "2817:3:16"
																														},
																														"nativeSrc": "2817:37:16",
																														"nodeType": "YulFunctionCall",
																														"src": "2817:37:16"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2813:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "2813:3:16"
																												},
																												"nativeSrc": "2813:42:16",
																												"nodeType": "YulFunctionCall",
																												"src": "2813:42:16"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2798:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "2798:3:16"
																										},
																										"nativeSrc": "2798:58:16",
																										"nodeType": "YulFunctionCall",
																										"src": "2798:58:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2783:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "2783:6:16"
																								},
																								"nativeSrc": "2783:74:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2783:74:16"
																							},
																							"nativeSrc": "2783:74:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "2783:74:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2676:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "2676:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2685:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "2685:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2673:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "2673:2:16"
																					},
																					"nativeSrc": "2673:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2673:19:16"
																				},
																				"nativeSrc": "2670:201:16",
																				"nodeType": "YulIf",
																				"src": "2670:201:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2891:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "2891:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2905:1:16",
																											"nodeType": "YulLiteral",
																											"src": "2905:1:16",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2908:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "2908:6:16"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2901:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "2901:3:16"
																									},
																									"nativeSrc": "2901:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "2901:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2917:1:16",
																									"nodeType": "YulLiteral",
																									"src": "2917:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2897:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "2897:3:16"
																							},
																							"nativeSrc": "2897:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "2897:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2884:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2884:6:16"
																					},
																					"nativeSrc": "2884:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2884:36:16"
																				},
																				"nativeSrc": "2884:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "2884:36:16"
																			}
																		]
																	},
																	"nativeSrc": "2281:649:16",
																	"nodeType": "YulCase",
																	"src": "2281:649:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2286:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2286:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2947:234:16",
																		"nodeType": "YulBlock",
																		"src": "2947:234:16",
																		"statements": [
																			{
																				"nativeSrc": "2961:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2961:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2974:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2974:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2965:5:16",
																						"nodeType": "YulTypedName",
																						"src": "2965:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3010:67:16",
																					"nodeType": "YulBlock",
																					"src": "3010:67:16",
																					"statements": [
																						{
																							"nativeSrc": "3028:35:16",
																							"nodeType": "YulAssignment",
																							"src": "3028:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3047:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "3047:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3052:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "3052:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3043:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "3043:3:16"
																										},
																										"nativeSrc": "3043:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "3043:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3037:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "3037:5:16"
																								},
																								"nativeSrc": "3037:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3037:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3028:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "3028:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2991:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "2991:6:16"
																				},
																				"nativeSrc": "2988:89:16",
																				"nodeType": "YulIf",
																				"src": "2988:89:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3097:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "3097:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3156:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "3156:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3163:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "3163:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3103:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "3103:52:16"
																							},
																							"nativeSrc": "3103:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "3103:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3090:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3090:6:16"
																					},
																					"nativeSrc": "3090:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3090:81:16"
																				},
																				"nativeSrc": "3090:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "3090:81:16"
																			}
																		]
																	},
																	"nativeSrc": "2939:242:16",
																	"nodeType": "YulCase",
																	"src": "2939:242:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2261:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2261:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2269:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2258:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2258:2:16"
																},
																"nativeSrc": "2258:14:16",
																"nodeType": "YulFunctionCall",
																"src": "2258:14:16"
															},
															"nativeSrc": "2251:930:16",
															"nodeType": "YulSwitch",
															"src": "2251:930:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1888:1299:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1969:4:16",
														"nodeType": "YulTypedName",
														"src": "1969:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1975:3:16",
														"nodeType": "YulTypedName",
														"src": "1975:3:16",
														"type": ""
													}
												],
												"src": "1888:1299:16"
											},
											{
												"body": {
													"nativeSrc": "3293:102:16",
													"nodeType": "YulBlock",
													"src": "3293:102:16",
													"statements": [
														{
															"nativeSrc": "3303:26:16",
															"nodeType": "YulAssignment",
															"src": "3303:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3315:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3315:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3326:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3326:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3311:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3311:3:16"
																},
																"nativeSrc": "3311:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3311:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3303:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3303:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3345:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3345:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3360:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3360:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3376:3:16",
																								"nodeType": "YulLiteral",
																								"src": "3376:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3381:1:16",
																								"nodeType": "YulLiteral",
																								"src": "3381:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3372:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "3372:3:16"
																						},
																						"nativeSrc": "3372:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "3372:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3385:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3385:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3368:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3368:3:16"
																				},
																				"nativeSrc": "3368:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3368:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3356:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3356:3:16"
																		},
																		"nativeSrc": "3356:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3356:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3338:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3338:6:16"
																},
																"nativeSrc": "3338:51:16",
																"nodeType": "YulFunctionCall",
																"src": "3338:51:16"
															},
															"nativeSrc": "3338:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "3338:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3192:203:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3262:9:16",
														"nodeType": "YulTypedName",
														"src": "3262:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3273:6:16",
														"nodeType": "YulTypedName",
														"src": "3273:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3284:4:16",
														"nodeType": "YulTypedName",
														"src": "3284:4:16",
														"type": ""
													}
												],
												"src": "3192:203:16"
											},
											{
												"body": {
													"nativeSrc": "3448:174:16",
													"nodeType": "YulBlock",
													"src": "3448:174:16",
													"statements": [
														{
															"nativeSrc": "3458:16:16",
															"nodeType": "YulAssignment",
															"src": "3458:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3469:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "3469:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3472:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "3472:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3465:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3465:3:16"
																},
																"nativeSrc": "3465:9:16",
																"nodeType": "YulFunctionCall",
																"src": "3465:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3458:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3458:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3505:111:16",
																"nodeType": "YulBlock",
																"src": "3505:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3526:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3526:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3533:3:16",
																							"nodeType": "YulLiteral",
																							"src": "3533:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3538:10:16",
																							"nodeType": "YulLiteral",
																							"src": "3538:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3529:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "3529:3:16"
																					},
																					"nativeSrc": "3529:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3529:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3519:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3519:6:16"
																			},
																			"nativeSrc": "3519:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3519:31:16"
																		},
																		"nativeSrc": "3519:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3519:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3570:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3570:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3573:4:16",
																					"nodeType": "YulLiteral",
																					"src": "3573:4:16",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3563:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3563:6:16"
																			},
																			"nativeSrc": "3563:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3563:15:16"
																		},
																		"nativeSrc": "3563:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3563:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3598:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3598:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3601:4:16",
																					"nodeType": "YulLiteral",
																					"src": "3601:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3591:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3591:6:16"
																			},
																			"nativeSrc": "3591:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3591:15:16"
																		},
																		"nativeSrc": "3591:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3591:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3489:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "3489:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3492:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3492:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3486:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3486:2:16"
																},
																"nativeSrc": "3486:10:16",
																"nodeType": "YulFunctionCall",
																"src": "3486:10:16"
															},
															"nativeSrc": "3483:133:16",
															"nodeType": "YulIf",
															"src": "3483:133:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3400:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3431:1:16",
														"nodeType": "YulTypedName",
														"src": "3431:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3434:1:16",
														"nodeType": "YulTypedName",
														"src": "3434:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3440:3:16",
														"nodeType": "YulTypedName",
														"src": "3440:3:16",
														"type": ""
													}
												],
												"src": "3400:222:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$362t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 64))\n        value2 := value_2\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052662386f26fc10000600d5534801561001a575f80fd5b50604051611e20380380611e2083398101604081905261003991610155565b336040518060400160405280600981526020016810985b985b9853919560ba1b815250604051806040016040528060048152602001631093919560e21b815250815f90816100879190610230565b5060016100948282610230565b5050506001600160a01b0381166100c457604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100cd81610104565b50600e839055600c80546001600160a01b0319166001600160a01b0384161790556100f881426102ea565b600f555061030f915050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f805f60608486031215610167575f80fd5b835160208501519093506001600160a01b0381168114610185575f80fd5b6040949094015192959394509192915050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806101c057607f821691505b6020821081036101de57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561022b57805f5260205f20601f840160051c810160208510156102095750805b601f840160051c820191505b81811015610228575f8155600101610215565b50505b505050565b81516001600160401b0381111561024957610249610198565b61025d8161025784546101ac565b846101e4565b6020601f82116001811461028f575f83156102785750848201515b5f19600385901b1c1916600184901b178455610228565b5f84815260208120601f198516915b828110156102be578785015182556020948501946001909201910161029e565b50848210156102db57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561030957634e487b7160e01b5f52601160045260245ffd5b92915050565b611b048061031c5f395ff3fe6080604052600436106101fb575f3560e01c80636352211e11610113578063b88d4fde1161009d578063de8b51e11161006d578063de8b51e114610592578063e985e9c5146105a6578063f2fde38b146105c5578063f4a0a528146105e4578063fc0c546a14610603575f80fd5b8063b88d4fde14610516578063c87b56dd14610535578063cada2a1814610554578063d85d3d2714610573575f80fd5b806370a08231116100e357806370a0823114610493578063715018a6146104b25780638da5cb5b146104c657806395d89b41146104e3578063a22cb465146104f7575f80fd5b80636352211e1461041b5780636817c76c1461043a5780636aa71d181461044f5780637080d6fc1461047a575f80fd5b806318160ddd116101945780633004defe116101645780633004defe146103795780633ccfd60b146103b657806342842e0e146103ca5780634f6ccce7146103e9578063537efe3114610408575f80fd5b806318160ddd14610312578063232e623e1461032657806323b872dd1461033b5780632f745c591461035a575f80fd5b8063081812fc116101cf578063081812fc14610286578063095ea7b3146102bd5780630bb78ec1146102de5780630e726e6b146102fd575f80fd5b80629a9b7b146101ff57806301ffc9a71461022257806306dbc1311461025157806306fdde0314610265575b5f80fd5b34801561020a575f80fd5b50600b545b6040519081526020015b60405180910390f35b34801561022d575f80fd5b5061024161023c3660046115f1565b610622565b6040519015158152602001610219565b34801561025c575f80fd5b5061020f61064c565b348015610270575f80fd5b50610279610687565b6040516102199190611656565b348015610291575f80fd5b506102a56102a0366004611668565b610716565b6040516001600160a01b039091168152602001610219565b3480156102c8575f80fd5b506102dc6102d736600461169a565b61073d565b005b3480156102e9575f80fd5b506102796102f8366004611668565b61074c565b348015610308575f80fd5b5061020f600e5481565b34801561031d575f80fd5b5060085461020f565b348015610331575f80fd5b5061020f600f5481565b348015610346575f80fd5b506102dc6103553660046116c2565b6107e3565b348015610365575f80fd5b5061020f61037436600461169a565b610871565b348015610384575f80fd5b506102dc6103933660046116fc565b6001600160a01b03165f908152601260205260409020805460ff19166001179055565b3480156103c1575f80fd5b506102dc6108d4565b3480156103d5575f80fd5b506102dc6103e43660046116c2565b610915565b3480156103f4575f80fd5b5061020f610403366004611668565b610934565b61020f6104163660046117a0565b610989565b348015610426575f80fd5b506102a5610435366004611668565b610a7d565b348015610445575f80fd5b5061020f600d5481565b34801561045a575f80fd5b5061020f6104693660046116fc565b60136020525f908152604090205481565b348015610485575f80fd5b506010546102419060ff1681565b34801561049e575f80fd5b5061020f6104ad3660046116fc565b610a87565b3480156104bd575f80fd5b506102dc610acc565b3480156104d1575f80fd5b50600a546001600160a01b03166102a5565b3480156104ee575f80fd5b50610279610adf565b348015610502575f80fd5b506102dc6105113660046117e5565b610aee565b348015610521575f80fd5b506102dc61053036600461181e565b610af9565b348015610540575f80fd5b5061027961054f366004611668565b610b10565b34801561055f575f80fd5b506102dc61056e366004611668565b610bb8565b34801561057e575f80fd5b5061020f61058d3660046117a0565b610bc5565b34801561059d575f80fd5b506102dc610cbf565b3480156105b1575f80fd5b506102416105c0366004611895565b610cdb565b3480156105d0575f80fd5b506102dc6105df3660046116fc565b610d08565b3480156105ef575f80fd5b506102dc6105fe366004611668565b610d42565b34801561060e575f80fd5b50600c546102a5906001600160a01b031681565b5f6001600160e01b0319821663780e9d6360e01b1480610646575061064682610d4f565b92915050565b335f90815260136020526040812054810361066657505f90565b600e54335f9081526013602052604090205461068291906118da565b905090565b60605f8054610695906118ed565b80601f01602080910402602001604051908101604052809291908181526020018280546106c1906118ed565b801561070c5780601f106106e35761010080835404028352916020019161070c565b820191905f5260205f20905b8154815290600101906020018083116106ef57829003601f168201915b5050505050905090565b5f61072082610d9e565b505f828152600460205260409020546001600160a01b0316610646565b610748828233610dd6565b5050565b60116020525f908152604090208054610764906118ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610790906118ed565b80156107db5780601f106107b2576101008083540402835291602001916107db565b820191905f5260205f20905b8154815290600101906020018083116107be57829003601f168201915b505050505081565b6001600160a01b03821661081157604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f61081d838333610de3565b9050836001600160a01b0316816001600160a01b03161461086b576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610808565b50505050565b5f61087b83610a87565b82106108ac5760405163295f44f760e21b81526001600160a01b038416600482015260248101839052604401610808565b506001600160a01b03919091165f908152600660209081526040808320938352929052205490565b6108dc610eb6565b600a546040516001600160a01b03909116904780156108fc02915f818181858888f19350505050158015610912573d5f803e3d5ffd5b50565b61092f83838360405180602001604052805f815250610af9565b505050565b5f61093e60085490565b82106109665760405163295f44f760e21b81525f600482015260248101839052604401610808565b6008828154811061097957610979611925565b905f5260205f2001549050919050565b6010545f9060ff166109d25760405162461bcd60e51b815260206004820152601260248201527153616c65206973206e6f742061637469766560701b6044820152606401610808565b600d543414610a195760405162461bcd60e51b8152602060048201526013602482015272496e636f7272656374204554482076616c756560681b6044820152606401610808565b600b5f8154610a2790611939565b90915550600b54610a383382610ee3565b610a428184610efc565b60405181815233907f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe9060200160405180910390a292915050565b5f61064682610d9e565b5f6001600160a01b038216610ab1576040516322718ad960e21b81525f6004820152602401610808565b506001600160a01b03165f9081526003602052604090205490565b610ad4610eb6565b610add5f610f13565b565b606060018054610695906118ed565b610748338383610f64565b610b048484846107e3565b61086b84848484611002565b6060610b1b82610d9e565b505f8281526011602052604081208054610b34906118ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610b60906118ed565b8015610bab5780601f10610b8257610100808354040283529160200191610bab565b820191905f5260205f20905b815481529060010190602001808311610b8e57829003601f168201915b5093979650505050505050565b610bc0610eb6565b600e55565b600e54335f908152601360205260408120549091610be2916118da565b421015610c275760405162461bcd60e51b81526020600482015260136024820152724e6f74207265616368206d696e742074696d6560681b6044820152606401610808565b600f54421015610c8f57335f9081526012602052604090205460ff16610c8f5760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c792077686974656c69737420757365722063616e206d696e74000000006044820152606401610808565b600b5f8154610c9d90611939565b90915550600b54335f818152601360205260409020429055610a389082610ee3565b610cc7610eb6565b6010805460ff19811660ff90911615179055565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b610d10610eb6565b6001600160a01b038116610d3957604051631e4fbdf760e01b81525f6004820152602401610808565b61091281610f13565b610d4a610eb6565b600d55565b5f6001600160e01b031982166380ac58cd60e01b1480610d7f57506001600160e01b03198216635b5e139f60e01b145b8061064657506301ffc9a760e01b6001600160e01b0319831614610646565b5f818152600260205260408120546001600160a01b03168061064657604051637e27328960e01b815260048101849052602401610808565b61092f8383836001611128565b5f80610df085858561122c565b90506001600160a01b038116610e4c57610e4784600880545f838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610e6f565b846001600160a01b0316816001600160a01b031614610e6f57610e6f818561131e565b6001600160a01b038516610e8b57610e86846113ab565b610eae565b846001600160a01b0316816001600160a01b031614610eae57610eae8585611452565b949350505050565b600a546001600160a01b03163314610add5760405163118cdaa760e01b8152336004820152602401610808565b610748828260405180602001604052805f8152506114a0565b5f82815260116020526040902061092f8282611995565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216610f9657604051630b61174360e31b81526001600160a01b0383166004820152602401610808565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561086b57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290611044903390889087908790600401611a50565b6020604051808303815f875af192505050801561107e575060408051601f3d908101601f1916820190925261107b91810190611a8c565b60015b6110e5573d8080156110ab576040519150601f19603f3d011682016040523d82523d5f602084013e6110b0565b606091505b5080515f036110dd57604051633250574960e11b81526001600160a01b0385166004820152602401610808565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461112157604051633250574960e11b81526001600160a01b0385166004820152602401610808565b5050505050565b808061113c57506001600160a01b03821615155b156111fd575f61114b84610d9e565b90506001600160a01b038316158015906111775750826001600160a01b0316816001600160a01b031614155b801561118a57506111888184610cdb565b155b156111b35760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610808565b81156111fb5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f828152600260205260408120546001600160a01b0390811690831615611258576112588184866114b6565b6001600160a01b03811615611292576112735f855f80611128565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b038516156112c0576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b5f61132883610a87565b5f83815260076020526040902054909150808214611379576001600160a01b0384165f9081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b505f9182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008545f906113bc90600190611aa7565b5f83815260096020526040812054600880549394509092849081106113e3576113e3611925565b905f5260205f2001549050806008838154811061140257611402611925565b5f91825260208083209091019290925582815260099091526040808220849055858252812055600880548061143957611439611aba565b600190038181905f5260205f20015f9055905550505050565b5f600161145e84610a87565b6114689190611aa7565b6001600160a01b039093165f908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6114aa838361151a565b61092f5f848484611002565b6114c183838361157b565b61092f576001600160a01b0383166114ef57604051637e27328960e01b815260048101829052602401610808565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610808565b6001600160a01b03821661154357604051633250574960e11b81525f6004820152602401610808565b5f61154f83835f610de3565b90506001600160a01b0381161561092f576040516339e3563760e11b81525f6004820152602401610808565b5f6001600160a01b03831615801590610eae5750826001600160a01b0316846001600160a01b031614806115b457506115b48484610cdb565b80610eae5750505f908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b031981168114610912575f80fd5b5f60208284031215611601575f80fd5b813561160c816115dc565b9392505050565b5f81518084525f5b818110156116375760208185018101518683018201520161161b565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f61160c6020830184611613565b5f60208284031215611678575f80fd5b5035919050565b80356001600160a01b0381168114611695575f80fd5b919050565b5f80604083850312156116ab575f80fd5b6116b48361167f565b946020939093013593505050565b5f805f606084860312156116d4575f80fd5b6116dd8461167f565b92506116eb6020850161167f565b929592945050506040919091013590565b5f6020828403121561170c575f80fd5b61160c8261167f565b634e487b7160e01b5f52604160045260245ffd5b5f8067ffffffffffffffff84111561174357611743611715565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff8211171561177257611772611715565b604052838152905080828401851015611789575f80fd5b838360208301375f60208583010152509392505050565b5f602082840312156117b0575f80fd5b813567ffffffffffffffff8111156117c6575f80fd5b8201601f810184136117d6575f80fd5b610eae84823560208401611729565b5f80604083850312156117f6575f80fd5b6117ff8361167f565b915060208301358015158114611813575f80fd5b809150509250929050565b5f805f8060808587031215611831575f80fd5b61183a8561167f565b93506118486020860161167f565b925060408501359150606085013567ffffffffffffffff81111561186a575f80fd5b8501601f8101871361187a575f80fd5b61188987823560208401611729565b91505092959194509250565b5f80604083850312156118a6575f80fd5b6118af8361167f565b91506118bd6020840161167f565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610646576106466118c6565b600181811c9082168061190157607f821691505b60208210810361191f57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b5f6001820161194a5761194a6118c6565b5060010190565b601f82111561092f57805f5260205f20601f840160051c810160208510156119765750805b601f840160051c820191505b81811015611121575f8155600101611982565b815167ffffffffffffffff8111156119af576119af611715565b6119c3816119bd84546118ed565b84611951565b6020601f8211600181146119f5575f83156119de5750848201515b5f19600385901b1c1916600184901b178455611121565b5f84815260208120601f198516915b82811015611a245787850151825560209485019460019092019101611a04565b5084821015611a4157868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f90611a8290830184611613565b9695505050505050565b5f60208284031215611a9c575f80fd5b815161160c816115dc565b81810381811115610646576106466118c6565b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220ee74cac879b28e8bfbdee495019d9c67c93ce68aca16621f92649cbb20a18bc964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x2386F26FC10000 PUSH1 0xD SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1E20 CODESIZE SUB DUP1 PUSH2 0x1E20 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x39 SWAP2 PUSH2 0x155 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x10985B985B98539195 PUSH1 0xBA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x10939195 PUSH1 0xE2 SHL DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x87 SWAP2 SWAP1 PUSH2 0x230 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x94 DUP3 DUP3 PUSH2 0x230 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD DUP2 PUSH2 0x104 JUMP JUMPDEST POP PUSH1 0xE DUP4 SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0xF8 DUP2 TIMESTAMP PUSH2 0x2EA JUMP JUMPDEST PUSH1 0xF SSTORE POP PUSH2 0x30F SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x185 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 SWAP5 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP6 SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x22B JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x209 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x228 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x215 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x249 JUMPI PUSH2 0x249 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x25D DUP2 PUSH2 0x257 DUP5 SLOAD PUSH2 0x1AC JUMP JUMPDEST DUP5 PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x28F JUMPI PUSH0 DUP4 ISZERO PUSH2 0x278 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x228 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2BE JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x29E JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2DB JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x309 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B04 DUP1 PUSH2 0x31C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x113 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xDE8B51E1 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xDE8B51E1 EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0xF4A0A528 EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x603 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0xCADA2A18 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0xD85D3D27 EQ PUSH2 0x573 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x6AA71D18 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x7080D6FC EQ PUSH2 0x47A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x194 JUMPI DUP1 PUSH4 0x3004DEFE GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x3004DEFE EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x537EFE31 EQ PUSH2 0x408 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x232E623E EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x35A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1CF JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xBB78EC1 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xE726E6B EQ PUSH2 0x2FD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x9A9B7B EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x6DBC131 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x265 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x15F1 JUMP JUMPDEST PUSH2 0x622 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x219 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x64C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1656 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x219 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x20F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x8D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x934 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A0 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0xA7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x241 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0xACC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH2 0xADF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x502 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x511 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E5 JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x530 CALLDATASIZE PUSH1 0x4 PUSH2 0x181E JUMP JUMPDEST PUSH2 0xAF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH2 0x54F CALLDATASIZE PUSH1 0x4 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x56E CALLDATASIZE PUSH1 0x4 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0xBB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x58D CALLDATASIZE PUSH1 0x4 PUSH2 0x17A0 JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0xCBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x5C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1895 JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x5DF CALLDATASIZE PUSH1 0x4 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0xD08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x5FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0xD42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x2A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x646 JUMPI POP PUSH2 0x646 DUP3 PUSH2 0xD4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SUB PUSH2 0x666 JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x682 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x695 SWAP1 PUSH2 0x18ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C1 SWAP1 PUSH2 0x18ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x70C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x720 DUP3 PUSH2 0xD9E JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x646 JUMP JUMPDEST PUSH2 0x748 DUP3 DUP3 CALLER PUSH2 0xDD6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x764 SWAP1 PUSH2 0x18ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x790 SWAP1 PUSH2 0x18ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7DB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7BE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x81D DUP4 DUP4 CALLER PUSH2 0xDE3 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x808 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x87B DUP4 PUSH2 0xA87 JUMP JUMPDEST DUP3 LT PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x808 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8DC PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x912 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x92F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xAF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x93E PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x979 JUMPI PUSH2 0x979 PUSH2 0x1925 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH0 SWAP1 PUSH1 0xFF AND PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53616C65206973206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0xD SLOAD CALLVALUE EQ PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E636F7272656374204554482076616C7565 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0xB PUSH0 DUP2 SLOAD PUSH2 0xA27 SWAP1 PUSH2 0x1939 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0xB SLOAD PUSH2 0xA38 CALLER DUP3 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0xA42 DUP2 DUP5 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x646 DUP3 PUSH2 0xD9E JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAD4 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0xADD PUSH0 PUSH2 0xF13 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x695 SWAP1 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x748 CALLER DUP4 DUP4 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0xB04 DUP5 DUP5 DUP5 PUSH2 0x7E3 JUMP JUMPDEST PUSH2 0x86B DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB1B DUP3 PUSH2 0xD9E JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xB34 SWAP1 PUSH2 0x18ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB60 SWAP1 PUSH2 0x18ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBAB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB82 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBAB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB8E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP SWAP4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBC0 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0xE SSTORE JUMP JUMPDEST PUSH1 0xE SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xBE2 SWAP2 PUSH2 0x18DA JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xC27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F74207265616368206D696E742074696D65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP LT ISZERO PUSH2 0xC8F JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792077686974656C69737420757365722063616E206D696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0xB PUSH0 DUP2 SLOAD PUSH2 0xC9D SWAP1 PUSH2 0x1939 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0xB SLOAD CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH2 0xA38 SWAP1 DUP3 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0xCC7 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP1 SWAP2 AND ISZERO OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xD10 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST PUSH2 0x912 DUP2 PUSH2 0xF13 JUMP JUMPDEST PUSH2 0xD4A PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xD7F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x646 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x646 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST PUSH2 0x92F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1128 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDF0 DUP6 DUP6 DUP6 PUSH2 0x122C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE4C JUMPI PUSH2 0xE47 DUP5 PUSH1 0x8 DUP1 SLOAD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE6F JUMPI PUSH2 0xE6F DUP2 DUP6 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xE8B JUMPI PUSH2 0xE86 DUP5 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0xEAE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEAE JUMPI PUSH2 0xEAE DUP6 DUP6 PUSH2 0x1452 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST PUSH2 0x748 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x14A0 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x92F DUP3 DUP3 PUSH2 0x1995 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF96 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1044 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x107E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x107B SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10E5 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x10AB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x10DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x113C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x11FD JUMPI PUSH0 PUSH2 0x114B DUP5 PUSH2 0xD9E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1177 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x118A JUMPI POP PUSH2 0x1188 DUP2 DUP5 PUSH2 0xCDB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x11B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x11FB JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x1258 JUMPI PUSH2 0x1258 DUP2 DUP5 DUP7 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1292 JUMPI PUSH2 0x1273 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1128 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x12C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1328 DUP4 PUSH2 0xA87 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x1379 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH0 SWAP1 PUSH2 0x13BC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x13E3 JUMPI PUSH2 0x13E3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1402 JUMPI PUSH2 0x1402 PUSH2 0x1925 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1439 JUMPI PUSH2 0x1439 PUSH2 0x1ABA JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x145E DUP5 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH2 0x14AA DUP4 DUP4 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x92F PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x14C1 DUP4 DUP4 DUP4 PUSH2 0x157B JUMP JUMPDEST PUSH2 0x92F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1543 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST PUSH0 PUSH2 0x154F DUP4 DUP4 PUSH0 PUSH2 0xDE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x92F JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xEAE JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x15B4 JUMPI POP PUSH2 0x15B4 DUP5 DUP5 PUSH2 0xCDB JUMP JUMPDEST DUP1 PUSH2 0xEAE JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x912 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1601 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x160C DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1637 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x161B JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x160C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1613 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1678 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1695 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16AB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16B4 DUP4 PUSH2 0x167F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16DD DUP5 PUSH2 0x167F JUMP JUMPDEST SWAP3 POP PUSH2 0x16EB PUSH1 0x20 DUP6 ADD PUSH2 0x167F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x170C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x160C DUP3 PUSH2 0x167F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x1743 JUMPI PUSH2 0x1743 PUSH2 0x1715 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1772 JUMPI PUSH2 0x1772 PUSH2 0x1715 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x1789 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x17D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEAE DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1729 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17FF DUP4 PUSH2 0x167F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1813 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1831 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x183A DUP6 PUSH2 0x167F JUMP JUMPDEST SWAP4 POP PUSH2 0x1848 PUSH1 0x20 DUP7 ADD PUSH2 0x167F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x186A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x187A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1889 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x18AF DUP4 PUSH2 0x167F JUMP JUMPDEST SWAP2 POP PUSH2 0x18BD PUSH1 0x20 DUP5 ADD PUSH2 0x167F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x646 JUMPI PUSH2 0x646 PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1901 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x191F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x194A JUMPI PUSH2 0x194A PUSH2 0x18C6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x92F JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1976 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1121 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1982 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19AF JUMPI PUSH2 0x19AF PUSH2 0x1715 JUMP JUMPDEST PUSH2 0x19C3 DUP2 PUSH2 0x19BD DUP5 SLOAD PUSH2 0x18ED JUMP JUMPDEST DUP5 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x19F5 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x19DE JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1121 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A24 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1A04 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1A41 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1A82 SWAP1 DUP4 ADD DUP5 PUSH2 0x1613 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A9C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x160C DUP2 PUSH2 0x15DC JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x646 JUMPI PUSH2 0x646 PUSH2 0x18C6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH21 0xCAC879B28E8BFBDEE495019D9C67C93CE68ACA1662 0x1F SWAP3 PUSH5 0x9CBB20A18B 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "382:3162:15:-:0;;;532:10;505:37;;875:300;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1022:10;1381:113:3;;;;;;;;;;;;;-1:-1:-1;;;1381:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:3;;;1455:5;1447;:13;;;;;;:::i;:::-;-1:-1:-1;1470:7:3;:17;1480:7;1470;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3338:51:16;3311:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1045:12:15::2;:28:::0;;;1084:5:::2;:14:::0;;-1:-1:-1;;;;;;1084:14:15::2;-1:-1:-1::0;;;;;1084:14:15;::::2;;::::0;;1132:35:::2;1150:17:::0;1132:15:::2;:35;:::i;:::-;1109:20;:58:::0;-1:-1:-1;382:3162:15;;-1:-1:-1;;382:3162:15;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:532:16:-;116:6;124;132;185:2;173:9;164:7;160:23;156:32;153:52;;;201:1;198;191:12;153:52;246:16;;331:2;316:18;;310:25;246:16;;-1:-1:-1;;;;;;366:33:16;;354:46;;344:74;;414:1;411;404:12;344:74;510:2;495:18;;;;489:25;14:532;;437:7;;-1:-1:-1;489:25:16;;14:532;-1:-1:-1;;14:532:16:o;551:127::-;612:10;607:3;603:20;600:1;593:31;643:4;640:1;633:15;667:4;664:1;657:15;683:380;762:1;758:12;;;;805;;;826:61;;880:4;872:6;868:17;858:27;;826:61;933:2;925:6;922:14;902:18;899:38;896:161;;979:10;974:3;970:20;967:1;960:31;1014:4;1011:1;1004:15;1042:4;1039:1;1032:15;896:161;;683:380;;;:::o;1194:518::-;1296:2;1291:3;1288:11;1285:421;;;1332:5;1329:1;1322:16;1376:4;1373:1;1363:18;1446:2;1434:10;1430:19;1427:1;1423:27;1417:4;1413:38;1482:4;1470:10;1467:20;1464:47;;;-1:-1:-1;1505:4:16;1464:47;1560:2;1555:3;1551:12;1548:1;1544:20;1538:4;1534:31;1524:41;;1615:81;1633:2;1626:5;1623:13;1615:81;;;1692:1;1678:16;;1659:1;1648:13;1615:81;;;1619:3;;1285:421;1194:518;;;:::o;1888:1299::-;2008:10;;-1:-1:-1;;;;;2030:30:16;;2027:56;;;2063:18;;:::i;:::-;2092:97;2182:6;2142:38;2174:4;2168:11;2142:38;:::i;:::-;2136:4;2092:97;:::i;:::-;2238:4;2269:2;2258:14;;2286:1;2281:649;;;;2974:1;2991:6;2988:89;;;-1:-1:-1;3043:19:16;;;3037:26;2988:89;-1:-1:-1;;1845:1:16;1841:11;;;1837:24;1833:29;1823:40;1869:1;1865:11;;;1820:57;3090:81;;2251:930;;2281:649;1141:1;1134:14;;;1178:4;1165:18;;-1:-1:-1;;2317:20:16;;;2435:222;2449:7;2446:1;2443:14;2435:222;;;2531:19;;;2525:26;2510:42;;2638:4;2623:20;;;;2591:1;2579:14;;;;2465:12;2435:222;;;2439:3;2685:6;2676:7;2673:19;2670:201;;;2746:19;;;2740:26;-1:-1:-1;;2829:1:16;2825:14;;;2841:3;2821:24;2817:37;2813:42;2798:58;2783:74;;2670:201;-1:-1:-1;;;;2917:1:16;2901:14;;;2897:22;2884:36;;-1:-1:-1;1888:1299:16:o;3400:222::-;3465:9;;;3486:10;;;3483:133;;;3538:10;3533:3;3529:20;3526:1;3519:31;3573:4;3570:1;3563:15;3601:4;3598:1;3591:15;3483:133;3400:222;;;;:::o;:::-;382:3162:15;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addTokenToAllTokensEnumeration_1756": {
									"entryPoint": null,
									"id": 1756,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addTokenToOwnerEnumeration_1736": {
									"entryPoint": 5202,
									"id": 1736,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_1174": {
									"entryPoint": 3542,
									"id": 1174,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1240": {
									"entryPoint": 4392,
									"id": 1240,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkAuthorized_822": {
									"entryPoint": 5302,
									"id": 822,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1370": {
									"entryPoint": 4098,
									"id": 1370,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3766,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_749": {
									"entryPoint": null,
									"id": 749,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_785": {
									"entryPoint": 5499,
									"id": 785,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_isSaleActive_3458": {
									"entryPoint": null,
									"id": 3458,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_978": {
									"entryPoint": 5402,
									"id": 978,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1962": {
									"entryPoint": null,
									"id": 1962,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_736": {
									"entryPoint": null,
									"id": 736,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_removeTokenFromAllTokensEnumeration_1864": {
									"entryPoint": 5035,
									"id": 1864,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeTokenFromOwnerEnumeration_1816": {
									"entryPoint": 4894,
									"id": 1816,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireOwned_1306": {
									"entryPoint": 3486,
									"id": 1306,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_1019": {
									"entryPoint": 5280,
									"id": 1019,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeMint_993": {
									"entryPoint": 3811,
									"id": 993,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1277": {
									"entryPoint": 3940,
									"id": 1277,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_3701": {
									"entryPoint": 3836,
									"id": 3701,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_tokenURIs_3462": {
									"entryPoint": 1868,
									"id": 3462,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3859,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1705": {
									"entryPoint": 3555,
									"id": 1705,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_928": {
									"entryPoint": 4652,
									"id": 928,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@addToWhitelsit_3687": {
									"entryPoint": null,
									"id": 3687,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_583": {
									"entryPoint": 1853,
									"id": 583,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_491": {
									"entryPoint": 2695,
									"id": 491,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@currentTokenId_3744": {
									"entryPoint": null,
									"id": 3744,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@endWhitelistMintTime_3456": {
									"entryPoint": null,
									"id": 3456,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@flipSaleActive_3724": {
									"entryPoint": 3263,
									"id": 3724,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getApproved_600": {
									"entryPoint": 1814,
									"id": 600,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_633": {
									"entryPoint": 3291,
									"id": 633,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@judgeMint_3606": {
									"entryPoint": 1612,
									"id": 3606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastMintTime_3470": {
									"entryPoint": null,
									"id": 3470,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintInterval_3454": {
									"entryPoint": null,
									"id": 3454,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintPrice_3452": {
									"entryPoint": null,
									"id": 3452,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_3675": {
									"entryPoint": 3013,
									"id": 3675,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_513": {
									"entryPoint": 1671,
									"id": 513,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_504": {
									"entryPoint": 2685,
									"id": 504,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@payToMint_3578": {
									"entryPoint": 2441,
									"id": 3578,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2764,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_697": {
									"entryPoint": 2325,
									"id": 697,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_723": {
									"entryPoint": 2809,
									"id": 723,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_616": {
									"entryPoint": 2798,
									"id": 616,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setMintInterval_3713": {
									"entryPoint": 3000,
									"id": 3713,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMintPrice_3736": {
									"entryPoint": 3394,
									"id": 3736,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1570": {
									"entryPoint": 1570,
									"id": 1570,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2258": {
									"entryPoint": null,
									"id": 2258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_463": {
									"entryPoint": 3407,
									"id": 463,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_522": {
									"entryPoint": 2783,
									"id": 522,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenByIndex_1636": {
									"entryPoint": 2356,
									"id": 1636,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_1599": {
									"entryPoint": 2161,
									"id": 1599,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_3531": {
									"entryPoint": 2832,
									"id": 3531,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token_3449": {
									"entryPoint": null,
									"id": 3449,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_1609": {
									"entryPoint": null,
									"id": 1609,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_679": {
									"entryPoint": 2019,
									"id": 679,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3336,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_3763": {
									"entryPoint": 2260,
									"id": 3763,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 5929,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6736,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$362__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4ea3d59c64f65d2cbfee983191fdda536e8ebff816db04c792e2170d3375ac3a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_79449f1ff9b8ee509d5ecc9044233c86b19b5620be95a941a12c60ec9839df1c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d1099d1c7032e5298c84f4c6b860f4ab2795bab6ef1d36ad66089e1852a88ee1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f228330aaeab6837b31939dc3fb4d4d65288ff159222a88fcaf0fe99680d9aa8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 6481,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6342,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 6842,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 5596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11866:16",
										"nodeType": "YulBlock",
										"src": "0:11866:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:16",
													"nodeType": "YulBlock",
													"src": "115:76:16",
													"statements": [
														{
															"nativeSrc": "125:26:16",
															"nodeType": "YulAssignment",
															"src": "125:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:16",
																		"nodeType": "YulLiteral",
																		"src": "148:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:16"
																},
																"nativeSrc": "133:18:16",
																"nodeType": "YulFunctionCall",
																"src": "133:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:16"
																},
																"nativeSrc": "160:25:16",
																"nodeType": "YulFunctionCall",
																"src": "160:25:16"
															},
															"nativeSrc": "160:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:16",
														"nodeType": "YulTypedName",
														"src": "84:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:16",
														"nodeType": "YulTypedName",
														"src": "95:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:16",
														"nodeType": "YulTypedName",
														"src": "106:4:16",
														"type": ""
													}
												],
												"src": "14:177:16"
											},
											{
												"body": {
													"nativeSrc": "240:87:16",
													"nodeType": "YulBlock",
													"src": "240:87:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "305:16:16",
																"nodeType": "YulBlock",
																"src": "305:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "314:1:16",
																					"nodeType": "YulLiteral",
																					"src": "314:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:16",
																					"nodeType": "YulLiteral",
																					"src": "317:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "307:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:16"
																			},
																			"nativeSrc": "307:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:16"
																		},
																		"nativeSrc": "307:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "263:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "263:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "274:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "274:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "285:3:16",
																								"nodeType": "YulLiteral",
																								"src": "285:3:16",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "290:10:16",
																								"nodeType": "YulLiteral",
																								"src": "290:10:16",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "281:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "281:3:16"
																						},
																						"nativeSrc": "281:20:16",
																						"nodeType": "YulFunctionCall",
																						"src": "281:20:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "270:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "270:3:16"
																				},
																				"nativeSrc": "270:32:16",
																				"nodeType": "YulFunctionCall",
																				"src": "270:32:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "260:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "260:2:16"
																		},
																		"nativeSrc": "260:43:16",
																		"nodeType": "YulFunctionCall",
																		"src": "260:43:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "253:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "253:6:16"
																},
																"nativeSrc": "253:51:16",
																"nodeType": "YulFunctionCall",
																"src": "253:51:16"
															},
															"nativeSrc": "250:71:16",
															"nodeType": "YulIf",
															"src": "250:71:16"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "196:131:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "229:5:16",
														"nodeType": "YulTypedName",
														"src": "229:5:16",
														"type": ""
													}
												],
												"src": "196:131:16"
											},
											{
												"body": {
													"nativeSrc": "401:176:16",
													"nodeType": "YulBlock",
													"src": "401:176:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "447:16:16",
																"nodeType": "YulBlock",
																"src": "447:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "456:1:16",
																					"nodeType": "YulLiteral",
																					"src": "456:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "459:1:16",
																					"nodeType": "YulLiteral",
																					"src": "459:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "449:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "449:6:16"
																			},
																			"nativeSrc": "449:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "449:12:16"
																		},
																		"nativeSrc": "449:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "449:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "422:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "422:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "431:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "431:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "418:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "418:3:16"
																		},
																		"nativeSrc": "418:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "418:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:16",
																		"nodeType": "YulLiteral",
																		"src": "443:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "414:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "414:3:16"
																},
																"nativeSrc": "414:32:16",
																"nodeType": "YulFunctionCall",
																"src": "414:32:16"
															},
															"nativeSrc": "411:52:16",
															"nodeType": "YulIf",
															"src": "411:52:16"
														},
														{
															"nativeSrc": "472:36:16",
															"nodeType": "YulVariableDeclaration",
															"src": "472:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "498:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "485:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "485:12:16"
																},
																"nativeSrc": "485:23:16",
																"nodeType": "YulFunctionCall",
																"src": "485:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "476:5:16",
																	"nodeType": "YulTypedName",
																	"src": "476:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "541:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "541:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "517:23:16",
																	"nodeType": "YulIdentifier",
																	"src": "517:23:16"
																},
																"nativeSrc": "517:30:16",
																"nodeType": "YulFunctionCall",
																"src": "517:30:16"
															},
															"nativeSrc": "517:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "517:30:16"
														},
														{
															"nativeSrc": "556:15:16",
															"nodeType": "YulAssignment",
															"src": "556:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "566:5:16",
																"nodeType": "YulIdentifier",
																"src": "566:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "556:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "332:245:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "367:9:16",
														"nodeType": "YulTypedName",
														"src": "367:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "378:7:16",
														"nodeType": "YulTypedName",
														"src": "378:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "390:6:16",
														"nodeType": "YulTypedName",
														"src": "390:6:16",
														"type": ""
													}
												],
												"src": "332:245:16"
											},
											{
												"body": {
													"nativeSrc": "677:92:16",
													"nodeType": "YulBlock",
													"src": "677:92:16",
													"statements": [
														{
															"nativeSrc": "687:26:16",
															"nodeType": "YulAssignment",
															"src": "687:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "699:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "699:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "710:2:16",
																		"nodeType": "YulLiteral",
																		"src": "710:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "695:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "695:3:16"
																},
																"nativeSrc": "695:18:16",
																"nodeType": "YulFunctionCall",
																"src": "695:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "687:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "687:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "729:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "729:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "754:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "754:6:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "747:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "747:6:16"
																				},
																				"nativeSrc": "747:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "747:14:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "740:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "740:6:16"
																		},
																		"nativeSrc": "740:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "740:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "722:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "722:6:16"
																},
																"nativeSrc": "722:41:16",
																"nodeType": "YulFunctionCall",
																"src": "722:41:16"
															},
															"nativeSrc": "722:41:16",
															"nodeType": "YulExpressionStatement",
															"src": "722:41:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "582:187:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "646:9:16",
														"nodeType": "YulTypedName",
														"src": "646:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "657:6:16",
														"nodeType": "YulTypedName",
														"src": "657:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "668:4:16",
														"nodeType": "YulTypedName",
														"src": "668:4:16",
														"type": ""
													}
												],
												"src": "582:187:16"
											},
											{
												"body": {
													"nativeSrc": "824:350:16",
													"nodeType": "YulBlock",
													"src": "824:350:16",
													"statements": [
														{
															"nativeSrc": "834:26:16",
															"nodeType": "YulVariableDeclaration",
															"src": "834:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "854:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "854:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "848:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:16"
																},
																"nativeSrc": "848:12:16",
																"nodeType": "YulFunctionCall",
																"src": "848:12:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "838:6:16",
																	"nodeType": "YulTypedName",
																	"src": "838:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "881:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "881:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "869:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "869:6:16"
																},
																"nativeSrc": "869:19:16",
																"nodeType": "YulFunctionCall",
																"src": "869:19:16"
															},
															"nativeSrc": "869:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "869:19:16"
														},
														{
															"nativeSrc": "897:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "897:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "906:1:16",
																"nodeType": "YulLiteral",
																"src": "906:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "901:1:16",
																	"nodeType": "YulTypedName",
																	"src": "901:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "968:87:16",
																"nodeType": "YulBlock",
																"src": "968:87:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nativeSrc": "997:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "997:3:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1002:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "1002:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "993:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "993:3:16"
																							},
																							"nativeSrc": "993:11:16",
																							"nodeType": "YulFunctionCall",
																							"src": "993:11:16"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1006:4:16",
																							"nodeType": "YulLiteral",
																							"src": "1006:4:16",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "989:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "989:3:16"
																					},
																					"nativeSrc": "989:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "989:22:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1027:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "1027:5:16"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "1034:1:16",
																											"nodeType": "YulIdentifier",
																											"src": "1034:1:16"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "1023:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "1023:3:16"
																									},
																									"nativeSrc": "1023:13:16",
																									"nodeType": "YulFunctionCall",
																									"src": "1023:13:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1038:4:16",
																									"nodeType": "YulLiteral",
																									"src": "1038:4:16",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1019:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "1019:3:16"
																							},
																							"nativeSrc": "1019:24:16",
																							"nodeType": "YulFunctionCall",
																							"src": "1019:24:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1013:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1013:5:16"
																					},
																					"nativeSrc": "1013:31:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1013:31:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "982:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "982:6:16"
																			},
																			"nativeSrc": "982:63:16",
																			"nodeType": "YulFunctionCall",
																			"src": "982:63:16"
																		},
																		"nativeSrc": "982:63:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "982:63:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "927:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "930:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "930:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "924:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:16"
																},
																"nativeSrc": "924:13:16",
																"nodeType": "YulFunctionCall",
																"src": "924:13:16"
															},
															"nativeSrc": "916:139:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "938:21:16",
																"nodeType": "YulBlock",
																"src": "938:21:16",
																"statements": [
																	{
																		"nativeSrc": "940:17:16",
																		"nodeType": "YulAssignment",
																		"src": "940:17:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "949:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "949:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "952:4:16",
																					"nodeType": "YulLiteral",
																					"src": "952:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "945:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "945:3:16"
																			},
																			"nativeSrc": "945:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "945:12:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "940:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "940:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "920:3:16",
																"nodeType": "YulBlock",
																"src": "920:3:16",
																"statements": []
															},
															"src": "916:139:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "1079:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "1079:3:16"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1084:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1084:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1075:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:16"
																				},
																				"nativeSrc": "1075:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1075:16:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1093:4:16",
																				"nodeType": "YulLiteral",
																				"src": "1093:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1071:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1071:3:16"
																		},
																		"nativeSrc": "1071:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1071:27:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1100:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1100:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1064:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:16"
																},
																"nativeSrc": "1064:38:16",
																"nodeType": "YulFunctionCall",
																"src": "1064:38:16"
															},
															"nativeSrc": "1064:38:16",
															"nodeType": "YulExpressionStatement",
															"src": "1064:38:16"
														},
														{
															"nativeSrc": "1111:57:16",
															"nodeType": "YulAssignment",
															"src": "1111:57:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1126:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1126:3:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1139:6:16",
																								"nodeType": "YulIdentifier",
																								"src": "1139:6:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1147:2:16",
																								"nodeType": "YulLiteral",
																								"src": "1147:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1135:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1135:3:16"
																						},
																						"nativeSrc": "1135:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1135:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1156:2:16",
																								"nodeType": "YulLiteral",
																								"src": "1156:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1152:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1152:3:16"
																						},
																						"nativeSrc": "1152:7:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1152:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1131:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1131:3:16"
																				},
																				"nativeSrc": "1131:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1131:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1122:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1122:3:16"
																		},
																		"nativeSrc": "1122:39:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1122:39:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1163:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1163:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1118:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1118:3:16"
																},
																"nativeSrc": "1118:50:16",
																"nodeType": "YulFunctionCall",
																"src": "1118:50:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1111:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1111:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "774:400:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "801:5:16",
														"nodeType": "YulTypedName",
														"src": "801:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "808:3:16",
														"nodeType": "YulTypedName",
														"src": "808:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "816:3:16",
														"nodeType": "YulTypedName",
														"src": "816:3:16",
														"type": ""
													}
												],
												"src": "774:400:16"
											},
											{
												"body": {
													"nativeSrc": "1300:99:16",
													"nodeType": "YulBlock",
													"src": "1300:99:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1317:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1317:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1328:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1328:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1310:6:16"
																},
																"nativeSrc": "1310:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1310:21:16"
															},
															"nativeSrc": "1310:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "1310:21:16"
														},
														{
															"nativeSrc": "1340:53:16",
															"nodeType": "YulAssignment",
															"src": "1340:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1366:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1366:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1378:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1378:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1389:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1389:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1374:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1374:3:16"
																		},
																		"nativeSrc": "1374:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1374:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1348:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "1348:17:16"
																},
																"nativeSrc": "1348:45:16",
																"nodeType": "YulFunctionCall",
																"src": "1348:45:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1340:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1340:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1179:220:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1269:9:16",
														"nodeType": "YulTypedName",
														"src": "1269:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1280:6:16",
														"nodeType": "YulTypedName",
														"src": "1280:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1291:4:16",
														"nodeType": "YulTypedName",
														"src": "1291:4:16",
														"type": ""
													}
												],
												"src": "1179:220:16"
											},
											{
												"body": {
													"nativeSrc": "1474:156:16",
													"nodeType": "YulBlock",
													"src": "1474:156:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1520:16:16",
																"nodeType": "YulBlock",
																"src": "1520:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1529:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1529:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1532:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1532:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1522:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1522:6:16"
																			},
																			"nativeSrc": "1522:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1522:12:16"
																		},
																		"nativeSrc": "1522:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1522:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1495:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1495:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1504:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1504:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1491:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1491:3:16"
																		},
																		"nativeSrc": "1491:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1491:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1516:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1516:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1487:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1487:3:16"
																},
																"nativeSrc": "1487:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1487:32:16"
															},
															"nativeSrc": "1484:52:16",
															"nodeType": "YulIf",
															"src": "1484:52:16"
														},
														{
															"nativeSrc": "1545:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1545:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "1558:1:16",
																"nodeType": "YulLiteral",
																"src": "1558:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1549:5:16",
																	"nodeType": "YulTypedName",
																	"src": "1549:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1568:32:16",
															"nodeType": "YulAssignment",
															"src": "1568:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1590:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1590:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1577:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1577:12:16"
																},
																"nativeSrc": "1577:23:16",
																"nodeType": "YulFunctionCall",
																"src": "1577:23:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1568:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1568:5:16"
																}
															]
														},
														{
															"nativeSrc": "1609:15:16",
															"nodeType": "YulAssignment",
															"src": "1609:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "1619:5:16",
																"nodeType": "YulIdentifier",
																"src": "1619:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1609:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1609:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1404:226:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1440:9:16",
														"nodeType": "YulTypedName",
														"src": "1440:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1451:7:16",
														"nodeType": "YulTypedName",
														"src": "1451:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1463:6:16",
														"nodeType": "YulTypedName",
														"src": "1463:6:16",
														"type": ""
													}
												],
												"src": "1404:226:16"
											},
											{
												"body": {
													"nativeSrc": "1736:102:16",
													"nodeType": "YulBlock",
													"src": "1736:102:16",
													"statements": [
														{
															"nativeSrc": "1746:26:16",
															"nodeType": "YulAssignment",
															"src": "1746:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1758:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1758:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1769:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1769:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1754:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1754:3:16"
																},
																"nativeSrc": "1754:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1754:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1746:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1746:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1788:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1788:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1803:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1803:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1819:3:16",
																								"nodeType": "YulLiteral",
																								"src": "1819:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1824:1:16",
																								"nodeType": "YulLiteral",
																								"src": "1824:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1815:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1815:3:16"
																						},
																						"nativeSrc": "1815:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1815:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1828:1:16",
																						"nodeType": "YulLiteral",
																						"src": "1828:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1811:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1811:3:16"
																				},
																				"nativeSrc": "1811:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1811:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1799:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:16"
																		},
																		"nativeSrc": "1799:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1781:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1781:6:16"
																},
																"nativeSrc": "1781:51:16",
																"nodeType": "YulFunctionCall",
																"src": "1781:51:16"
															},
															"nativeSrc": "1781:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "1781:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1635:203:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1705:9:16",
														"nodeType": "YulTypedName",
														"src": "1705:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1716:6:16",
														"nodeType": "YulTypedName",
														"src": "1716:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1727:4:16",
														"nodeType": "YulTypedName",
														"src": "1727:4:16",
														"type": ""
													}
												],
												"src": "1635:203:16"
											},
											{
												"body": {
													"nativeSrc": "1892:124:16",
													"nodeType": "YulBlock",
													"src": "1892:124:16",
													"statements": [
														{
															"nativeSrc": "1902:29:16",
															"nodeType": "YulAssignment",
															"src": "1902:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1924:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1924:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1911:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1911:12:16"
																},
																"nativeSrc": "1911:20:16",
																"nodeType": "YulFunctionCall",
																"src": "1911:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1902:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1902:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1994:16:16",
																"nodeType": "YulBlock",
																"src": "1994:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2003:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2003:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2006:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2006:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1996:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1996:6:16"
																			},
																			"nativeSrc": "1996:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1996:12:16"
																		},
																		"nativeSrc": "1996:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1996:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1953:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1953:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1964:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1964:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1979:3:16",
																										"nodeType": "YulLiteral",
																										"src": "1979:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1984:1:16",
																										"nodeType": "YulLiteral",
																										"src": "1984:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1975:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1975:3:16"
																								},
																								"nativeSrc": "1975:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "1975:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1988:1:16",
																								"nodeType": "YulLiteral",
																								"src": "1988:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1971:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1971:3:16"
																						},
																						"nativeSrc": "1971:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1971:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1960:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1960:3:16"
																				},
																				"nativeSrc": "1960:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1960:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1950:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1950:2:16"
																		},
																		"nativeSrc": "1950:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1950:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1943:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1943:6:16"
																},
																"nativeSrc": "1943:50:16",
																"nodeType": "YulFunctionCall",
																"src": "1943:50:16"
															},
															"nativeSrc": "1940:70:16",
															"nodeType": "YulIf",
															"src": "1940:70:16"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1843:173:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1871:6:16",
														"nodeType": "YulTypedName",
														"src": "1871:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1882:5:16",
														"nodeType": "YulTypedName",
														"src": "1882:5:16",
														"type": ""
													}
												],
												"src": "1843:173:16"
											},
											{
												"body": {
													"nativeSrc": "2108:213:16",
													"nodeType": "YulBlock",
													"src": "2108:213:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2154:16:16",
																"nodeType": "YulBlock",
																"src": "2154:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2163:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2163:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2166:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2166:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2156:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2156:6:16"
																			},
																			"nativeSrc": "2156:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2156:12:16"
																		},
																		"nativeSrc": "2156:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2156:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2129:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2129:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2138:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2138:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2125:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2125:3:16"
																		},
																		"nativeSrc": "2125:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2125:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2150:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2150:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2121:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2121:3:16"
																},
																"nativeSrc": "2121:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2121:32:16"
															},
															"nativeSrc": "2118:52:16",
															"nodeType": "YulIf",
															"src": "2118:52:16"
														},
														{
															"nativeSrc": "2179:39:16",
															"nodeType": "YulAssignment",
															"src": "2179:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2208:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2208:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2189:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2189:18:16"
																},
																"nativeSrc": "2189:29:16",
																"nodeType": "YulFunctionCall",
																"src": "2189:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2179:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2179:6:16"
																}
															]
														},
														{
															"nativeSrc": "2227:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2227:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2240:1:16",
																"nodeType": "YulLiteral",
																"src": "2240:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2231:5:16",
																	"nodeType": "YulTypedName",
																	"src": "2231:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2250:41:16",
															"nodeType": "YulAssignment",
															"src": "2250:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2276:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2276:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2287:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2287:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2272:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:16"
																		},
																		"nativeSrc": "2272:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2272:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2259:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2259:12:16"
																},
																"nativeSrc": "2259:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2259:32:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2250:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2250:5:16"
																}
															]
														},
														{
															"nativeSrc": "2300:15:16",
															"nodeType": "YulAssignment",
															"src": "2300:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "2310:5:16",
																"nodeType": "YulIdentifier",
																"src": "2310:5:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2300:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2300:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2021:300:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2066:9:16",
														"nodeType": "YulTypedName",
														"src": "2066:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2077:7:16",
														"nodeType": "YulTypedName",
														"src": "2077:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2089:6:16",
														"nodeType": "YulTypedName",
														"src": "2089:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2097:6:16",
														"nodeType": "YulTypedName",
														"src": "2097:6:16",
														"type": ""
													}
												],
												"src": "2021:300:16"
											},
											{
												"body": {
													"nativeSrc": "2430:270:16",
													"nodeType": "YulBlock",
													"src": "2430:270:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2476:16:16",
																"nodeType": "YulBlock",
																"src": "2476:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2485:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2485:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2488:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2488:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2478:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2478:6:16"
																			},
																			"nativeSrc": "2478:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2478:12:16"
																		},
																		"nativeSrc": "2478:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2451:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2460:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2447:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:16"
																		},
																		"nativeSrc": "2447:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2472:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2443:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:16"
																},
																"nativeSrc": "2443:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2443:32:16"
															},
															"nativeSrc": "2440:52:16",
															"nodeType": "YulIf",
															"src": "2440:52:16"
														},
														{
															"nativeSrc": "2501:39:16",
															"nodeType": "YulAssignment",
															"src": "2501:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2530:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2530:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2511:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2511:18:16"
																},
																"nativeSrc": "2511:29:16",
																"nodeType": "YulFunctionCall",
																"src": "2511:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2501:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2501:6:16"
																}
															]
														},
														{
															"nativeSrc": "2549:48:16",
															"nodeType": "YulAssignment",
															"src": "2549:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2582:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2582:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2593:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2593:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2578:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2578:3:16"
																		},
																		"nativeSrc": "2578:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2578:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2559:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2559:18:16"
																},
																"nativeSrc": "2559:38:16",
																"nodeType": "YulFunctionCall",
																"src": "2559:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2549:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2549:6:16"
																}
															]
														},
														{
															"nativeSrc": "2606:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2606:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2619:1:16",
																"nodeType": "YulLiteral",
																"src": "2619:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2610:5:16",
																	"nodeType": "YulTypedName",
																	"src": "2610:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2629:41:16",
															"nodeType": "YulAssignment",
															"src": "2629:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2655:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2655:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2666:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2666:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2651:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2651:3:16"
																		},
																		"nativeSrc": "2651:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2651:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2638:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2638:12:16"
																},
																"nativeSrc": "2638:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2638:32:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2629:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2629:5:16"
																}
															]
														},
														{
															"nativeSrc": "2679:15:16",
															"nodeType": "YulAssignment",
															"src": "2679:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "2689:5:16",
																"nodeType": "YulIdentifier",
																"src": "2689:5:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2679:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2326:374:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2380:9:16",
														"nodeType": "YulTypedName",
														"src": "2380:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2391:7:16",
														"nodeType": "YulTypedName",
														"src": "2391:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2403:6:16",
														"nodeType": "YulTypedName",
														"src": "2403:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2411:6:16",
														"nodeType": "YulTypedName",
														"src": "2411:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2419:6:16",
														"nodeType": "YulTypedName",
														"src": "2419:6:16",
														"type": ""
													}
												],
												"src": "2326:374:16"
											},
											{
												"body": {
													"nativeSrc": "2775:116:16",
													"nodeType": "YulBlock",
													"src": "2775:116:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2821:16:16",
																"nodeType": "YulBlock",
																"src": "2821:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2830:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2830:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2833:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2833:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2823:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2823:6:16"
																			},
																			"nativeSrc": "2823:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2823:12:16"
																		},
																		"nativeSrc": "2823:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2823:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2796:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2796:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2805:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2805:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2792:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:16"
																		},
																		"nativeSrc": "2792:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2792:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2817:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2817:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2788:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2788:3:16"
																},
																"nativeSrc": "2788:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2788:32:16"
															},
															"nativeSrc": "2785:52:16",
															"nodeType": "YulIf",
															"src": "2785:52:16"
														},
														{
															"nativeSrc": "2846:39:16",
															"nodeType": "YulAssignment",
															"src": "2846:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2875:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2875:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2856:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2856:18:16"
																},
																"nativeSrc": "2856:29:16",
																"nodeType": "YulFunctionCall",
																"src": "2856:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2846:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2846:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2705:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2741:9:16",
														"nodeType": "YulTypedName",
														"src": "2741:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2752:7:16",
														"nodeType": "YulTypedName",
														"src": "2752:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2764:6:16",
														"nodeType": "YulTypedName",
														"src": "2764:6:16",
														"type": ""
													}
												],
												"src": "2705:186:16"
											},
											{
												"body": {
													"nativeSrc": "2928:95:16",
													"nodeType": "YulBlock",
													"src": "2928:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2945:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2945:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2952:3:16",
																				"nodeType": "YulLiteral",
																				"src": "2952:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2957:10:16",
																				"nodeType": "YulLiteral",
																				"src": "2957:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2948:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2948:3:16"
																		},
																		"nativeSrc": "2948:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2948:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2938:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2938:6:16"
																},
																"nativeSrc": "2938:31:16",
																"nodeType": "YulFunctionCall",
																"src": "2938:31:16"
															},
															"nativeSrc": "2938:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "2938:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2985:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2985:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2988:4:16",
																		"nodeType": "YulLiteral",
																		"src": "2988:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2978:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2978:6:16"
																},
																"nativeSrc": "2978:15:16",
																"nodeType": "YulFunctionCall",
																"src": "2978:15:16"
															},
															"nativeSrc": "2978:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "2978:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3009:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3009:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3012:4:16",
																		"nodeType": "YulLiteral",
																		"src": "3012:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3002:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3002:6:16"
																},
																"nativeSrc": "3002:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3002:15:16"
															},
															"nativeSrc": "3002:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "3002:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2896:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "2896:127:16"
											},
											{
												"body": {
													"nativeSrc": "3103:641:16",
													"nodeType": "YulBlock",
													"src": "3103:641:16",
													"statements": [
														{
															"nativeSrc": "3113:13:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3113:13:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3125:1:16",
																"nodeType": "YulLiteral",
																"src": "3125:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "size",
																	"nativeSrc": "3117:4:16",
																	"nodeType": "YulTypedName",
																	"src": "3117:4:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3169:22:16",
																"nodeType": "YulBlock",
																"src": "3169:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3171:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "3171:16:16"
																			},
																			"nativeSrc": "3171:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3171:18:16"
																		},
																		"nativeSrc": "3171:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3171:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3141:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3141:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3149:18:16",
																		"nodeType": "YulLiteral",
																		"src": "3149:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3138:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3138:2:16"
																},
																"nativeSrc": "3138:30:16",
																"nodeType": "YulFunctionCall",
																"src": "3138:30:16"
															},
															"nativeSrc": "3135:56:16",
															"nodeType": "YulIf",
															"src": "3135:56:16"
														},
														{
															"nativeSrc": "3200:43:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3200:43:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3222:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3222:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3230:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3230:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3218:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3218:3:16"
																		},
																		"nativeSrc": "3218:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3218:15:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3239:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3239:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3235:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3235:3:16"
																		},
																		"nativeSrc": "3235:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3235:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3214:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3214:3:16"
																},
																"nativeSrc": "3214:29:16",
																"nodeType": "YulFunctionCall",
																"src": "3214:29:16"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "3204:6:16",
																	"nodeType": "YulTypedName",
																	"src": "3204:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3252:25:16",
															"nodeType": "YulAssignment",
															"src": "3252:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "3264:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3264:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3272:4:16",
																		"nodeType": "YulLiteral",
																		"src": "3272:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3260:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3260:3:16"
																},
																"nativeSrc": "3260:17:16",
																"nodeType": "YulFunctionCall",
																"src": "3260:17:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3252:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3252:4:16"
																}
															]
														},
														{
															"nativeSrc": "3286:15:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3286:15:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3300:1:16",
																"nodeType": "YulLiteral",
																"src": "3300:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3290:6:16",
																	"nodeType": "YulTypedName",
																	"src": "3290:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3310:19:16",
															"nodeType": "YulAssignment",
															"src": "3310:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3326:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3326:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3320:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3320:5:16"
																},
																"nativeSrc": "3320:9:16",
																"nodeType": "YulFunctionCall",
																"src": "3320:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3310:6:16"
																}
															]
														},
														{
															"nativeSrc": "3338:60:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3338:60:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3360:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3360:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "result",
																						"nativeSrc": "3376:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3376:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3384:2:16",
																						"nodeType": "YulLiteral",
																						"src": "3384:2:16",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3372:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3372:3:16"
																				},
																				"nativeSrc": "3372:15:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3372:15:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3393:2:16",
																						"nodeType": "YulLiteral",
																						"src": "3393:2:16",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3389:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:16"
																				},
																				"nativeSrc": "3389:7:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:7:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3368:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3368:3:16"
																		},
																		"nativeSrc": "3368:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3356:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3356:3:16"
																},
																"nativeSrc": "3356:42:16",
																"nodeType": "YulFunctionCall",
																"src": "3356:42:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3342:10:16",
																	"nodeType": "YulTypedName",
																	"src": "3342:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3473:22:16",
																"nodeType": "YulBlock",
																"src": "3473:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3475:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "3475:16:16"
																			},
																			"nativeSrc": "3475:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3475:18:16"
																		},
																		"nativeSrc": "3475:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3475:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3416:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "3416:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3428:18:16",
																				"nodeType": "YulLiteral",
																				"src": "3428:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3413:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "3413:2:16"
																		},
																		"nativeSrc": "3413:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3413:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3452:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "3452:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3464:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3464:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3449:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "3449:2:16"
																		},
																		"nativeSrc": "3449:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3449:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3410:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3410:2:16"
																},
																"nativeSrc": "3410:62:16",
																"nodeType": "YulFunctionCall",
																"src": "3410:62:16"
															},
															"nativeSrc": "3407:88:16",
															"nodeType": "YulIf",
															"src": "3407:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3511:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3511:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3515:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "3515:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3504:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3504:6:16"
																},
																"nativeSrc": "3504:22:16",
																"nodeType": "YulFunctionCall",
																"src": "3504:22:16"
															},
															"nativeSrc": "3504:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "3504:22:16"
														},
														{
															"nativeSrc": "3535:15:16",
															"nodeType": "YulAssignment",
															"src": "3535:15:16",
															"value": {
																"name": "memPtr",
																"nativeSrc": "3544:6:16",
																"nodeType": "YulIdentifier",
																"src": "3544:6:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3535:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3535:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3566:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3566:6:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3574:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3574:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3559:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3559:6:16"
																},
																"nativeSrc": "3559:22:16",
																"nodeType": "YulFunctionCall",
																"src": "3559:22:16"
															},
															"nativeSrc": "3559:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "3559:22:16"
														},
														{
															"body": {
																"nativeSrc": "3619:16:16",
																"nodeType": "YulBlock",
																"src": "3619:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3628:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3628:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3631:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3631:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3621:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3621:6:16"
																			},
																			"nativeSrc": "3621:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3621:12:16"
																		},
																		"nativeSrc": "3621:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3621:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3600:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3600:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3605:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3605:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3596:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3596:3:16"
																		},
																		"nativeSrc": "3596:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3596:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3614:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3614:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3593:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3593:2:16"
																},
																"nativeSrc": "3593:25:16",
																"nodeType": "YulFunctionCall",
																"src": "3593:25:16"
															},
															"nativeSrc": "3590:45:16",
															"nodeType": "YulIf",
															"src": "3590:45:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3661:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3661:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3669:4:16",
																				"nodeType": "YulLiteral",
																				"src": "3669:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3657:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3657:3:16"
																		},
																		"nativeSrc": "3657:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3657:17:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3676:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3676:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3681:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3681:6:16"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3644:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3644:12:16"
																},
																"nativeSrc": "3644:44:16",
																"nodeType": "YulFunctionCall",
																"src": "3644:44:16"
															},
															"nativeSrc": "3644:44:16",
															"nodeType": "YulExpressionStatement",
															"src": "3644:44:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "3712:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3712:6:16"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3720:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3720:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3708:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3708:3:16"
																				},
																				"nativeSrc": "3708:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3708:19:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3729:4:16",
																				"nodeType": "YulLiteral",
																				"src": "3729:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3704:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3704:3:16"
																		},
																		"nativeSrc": "3704:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3704:30:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3736:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3736:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3697:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3697:6:16"
																},
																"nativeSrc": "3697:41:16",
																"nodeType": "YulFunctionCall",
																"src": "3697:41:16"
															},
															"nativeSrc": "3697:41:16",
															"nodeType": "YulExpressionStatement",
															"src": "3697:41:16"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nativeSrc": "3028:716:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3072:3:16",
														"nodeType": "YulTypedName",
														"src": "3072:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3077:6:16",
														"nodeType": "YulTypedName",
														"src": "3077:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3085:3:16",
														"nodeType": "YulTypedName",
														"src": "3085:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3093:5:16",
														"nodeType": "YulTypedName",
														"src": "3093:5:16",
														"type": ""
													}
												],
												"src": "3028:716:16"
											},
											{
												"body": {
													"nativeSrc": "3829:371:16",
													"nodeType": "YulBlock",
													"src": "3829:371:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3875:16:16",
																"nodeType": "YulBlock",
																"src": "3875:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3884:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3884:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3887:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3887:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3877:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3877:6:16"
																			},
																			"nativeSrc": "3877:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3877:12:16"
																		},
																		"nativeSrc": "3877:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3877:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3850:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3850:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3859:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3859:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3846:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3846:3:16"
																		},
																		"nativeSrc": "3846:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3846:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3871:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3871:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3842:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3842:3:16"
																},
																"nativeSrc": "3842:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3842:32:16"
															},
															"nativeSrc": "3839:52:16",
															"nodeType": "YulIf",
															"src": "3839:52:16"
														},
														{
															"nativeSrc": "3900:37:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3900:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3927:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3927:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3914:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3914:12:16"
																},
																"nativeSrc": "3914:23:16",
																"nodeType": "YulFunctionCall",
																"src": "3914:23:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3904:6:16",
																	"nodeType": "YulTypedName",
																	"src": "3904:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3980:16:16",
																"nodeType": "YulBlock",
																"src": "3980:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3989:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3989:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3992:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3992:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3982:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3982:6:16"
																			},
																			"nativeSrc": "3982:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3982:12:16"
																		},
																		"nativeSrc": "3982:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3982:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3952:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3952:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3960:18:16",
																		"nodeType": "YulLiteral",
																		"src": "3960:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3949:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3949:2:16"
																},
																"nativeSrc": "3949:30:16",
																"nodeType": "YulFunctionCall",
																"src": "3949:30:16"
															},
															"nativeSrc": "3946:50:16",
															"nodeType": "YulIf",
															"src": "3946:50:16"
														},
														{
															"nativeSrc": "4005:32:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4005:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4019:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4019:9:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4030:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4030:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4015:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4015:3:16"
																},
																"nativeSrc": "4015:22:16",
																"nodeType": "YulFunctionCall",
																"src": "4015:22:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4009:2:16",
																	"nodeType": "YulTypedName",
																	"src": "4009:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4085:16:16",
																"nodeType": "YulBlock",
																"src": "4085:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4094:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4094:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4097:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4097:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4087:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4087:6:16"
																			},
																			"nativeSrc": "4087:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:12:16"
																		},
																		"nativeSrc": "4087:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4087:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4064:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4064:2:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4068:4:16",
																						"nodeType": "YulLiteral",
																						"src": "4068:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4060:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4060:3:16"
																				},
																				"nativeSrc": "4060:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4060:13:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4075:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4075:7:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4056:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4056:3:16"
																		},
																		"nativeSrc": "4056:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4056:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4049:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4049:6:16"
																},
																"nativeSrc": "4049:35:16",
																"nodeType": "YulFunctionCall",
																"src": "4049:35:16"
															},
															"nativeSrc": "4046:55:16",
															"nodeType": "YulIf",
															"src": "4046:55:16"
														},
														{
															"nativeSrc": "4110:84:16",
															"nodeType": "YulAssignment",
															"src": "4110:84:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4159:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "4159:2:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4163:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4163:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4155:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4155:3:16"
																		},
																		"nativeSrc": "4155:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4155:11:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4181:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "4181:2:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4168:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "4168:12:16"
																		},
																		"nativeSrc": "4168:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4168:16:16"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4186:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "4186:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "4120:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "4120:34:16"
																},
																"nativeSrc": "4120:74:16",
																"nodeType": "YulFunctionCall",
																"src": "4120:74:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4110:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4110:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "3749:451:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3795:9:16",
														"nodeType": "YulTypedName",
														"src": "3795:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3806:7:16",
														"nodeType": "YulTypedName",
														"src": "3806:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3818:6:16",
														"nodeType": "YulTypedName",
														"src": "3818:6:16",
														"type": ""
													}
												],
												"src": "3749:451:16"
											},
											{
												"body": {
													"nativeSrc": "4289:263:16",
													"nodeType": "YulBlock",
													"src": "4289:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4335:16:16",
																"nodeType": "YulBlock",
																"src": "4335:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4344:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4344:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4347:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4347:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4337:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4337:6:16"
																			},
																			"nativeSrc": "4337:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4337:12:16"
																		},
																		"nativeSrc": "4337:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4337:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4310:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4310:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4319:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4319:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4306:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4306:3:16"
																		},
																		"nativeSrc": "4306:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4306:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4331:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4331:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4302:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4302:3:16"
																},
																"nativeSrc": "4302:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4302:32:16"
															},
															"nativeSrc": "4299:52:16",
															"nodeType": "YulIf",
															"src": "4299:52:16"
														},
														{
															"nativeSrc": "4360:39:16",
															"nodeType": "YulAssignment",
															"src": "4360:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4389:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4389:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4370:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "4370:18:16"
																},
																"nativeSrc": "4370:29:16",
																"nodeType": "YulFunctionCall",
																"src": "4370:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4360:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:16"
																}
															]
														},
														{
															"nativeSrc": "4408:45:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4408:45:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4438:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4438:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4449:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4449:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4434:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4434:3:16"
																		},
																		"nativeSrc": "4434:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4434:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4421:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4421:12:16"
																},
																"nativeSrc": "4421:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4421:32:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4412:5:16",
																	"nodeType": "YulTypedName",
																	"src": "4412:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4506:16:16",
																"nodeType": "YulBlock",
																"src": "4506:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4515:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4515:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4518:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4518:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4508:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4508:6:16"
																			},
																			"nativeSrc": "4508:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4508:12:16"
																		},
																		"nativeSrc": "4508:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4508:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4475:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4475:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4496:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "4496:5:16"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4489:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "4489:6:16"
																						},
																						"nativeSrc": "4489:13:16",
																						"nodeType": "YulFunctionCall",
																						"src": "4489:13:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4482:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "4482:6:16"
																				},
																				"nativeSrc": "4482:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4482:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4472:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4472:2:16"
																		},
																		"nativeSrc": "4472:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4472:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4465:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4465:6:16"
																},
																"nativeSrc": "4465:40:16",
																"nodeType": "YulFunctionCall",
																"src": "4465:40:16"
															},
															"nativeSrc": "4462:60:16",
															"nodeType": "YulIf",
															"src": "4462:60:16"
														},
														{
															"nativeSrc": "4531:15:16",
															"nodeType": "YulAssignment",
															"src": "4531:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "4541:5:16",
																"nodeType": "YulIdentifier",
																"src": "4541:5:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4531:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4531:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "4205:347:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4247:9:16",
														"nodeType": "YulTypedName",
														"src": "4247:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4258:7:16",
														"nodeType": "YulTypedName",
														"src": "4258:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4270:6:16",
														"nodeType": "YulTypedName",
														"src": "4270:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4278:6:16",
														"nodeType": "YulTypedName",
														"src": "4278:6:16",
														"type": ""
													}
												],
												"src": "4205:347:16"
											},
											{
												"body": {
													"nativeSrc": "4687:583:16",
													"nodeType": "YulBlock",
													"src": "4687:583:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4734:16:16",
																"nodeType": "YulBlock",
																"src": "4734:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4743:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4743:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4746:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4746:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4736:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4736:6:16"
																			},
																			"nativeSrc": "4736:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4736:12:16"
																		},
																		"nativeSrc": "4736:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4736:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4708:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4708:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4717:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4717:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4704:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4704:3:16"
																		},
																		"nativeSrc": "4704:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4704:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4729:3:16",
																		"nodeType": "YulLiteral",
																		"src": "4729:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4700:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4700:3:16"
																},
																"nativeSrc": "4700:33:16",
																"nodeType": "YulFunctionCall",
																"src": "4700:33:16"
															},
															"nativeSrc": "4697:53:16",
															"nodeType": "YulIf",
															"src": "4697:53:16"
														},
														{
															"nativeSrc": "4759:39:16",
															"nodeType": "YulAssignment",
															"src": "4759:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4788:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4788:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4769:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "4769:18:16"
																},
																"nativeSrc": "4769:29:16",
																"nodeType": "YulFunctionCall",
																"src": "4769:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4759:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4759:6:16"
																}
															]
														},
														{
															"nativeSrc": "4807:48:16",
															"nodeType": "YulAssignment",
															"src": "4807:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4840:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4840:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4851:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4851:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4836:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4836:3:16"
																		},
																		"nativeSrc": "4836:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4836:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4817:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "4817:18:16"
																},
																"nativeSrc": "4817:38:16",
																"nodeType": "YulFunctionCall",
																"src": "4817:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4807:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4807:6:16"
																}
															]
														},
														{
															"nativeSrc": "4864:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4864:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "4877:1:16",
																"nodeType": "YulLiteral",
																"src": "4877:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4868:5:16",
																	"nodeType": "YulTypedName",
																	"src": "4868:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4887:41:16",
															"nodeType": "YulAssignment",
															"src": "4887:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4924:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4924:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4909:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4909:3:16"
																		},
																		"nativeSrc": "4909:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4909:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4896:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4896:12:16"
																},
																"nativeSrc": "4896:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4887:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "4887:5:16"
																}
															]
														},
														{
															"nativeSrc": "4937:15:16",
															"nodeType": "YulAssignment",
															"src": "4937:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "4947:5:16",
																"nodeType": "YulIdentifier",
																"src": "4947:5:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4937:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4937:6:16"
																}
															]
														},
														{
															"nativeSrc": "4961:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4961:46:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4992:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4992:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5003:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5003:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4988:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4988:3:16"
																		},
																		"nativeSrc": "4988:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4988:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4975:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4975:12:16"
																},
																"nativeSrc": "4975:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4975:32:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4965:6:16",
																	"nodeType": "YulTypedName",
																	"src": "4965:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5050:16:16",
																"nodeType": "YulBlock",
																"src": "5050:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5059:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5059:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5062:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5062:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5052:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5052:6:16"
																			},
																			"nativeSrc": "5052:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5052:12:16"
																		},
																		"nativeSrc": "5052:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5052:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5022:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5022:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5030:18:16",
																		"nodeType": "YulLiteral",
																		"src": "5030:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5019:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5019:2:16"
																},
																"nativeSrc": "5019:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5019:30:16"
															},
															"nativeSrc": "5016:50:16",
															"nodeType": "YulIf",
															"src": "5016:50:16"
														},
														{
															"nativeSrc": "5075:32:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5075:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5089:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5089:9:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5100:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5100:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5085:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5085:3:16"
																},
																"nativeSrc": "5085:22:16",
																"nodeType": "YulFunctionCall",
																"src": "5085:22:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5079:2:16",
																	"nodeType": "YulTypedName",
																	"src": "5079:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5155:16:16",
																"nodeType": "YulBlock",
																"src": "5155:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5164:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5164:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5167:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5167:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5157:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5157:6:16"
																			},
																			"nativeSrc": "5157:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5157:12:16"
																		},
																		"nativeSrc": "5157:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5157:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "5134:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "5134:2:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5138:4:16",
																						"nodeType": "YulLiteral",
																						"src": "5138:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5130:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5130:3:16"
																				},
																				"nativeSrc": "5130:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5130:13:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5145:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5145:7:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5126:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5126:3:16"
																		},
																		"nativeSrc": "5126:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5126:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5119:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5119:6:16"
																},
																"nativeSrc": "5119:35:16",
																"nodeType": "YulFunctionCall",
																"src": "5119:35:16"
															},
															"nativeSrc": "5116:55:16",
															"nodeType": "YulIf",
															"src": "5116:55:16"
														},
														{
															"nativeSrc": "5180:84:16",
															"nodeType": "YulAssignment",
															"src": "5180:84:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5229:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "5229:2:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5233:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5233:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5225:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5225:3:16"
																		},
																		"nativeSrc": "5225:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5225:11:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5251:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "5251:2:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5238:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "5238:12:16"
																		},
																		"nativeSrc": "5238:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5238:16:16"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5256:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "5256:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "5190:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "5190:34:16"
																},
																"nativeSrc": "5190:74:16",
																"nodeType": "YulFunctionCall",
																"src": "5190:74:16"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5180:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5180:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "4557:713:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4629:9:16",
														"nodeType": "YulTypedName",
														"src": "4629:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4640:7:16",
														"nodeType": "YulTypedName",
														"src": "4640:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4652:6:16",
														"nodeType": "YulTypedName",
														"src": "4652:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4660:6:16",
														"nodeType": "YulTypedName",
														"src": "4660:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4668:6:16",
														"nodeType": "YulTypedName",
														"src": "4668:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4676:6:16",
														"nodeType": "YulTypedName",
														"src": "4676:6:16",
														"type": ""
													}
												],
												"src": "4557:713:16"
											},
											{
												"body": {
													"nativeSrc": "5362:173:16",
													"nodeType": "YulBlock",
													"src": "5362:173:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5408:16:16",
																"nodeType": "YulBlock",
																"src": "5408:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5417:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5417:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5420:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5420:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5410:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5410:6:16"
																			},
																			"nativeSrc": "5410:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5410:12:16"
																		},
																		"nativeSrc": "5410:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5410:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5383:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5383:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5392:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5392:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5379:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5379:3:16"
																		},
																		"nativeSrc": "5379:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5379:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5404:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5404:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5375:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5375:3:16"
																},
																"nativeSrc": "5375:32:16",
																"nodeType": "YulFunctionCall",
																"src": "5375:32:16"
															},
															"nativeSrc": "5372:52:16",
															"nodeType": "YulIf",
															"src": "5372:52:16"
														},
														{
															"nativeSrc": "5433:39:16",
															"nodeType": "YulAssignment",
															"src": "5433:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5462:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5462:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5443:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "5443:18:16"
																},
																"nativeSrc": "5443:29:16",
																"nodeType": "YulFunctionCall",
																"src": "5443:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5433:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5433:6:16"
																}
															]
														},
														{
															"nativeSrc": "5481:48:16",
															"nodeType": "YulAssignment",
															"src": "5481:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5514:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5514:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5525:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5525:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5510:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5510:3:16"
																		},
																		"nativeSrc": "5510:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5510:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5491:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "5491:18:16"
																},
																"nativeSrc": "5491:38:16",
																"nodeType": "YulFunctionCall",
																"src": "5491:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5481:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5481:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5275:260:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5320:9:16",
														"nodeType": "YulTypedName",
														"src": "5320:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5331:7:16",
														"nodeType": "YulTypedName",
														"src": "5331:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5343:6:16",
														"nodeType": "YulTypedName",
														"src": "5343:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5351:6:16",
														"nodeType": "YulTypedName",
														"src": "5351:6:16",
														"type": ""
													}
												],
												"src": "5275:260:16"
											},
											{
												"body": {
													"nativeSrc": "5655:102:16",
													"nodeType": "YulBlock",
													"src": "5655:102:16",
													"statements": [
														{
															"nativeSrc": "5665:26:16",
															"nodeType": "YulAssignment",
															"src": "5665:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5677:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5677:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5688:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5688:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5673:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5673:3:16"
																},
																"nativeSrc": "5673:18:16",
																"nodeType": "YulFunctionCall",
																"src": "5673:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5665:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5665:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5707:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5707:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5722:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5722:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5738:3:16",
																								"nodeType": "YulLiteral",
																								"src": "5738:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5743:1:16",
																								"nodeType": "YulLiteral",
																								"src": "5743:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5734:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "5734:3:16"
																						},
																						"nativeSrc": "5734:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "5734:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5747:1:16",
																						"nodeType": "YulLiteral",
																						"src": "5747:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5730:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:16"
																				},
																				"nativeSrc": "5730:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5718:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5718:3:16"
																		},
																		"nativeSrc": "5718:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5718:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5700:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5700:6:16"
																},
																"nativeSrc": "5700:51:16",
																"nodeType": "YulFunctionCall",
																"src": "5700:51:16"
															},
															"nativeSrc": "5700:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "5700:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$362__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:217:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5624:9:16",
														"nodeType": "YulTypedName",
														"src": "5624:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5635:6:16",
														"nodeType": "YulTypedName",
														"src": "5635:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5646:4:16",
														"nodeType": "YulTypedName",
														"src": "5646:4:16",
														"type": ""
													}
												],
												"src": "5540:217:16"
											},
											{
												"body": {
													"nativeSrc": "5794:95:16",
													"nodeType": "YulBlock",
													"src": "5794:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5811:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5811:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5818:3:16",
																				"nodeType": "YulLiteral",
																				"src": "5818:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5823:10:16",
																				"nodeType": "YulLiteral",
																				"src": "5823:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5814:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5814:3:16"
																		},
																		"nativeSrc": "5814:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5814:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5804:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5804:6:16"
																},
																"nativeSrc": "5804:31:16",
																"nodeType": "YulFunctionCall",
																"src": "5804:31:16"
															},
															"nativeSrc": "5804:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "5804:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5851:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5851:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5854:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5854:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5844:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5844:6:16"
																},
																"nativeSrc": "5844:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5844:15:16"
															},
															"nativeSrc": "5844:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "5844:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5875:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5875:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5878:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5878:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5868:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5868:6:16"
																},
																"nativeSrc": "5868:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5868:15:16"
															},
															"nativeSrc": "5868:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "5868:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5762:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "5762:127:16"
											},
											{
												"body": {
													"nativeSrc": "5942:77:16",
													"nodeType": "YulBlock",
													"src": "5942:77:16",
													"statements": [
														{
															"nativeSrc": "5952:16:16",
															"nodeType": "YulAssignment",
															"src": "5952:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5963:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "5963:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5966:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "5966:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5959:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5959:3:16"
																},
																"nativeSrc": "5959:9:16",
																"nodeType": "YulFunctionCall",
																"src": "5959:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5952:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5952:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5991:22:16",
																"nodeType": "YulBlock",
																"src": "5991:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5993:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5993:16:16"
																			},
																			"nativeSrc": "5993:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5993:18:16"
																		},
																		"nativeSrc": "5993:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5993:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5983:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "5983:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5986:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5986:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5980:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5980:2:16"
																},
																"nativeSrc": "5980:10:16",
																"nodeType": "YulFunctionCall",
																"src": "5980:10:16"
															},
															"nativeSrc": "5977:36:16",
															"nodeType": "YulIf",
															"src": "5977:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5894:125:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5925:1:16",
														"nodeType": "YulTypedName",
														"src": "5925:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5928:1:16",
														"nodeType": "YulTypedName",
														"src": "5928:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5934:3:16",
														"nodeType": "YulTypedName",
														"src": "5934:3:16",
														"type": ""
													}
												],
												"src": "5894:125:16"
											},
											{
												"body": {
													"nativeSrc": "6079:325:16",
													"nodeType": "YulBlock",
													"src": "6079:325:16",
													"statements": [
														{
															"nativeSrc": "6089:22:16",
															"nodeType": "YulAssignment",
															"src": "6089:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6103:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6103:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "6106:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "6106:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6099:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6099:3:16"
																},
																"nativeSrc": "6099:12:16",
																"nodeType": "YulFunctionCall",
																"src": "6099:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6089:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6089:6:16"
																}
															]
														},
														{
															"nativeSrc": "6120:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6120:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6150:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "6150:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6156:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6156:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6146:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6146:3:16"
																},
																"nativeSrc": "6146:12:16",
																"nodeType": "YulFunctionCall",
																"src": "6146:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6124:18:16",
																	"nodeType": "YulTypedName",
																	"src": "6124:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6197:31:16",
																"nodeType": "YulBlock",
																"src": "6197:31:16",
																"statements": [
																	{
																		"nativeSrc": "6199:27:16",
																		"nodeType": "YulAssignment",
																		"src": "6199:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6213:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "6213:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6221:4:16",
																					"nodeType": "YulLiteral",
																					"src": "6221:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6209:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6209:3:16"
																			},
																			"nativeSrc": "6209:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6209:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6199:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6199:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6177:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "6177:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6170:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6170:6:16"
																},
																"nativeSrc": "6170:26:16",
																"nodeType": "YulFunctionCall",
																"src": "6170:26:16"
															},
															"nativeSrc": "6167:61:16",
															"nodeType": "YulIf",
															"src": "6167:61:16"
														},
														{
															"body": {
																"nativeSrc": "6287:111:16",
																"nodeType": "YulBlock",
																"src": "6287:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6308:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6315:3:16",
																							"nodeType": "YulLiteral",
																							"src": "6315:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6320:10:16",
																							"nodeType": "YulLiteral",
																							"src": "6320:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6311:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "6311:3:16"
																					},
																					"nativeSrc": "6311:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6311:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6301:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6301:6:16"
																			},
																			"nativeSrc": "6301:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6301:31:16"
																		},
																		"nativeSrc": "6301:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6301:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6352:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6352:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6355:4:16",
																					"nodeType": "YulLiteral",
																					"src": "6355:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6345:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6345:6:16"
																			},
																			"nativeSrc": "6345:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6345:15:16"
																		},
																		"nativeSrc": "6345:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6345:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6380:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6380:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6383:4:16",
																					"nodeType": "YulLiteral",
																					"src": "6383:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6373:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6373:6:16"
																			},
																			"nativeSrc": "6373:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6373:15:16"
																		},
																		"nativeSrc": "6373:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6373:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6243:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "6243:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6266:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6266:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6274:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6274:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6263:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "6263:2:16"
																		},
																		"nativeSrc": "6263:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6263:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6240:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6240:2:16"
																},
																"nativeSrc": "6240:38:16",
																"nodeType": "YulFunctionCall",
																"src": "6240:38:16"
															},
															"nativeSrc": "6237:161:16",
															"nodeType": "YulIf",
															"src": "6237:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6024:380:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6059:4:16",
														"nodeType": "YulTypedName",
														"src": "6059:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6068:6:16",
														"nodeType": "YulTypedName",
														"src": "6068:6:16",
														"type": ""
													}
												],
												"src": "6024:380:16"
											},
											{
												"body": {
													"nativeSrc": "6566:214:16",
													"nodeType": "YulBlock",
													"src": "6566:214:16",
													"statements": [
														{
															"nativeSrc": "6576:26:16",
															"nodeType": "YulAssignment",
															"src": "6576:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6588:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6588:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6599:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6599:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6584:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6584:3:16"
																},
																"nativeSrc": "6584:18:16",
																"nodeType": "YulFunctionCall",
																"src": "6584:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6576:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6576:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6618:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6618:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6633:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6633:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6649:3:16",
																								"nodeType": "YulLiteral",
																								"src": "6649:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6654:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6654:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6645:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6645:3:16"
																						},
																						"nativeSrc": "6645:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6645:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6658:1:16",
																						"nodeType": "YulLiteral",
																						"src": "6658:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6641:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6641:3:16"
																				},
																				"nativeSrc": "6641:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6641:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6629:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6629:3:16"
																		},
																		"nativeSrc": "6629:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6629:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6611:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6611:6:16"
																},
																"nativeSrc": "6611:51:16",
																"nodeType": "YulFunctionCall",
																"src": "6611:51:16"
															},
															"nativeSrc": "6611:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "6611:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6682:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6682:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6693:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6693:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6678:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6678:3:16"
																		},
																		"nativeSrc": "6678:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6678:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6698:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6698:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6671:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6671:6:16"
																},
																"nativeSrc": "6671:34:16",
																"nodeType": "YulFunctionCall",
																"src": "6671:34:16"
															},
															"nativeSrc": "6671:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "6671:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6725:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6725:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6736:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6736:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6721:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6721:3:16"
																		},
																		"nativeSrc": "6721:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6721:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "6745:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6745:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6761:3:16",
																								"nodeType": "YulLiteral",
																								"src": "6761:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6766:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6766:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6757:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6757:3:16"
																						},
																						"nativeSrc": "6757:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6757:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6770:1:16",
																						"nodeType": "YulLiteral",
																						"src": "6770:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6753:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6753:3:16"
																				},
																				"nativeSrc": "6753:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6753:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6741:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6741:3:16"
																		},
																		"nativeSrc": "6741:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6741:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6714:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6714:6:16"
																},
																"nativeSrc": "6714:60:16",
																"nodeType": "YulFunctionCall",
																"src": "6714:60:16"
															},
															"nativeSrc": "6714:60:16",
															"nodeType": "YulExpressionStatement",
															"src": "6714:60:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "6409:371:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6519:9:16",
														"nodeType": "YulTypedName",
														"src": "6519:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6530:6:16",
														"nodeType": "YulTypedName",
														"src": "6530:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6538:6:16",
														"nodeType": "YulTypedName",
														"src": "6538:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6546:6:16",
														"nodeType": "YulTypedName",
														"src": "6546:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6557:4:16",
														"nodeType": "YulTypedName",
														"src": "6557:4:16",
														"type": ""
													}
												],
												"src": "6409:371:16"
											},
											{
												"body": {
													"nativeSrc": "6914:145:16",
													"nodeType": "YulBlock",
													"src": "6914:145:16",
													"statements": [
														{
															"nativeSrc": "6924:26:16",
															"nodeType": "YulAssignment",
															"src": "6924:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6936:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6936:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6947:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6932:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6932:3:16"
																},
																"nativeSrc": "6932:18:16",
																"nodeType": "YulFunctionCall",
																"src": "6932:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6924:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6924:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6966:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6966:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6981:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6981:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6997:3:16",
																								"nodeType": "YulLiteral",
																								"src": "6997:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7002:1:16",
																								"nodeType": "YulLiteral",
																								"src": "7002:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6993:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6993:3:16"
																						},
																						"nativeSrc": "6993:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6993:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7006:1:16",
																						"nodeType": "YulLiteral",
																						"src": "7006:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6989:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6989:3:16"
																				},
																				"nativeSrc": "6989:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6989:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6977:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6977:3:16"
																		},
																		"nativeSrc": "6977:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6977:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6959:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6959:6:16"
																},
																"nativeSrc": "6959:51:16",
																"nodeType": "YulFunctionCall",
																"src": "6959:51:16"
															},
															"nativeSrc": "6959:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "6959:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7030:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7030:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7041:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7041:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7026:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7026:3:16"
																		},
																		"nativeSrc": "7026:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7026:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7046:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7046:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7019:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7019:6:16"
																},
																"nativeSrc": "7019:34:16",
																"nodeType": "YulFunctionCall",
																"src": "7019:34:16"
															},
															"nativeSrc": "7019:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "7019:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6785:274:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6875:9:16",
														"nodeType": "YulTypedName",
														"src": "6875:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6886:6:16",
														"nodeType": "YulTypedName",
														"src": "6886:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6894:6:16",
														"nodeType": "YulTypedName",
														"src": "6894:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6905:4:16",
														"nodeType": "YulTypedName",
														"src": "6905:4:16",
														"type": ""
													}
												],
												"src": "6785:274:16"
											},
											{
												"body": {
													"nativeSrc": "7096:95:16",
													"nodeType": "YulBlock",
													"src": "7096:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7113:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7113:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7120:3:16",
																				"nodeType": "YulLiteral",
																				"src": "7120:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7125:10:16",
																				"nodeType": "YulLiteral",
																				"src": "7125:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7116:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7116:3:16"
																		},
																		"nativeSrc": "7116:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7116:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7106:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7106:6:16"
																},
																"nativeSrc": "7106:31:16",
																"nodeType": "YulFunctionCall",
																"src": "7106:31:16"
															},
															"nativeSrc": "7106:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "7106:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7153:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7153:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7156:4:16",
																		"nodeType": "YulLiteral",
																		"src": "7156:4:16",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7146:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7146:6:16"
																},
																"nativeSrc": "7146:15:16",
																"nodeType": "YulFunctionCall",
																"src": "7146:15:16"
															},
															"nativeSrc": "7146:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "7146:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7177:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7177:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7180:4:16",
																		"nodeType": "YulLiteral",
																		"src": "7180:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7170:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7170:6:16"
																},
																"nativeSrc": "7170:15:16",
																"nodeType": "YulFunctionCall",
																"src": "7170:15:16"
															},
															"nativeSrc": "7170:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "7170:15:16"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7064:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "7064:127:16"
											},
											{
												"body": {
													"nativeSrc": "7370:168:16",
													"nodeType": "YulBlock",
													"src": "7370:168:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7387:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7387:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7398:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7398:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7380:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7380:6:16"
																},
																"nativeSrc": "7380:21:16",
																"nodeType": "YulFunctionCall",
																"src": "7380:21:16"
															},
															"nativeSrc": "7380:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "7380:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7421:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7421:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7432:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7432:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7417:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7417:3:16"
																		},
																		"nativeSrc": "7417:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7417:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7437:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7437:2:16",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7410:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7410:6:16"
																},
																"nativeSrc": "7410:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7410:30:16"
															},
															"nativeSrc": "7410:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "7410:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7460:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7460:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7471:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7471:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7456:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7456:3:16"
																		},
																		"nativeSrc": "7456:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7456:18:16"
																	},
																	{
																		"hexValue": "53616c65206973206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "7476:20:16",
																		"nodeType": "YulLiteral",
																		"src": "7476:20:16",
																		"type": "",
																		"value": "Sale is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7449:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7449:6:16"
																},
																"nativeSrc": "7449:48:16",
																"nodeType": "YulFunctionCall",
																"src": "7449:48:16"
															},
															"nativeSrc": "7449:48:16",
															"nodeType": "YulExpressionStatement",
															"src": "7449:48:16"
														},
														{
															"nativeSrc": "7506:26:16",
															"nodeType": "YulAssignment",
															"src": "7506:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7518:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7518:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7529:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7529:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7514:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7514:3:16"
																},
																"nativeSrc": "7514:18:16",
																"nodeType": "YulFunctionCall",
																"src": "7514:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7506:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7506:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4ea3d59c64f65d2cbfee983191fdda536e8ebff816db04c792e2170d3375ac3a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7196:342:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7347:9:16",
														"nodeType": "YulTypedName",
														"src": "7347:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7361:4:16",
														"nodeType": "YulTypedName",
														"src": "7361:4:16",
														"type": ""
													}
												],
												"src": "7196:342:16"
											},
											{
												"body": {
													"nativeSrc": "7717:169:16",
													"nodeType": "YulBlock",
													"src": "7717:169:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7734:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7734:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7745:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7745:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7727:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7727:6:16"
																},
																"nativeSrc": "7727:21:16",
																"nodeType": "YulFunctionCall",
																"src": "7727:21:16"
															},
															"nativeSrc": "7727:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "7727:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7768:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7768:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7779:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7779:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7764:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7764:3:16"
																		},
																		"nativeSrc": "7764:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7764:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7784:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7784:2:16",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7757:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7757:6:16"
																},
																"nativeSrc": "7757:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7757:30:16"
															},
															"nativeSrc": "7757:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "7757:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7807:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7807:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7818:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7818:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7803:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7803:3:16"
																		},
																		"nativeSrc": "7803:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7803:18:16"
																	},
																	{
																		"hexValue": "496e636f7272656374204554482076616c7565",
																		"kind": "string",
																		"nativeSrc": "7823:21:16",
																		"nodeType": "YulLiteral",
																		"src": "7823:21:16",
																		"type": "",
																		"value": "Incorrect ETH value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7796:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7796:6:16"
																},
																"nativeSrc": "7796:49:16",
																"nodeType": "YulFunctionCall",
																"src": "7796:49:16"
															},
															"nativeSrc": "7796:49:16",
															"nodeType": "YulExpressionStatement",
															"src": "7796:49:16"
														},
														{
															"nativeSrc": "7854:26:16",
															"nodeType": "YulAssignment",
															"src": "7854:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7866:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7866:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7877:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7877:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7862:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7862:3:16"
																},
																"nativeSrc": "7862:18:16",
																"nodeType": "YulFunctionCall",
																"src": "7862:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7854:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7854:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f228330aaeab6837b31939dc3fb4d4d65288ff159222a88fcaf0fe99680d9aa8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7543:343:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7694:9:16",
														"nodeType": "YulTypedName",
														"src": "7694:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7708:4:16",
														"nodeType": "YulTypedName",
														"src": "7708:4:16",
														"type": ""
													}
												],
												"src": "7543:343:16"
											},
											{
												"body": {
													"nativeSrc": "7938:88:16",
													"nodeType": "YulBlock",
													"src": "7938:88:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7969:22:16",
																"nodeType": "YulBlock",
																"src": "7969:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7971:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "7971:16:16"
																			},
																			"nativeSrc": "7971:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7971:18:16"
																		},
																		"nativeSrc": "7971:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7971:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7954:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "7954:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7965:1:16",
																				"nodeType": "YulLiteral",
																				"src": "7965:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7961:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7961:3:16"
																		},
																		"nativeSrc": "7961:6:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7961:6:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7951:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7951:2:16"
																},
																"nativeSrc": "7951:17:16",
																"nodeType": "YulFunctionCall",
																"src": "7951:17:16"
															},
															"nativeSrc": "7948:43:16",
															"nodeType": "YulIf",
															"src": "7948:43:16"
														},
														{
															"nativeSrc": "8000:20:16",
															"nodeType": "YulAssignment",
															"src": "8000:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8011:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "8011:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8018:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8018:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8007:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8007:3:16"
																},
																"nativeSrc": "8007:13:16",
																"nodeType": "YulFunctionCall",
																"src": "8007:13:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8000:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8000:3:16"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "7891:135:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7920:5:16",
														"nodeType": "YulTypedName",
														"src": "7920:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7930:3:16",
														"nodeType": "YulTypedName",
														"src": "7930:3:16",
														"type": ""
													}
												],
												"src": "7891:135:16"
											},
											{
												"body": {
													"nativeSrc": "8205:169:16",
													"nodeType": "YulBlock",
													"src": "8205:169:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8222:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8222:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8233:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8233:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8215:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8215:6:16"
																},
																"nativeSrc": "8215:21:16",
																"nodeType": "YulFunctionCall",
																"src": "8215:21:16"
															},
															"nativeSrc": "8215:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "8215:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8256:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8256:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8267:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8267:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8252:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8252:3:16"
																		},
																		"nativeSrc": "8252:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8252:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8272:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8272:2:16",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8245:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8245:6:16"
																},
																"nativeSrc": "8245:30:16",
																"nodeType": "YulFunctionCall",
																"src": "8245:30:16"
															},
															"nativeSrc": "8245:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "8245:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8295:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8295:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8306:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8306:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8291:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8291:3:16"
																		},
																		"nativeSrc": "8291:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8291:18:16"
																	},
																	{
																		"hexValue": "4e6f74207265616368206d696e742074696d65",
																		"kind": "string",
																		"nativeSrc": "8311:21:16",
																		"nodeType": "YulLiteral",
																		"src": "8311:21:16",
																		"type": "",
																		"value": "Not reach mint time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8284:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8284:6:16"
																},
																"nativeSrc": "8284:49:16",
																"nodeType": "YulFunctionCall",
																"src": "8284:49:16"
															},
															"nativeSrc": "8284:49:16",
															"nodeType": "YulExpressionStatement",
															"src": "8284:49:16"
														},
														{
															"nativeSrc": "8342:26:16",
															"nodeType": "YulAssignment",
															"src": "8342:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8354:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8354:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8365:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8365:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8350:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8350:3:16"
																},
																"nativeSrc": "8350:18:16",
																"nodeType": "YulFunctionCall",
																"src": "8350:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8342:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8342:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d1099d1c7032e5298c84f4c6b860f4ab2795bab6ef1d36ad66089e1852a88ee1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8031:343:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8182:9:16",
														"nodeType": "YulTypedName",
														"src": "8182:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8196:4:16",
														"nodeType": "YulTypedName",
														"src": "8196:4:16",
														"type": ""
													}
												],
												"src": "8031:343:16"
											},
											{
												"body": {
													"nativeSrc": "8553:178:16",
													"nodeType": "YulBlock",
													"src": "8553:178:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8570:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8570:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8581:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8581:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8563:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8563:6:16"
																},
																"nativeSrc": "8563:21:16",
																"nodeType": "YulFunctionCall",
																"src": "8563:21:16"
															},
															"nativeSrc": "8563:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "8563:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8604:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8604:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8615:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8615:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8600:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8600:3:16"
																		},
																		"nativeSrc": "8600:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8620:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8620:2:16",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8593:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8593:6:16"
																},
																"nativeSrc": "8593:30:16",
																"nodeType": "YulFunctionCall",
																"src": "8593:30:16"
															},
															"nativeSrc": "8593:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "8593:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8643:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8643:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8654:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8654:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8639:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8639:3:16"
																		},
																		"nativeSrc": "8639:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8639:18:16"
																	},
																	{
																		"hexValue": "4f6e6c792077686974656c69737420757365722063616e206d696e74",
																		"kind": "string",
																		"nativeSrc": "8659:30:16",
																		"nodeType": "YulLiteral",
																		"src": "8659:30:16",
																		"type": "",
																		"value": "Only whitelist user can mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8632:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8632:6:16"
																},
																"nativeSrc": "8632:58:16",
																"nodeType": "YulFunctionCall",
																"src": "8632:58:16"
															},
															"nativeSrc": "8632:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "8632:58:16"
														},
														{
															"nativeSrc": "8699:26:16",
															"nodeType": "YulAssignment",
															"src": "8699:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8711:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8711:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8722:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8722:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8707:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8707:3:16"
																},
																"nativeSrc": "8707:18:16",
																"nodeType": "YulFunctionCall",
																"src": "8707:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8699:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8699:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_79449f1ff9b8ee509d5ecc9044233c86b19b5620be95a941a12c60ec9839df1c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8379:352:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8530:9:16",
														"nodeType": "YulTypedName",
														"src": "8530:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8544:4:16",
														"nodeType": "YulTypedName",
														"src": "8544:4:16",
														"type": ""
													}
												],
												"src": "8379:352:16"
											},
											{
												"body": {
													"nativeSrc": "8792:65:16",
													"nodeType": "YulBlock",
													"src": "8792:65:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8809:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8809:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "8812:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8812:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8802:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8802:6:16"
																},
																"nativeSrc": "8802:14:16",
																"nodeType": "YulFunctionCall",
																"src": "8802:14:16"
															},
															"nativeSrc": "8802:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "8802:14:16"
														},
														{
															"nativeSrc": "8825:26:16",
															"nodeType": "YulAssignment",
															"src": "8825:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8843:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8843:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8846:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8846:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "8833:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "8833:9:16"
																},
																"nativeSrc": "8833:18:16",
																"nodeType": "YulFunctionCall",
																"src": "8833:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8825:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8825:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "8736:121:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8775:3:16",
														"nodeType": "YulTypedName",
														"src": "8775:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "8783:4:16",
														"nodeType": "YulTypedName",
														"src": "8783:4:16",
														"type": ""
													}
												],
												"src": "8736:121:16"
											},
											{
												"body": {
													"nativeSrc": "8943:437:16",
													"nodeType": "YulBlock",
													"src": "8943:437:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "8976:398:16",
																"nodeType": "YulBlock",
																"src": "8976:398:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8997:1:16",
																					"nodeType": "YulLiteral",
																					"src": "8997:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "9000:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "9000:5:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8990:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8990:6:16"
																			},
																			"nativeSrc": "8990:16:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8990:16:16"
																		},
																		"nativeSrc": "8990:16:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8990:16:16"
																	},
																	{
																		"nativeSrc": "9019:30:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9019:30:16",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9041:1:16",
																					"nodeType": "YulLiteral",
																					"src": "9041:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9044:4:16",
																					"nodeType": "YulLiteral",
																					"src": "9044:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "9031:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9031:9:16"
																			},
																			"nativeSrc": "9031:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9031:18:16"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "9023:4:16",
																				"nodeType": "YulTypedName",
																				"src": "9023:4:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9062:57:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9062:57:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "9085:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "9085:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9095:1:16",
																							"nodeType": "YulLiteral",
																							"src": "9095:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "9102:10:16",
																									"nodeType": "YulIdentifier",
																									"src": "9102:10:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9114:2:16",
																									"nodeType": "YulLiteral",
																									"src": "9114:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9098:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "9098:3:16"
																							},
																							"nativeSrc": "9098:19:16",
																							"nodeType": "YulFunctionCall",
																							"src": "9098:19:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "9091:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "9091:3:16"
																					},
																					"nativeSrc": "9091:27:16",
																					"nodeType": "YulFunctionCall",
																					"src": "9091:27:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9081:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "9081:3:16"
																			},
																			"nativeSrc": "9081:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9081:38:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "9066:11:16",
																				"nodeType": "YulTypedName",
																				"src": "9066:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9156:23:16",
																			"nodeType": "YulBlock",
																			"src": "9156:23:16",
																			"statements": [
																				{
																					"nativeSrc": "9158:19:16",
																					"nodeType": "YulAssignment",
																					"src": "9158:19:16",
																					"value": {
																						"name": "data",
																						"nativeSrc": "9173:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "9173:4:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "9158:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "9158:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "9138:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "9138:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9150:4:16",
																					"nodeType": "YulLiteral",
																					"src": "9150:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "9135:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "9135:2:16"
																			},
																			"nativeSrc": "9135:20:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9135:20:16"
																		},
																		"nativeSrc": "9132:47:16",
																		"nodeType": "YulIf",
																		"src": "9132:47:16"
																	},
																	{
																		"nativeSrc": "9192:41:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9192:41:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "9206:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "9206:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9216:1:16",
																							"nodeType": "YulLiteral",
																							"src": "9216:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "9223:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "9223:3:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9228:2:16",
																									"nodeType": "YulLiteral",
																									"src": "9228:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9219:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "9219:3:16"
																							},
																							"nativeSrc": "9219:12:16",
																							"nodeType": "YulFunctionCall",
																							"src": "9219:12:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "9212:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "9212:3:16"
																					},
																					"nativeSrc": "9212:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "9212:20:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9202:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "9202:3:16"
																			},
																			"nativeSrc": "9202:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:31:16"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "9196:2:16",
																				"nodeType": "YulTypedName",
																				"src": "9196:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9246:24:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9246:24:16",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "9259:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "9259:11:16"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "9250:5:16",
																				"nodeType": "YulTypedName",
																				"src": "9250:5:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9344:20:16",
																			"nodeType": "YulBlock",
																			"src": "9344:20:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "9353:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "9353:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9360:1:16",
																								"nodeType": "YulLiteral",
																								"src": "9360:1:16",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "9346:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "9346:6:16"
																						},
																						"nativeSrc": "9346:16:16",
																						"nodeType": "YulFunctionCall",
																						"src": "9346:16:16"
																					},
																					"nativeSrc": "9346:16:16",
																					"nodeType": "YulExpressionStatement",
																					"src": "9346:16:16"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "9294:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "9294:5:16"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "9301:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "9301:2:16"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "9291:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "9291:2:16"
																			},
																			"nativeSrc": "9291:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9291:13:16"
																		},
																		"nativeSrc": "9283:81:16",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "9305:26:16",
																			"nodeType": "YulBlock",
																			"src": "9305:26:16",
																			"statements": [
																				{
																					"nativeSrc": "9307:22:16",
																					"nodeType": "YulAssignment",
																					"src": "9307:22:16",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "9320:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "9320:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9327:1:16",
																								"nodeType": "YulLiteral",
																								"src": "9327:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "9316:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "9316:3:16"
																						},
																						"nativeSrc": "9316:13:16",
																						"nodeType": "YulFunctionCall",
																						"src": "9316:13:16"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "9307:5:16",
																							"nodeType": "YulIdentifier",
																							"src": "9307:5:16"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "9287:3:16",
																			"nodeType": "YulBlock",
																			"src": "9287:3:16",
																			"statements": []
																		},
																		"src": "9283:81:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "8959:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8959:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8964:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8964:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8956:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "8956:2:16"
																},
																"nativeSrc": "8956:11:16",
																"nodeType": "YulFunctionCall",
																"src": "8956:11:16"
															},
															"nativeSrc": "8953:421:16",
															"nodeType": "YulIf",
															"src": "8953:421:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "8862:518:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "8915:5:16",
														"nodeType": "YulTypedName",
														"src": "8915:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8922:3:16",
														"nodeType": "YulTypedName",
														"src": "8922:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "8927:10:16",
														"nodeType": "YulTypedName",
														"src": "8927:10:16",
														"type": ""
													}
												],
												"src": "8862:518:16"
											},
											{
												"body": {
													"nativeSrc": "9470:81:16",
													"nodeType": "YulBlock",
													"src": "9470:81:16",
													"statements": [
														{
															"nativeSrc": "9480:65:16",
															"nodeType": "YulAssignment",
															"src": "9480:65:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9495:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "9495:4:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "9513:1:16",
																										"nodeType": "YulLiteral",
																										"src": "9513:1:16",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "9516:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "9516:3:16"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "9509:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "9509:3:16"
																								},
																								"nativeSrc": "9509:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "9509:11:16"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "9526:1:16",
																										"nodeType": "YulLiteral",
																										"src": "9526:1:16",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "9522:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "9522:3:16"
																								},
																								"nativeSrc": "9522:6:16",
																								"nodeType": "YulFunctionCall",
																								"src": "9522:6:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "9505:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "9505:3:16"
																						},
																						"nativeSrc": "9505:24:16",
																						"nodeType": "YulFunctionCall",
																						"src": "9505:24:16"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "9501:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9501:3:16"
																				},
																				"nativeSrc": "9501:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9501:29:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9491:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9491:3:16"
																		},
																		"nativeSrc": "9491:40:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9491:40:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9537:1:16",
																				"nodeType": "YulLiteral",
																				"src": "9537:1:16",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "9540:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "9540:3:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9533:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9533:3:16"
																		},
																		"nativeSrc": "9533:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9533:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9488:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "9488:2:16"
																},
																"nativeSrc": "9488:57:16",
																"nodeType": "YulFunctionCall",
																"src": "9488:57:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "9480:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "9480:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "9385:166:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9447:4:16",
														"nodeType": "YulTypedName",
														"src": "9447:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9453:3:16",
														"nodeType": "YulTypedName",
														"src": "9453:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "9461:4:16",
														"nodeType": "YulTypedName",
														"src": "9461:4:16",
														"type": ""
													}
												],
												"src": "9385:166:16"
											},
											{
												"body": {
													"nativeSrc": "9652:1203:16",
													"nodeType": "YulBlock",
													"src": "9652:1203:16",
													"statements": [
														{
															"nativeSrc": "9662:24:16",
															"nodeType": "YulVariableDeclaration",
															"src": "9662:24:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9682:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9682:3:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9676:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "9676:5:16"
																},
																"nativeSrc": "9676:10:16",
																"nodeType": "YulFunctionCall",
																"src": "9676:10:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "9666:6:16",
																	"nodeType": "YulTypedName",
																	"src": "9666:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9729:22:16",
																"nodeType": "YulBlock",
																"src": "9729:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9731:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "9731:16:16"
																			},
																			"nativeSrc": "9731:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9731:18:16"
																		},
																		"nativeSrc": "9731:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9731:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9701:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9701:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9709:18:16",
																		"nodeType": "YulLiteral",
																		"src": "9709:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9698:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "9698:2:16"
																},
																"nativeSrc": "9698:30:16",
																"nodeType": "YulFunctionCall",
																"src": "9698:30:16"
															},
															"nativeSrc": "9695:56:16",
															"nodeType": "YulIf",
															"src": "9695:56:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9804:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "9804:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "9842:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "9842:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "9836:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "9836:5:16"
																				},
																				"nativeSrc": "9836:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9836:11:16"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "9810:25:16",
																			"nodeType": "YulIdentifier",
																			"src": "9810:25:16"
																		},
																		"nativeSrc": "9810:38:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9810:38:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "9850:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9850:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "9760:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "9760:43:16"
																},
																"nativeSrc": "9760:97:16",
																"nodeType": "YulFunctionCall",
																"src": "9760:97:16"
															},
															"nativeSrc": "9760:97:16",
															"nodeType": "YulExpressionStatement",
															"src": "9760:97:16"
														},
														{
															"nativeSrc": "9866:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "9866:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "9883:1:16",
																"nodeType": "YulLiteral",
																"src": "9883:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9870:9:16",
																	"nodeType": "YulTypedName",
																	"src": "9870:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9893:17:16",
															"nodeType": "YulAssignment",
															"src": "9893:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "9906:4:16",
																"nodeType": "YulLiteral",
																"src": "9906:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9893:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "9893:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9956:642:16",
																		"nodeType": "YulBlock",
																		"src": "9956:642:16",
																		"statements": [
																			{
																				"nativeSrc": "9970:35:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9970:35:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "9989:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "9989:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "10001:2:16",
																									"nodeType": "YulLiteral",
																									"src": "10001:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "9997:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "9997:3:16"
																							},
																							"nativeSrc": "9997:7:16",
																							"nodeType": "YulFunctionCall",
																							"src": "9997:7:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9985:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "9985:3:16"
																					},
																					"nativeSrc": "9985:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "9985:20:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "9974:7:16",
																						"nodeType": "YulTypedName",
																						"src": "9974:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10018:49:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10018:49:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10062:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "10062:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "10032:29:16",
																						"nodeType": "YulIdentifier",
																						"src": "10032:29:16"
																					},
																					"nativeSrc": "10032:35:16",
																					"nodeType": "YulFunctionCall",
																					"src": "10032:35:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "10022:6:16",
																						"nodeType": "YulTypedName",
																						"src": "10022:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10080:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10080:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10089:1:16",
																					"nodeType": "YulLiteral",
																					"src": "10089:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "10084:1:16",
																						"nodeType": "YulTypedName",
																						"src": "10084:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10160:165:16",
																					"nodeType": "YulBlock",
																					"src": "10160:165:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10185:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "10185:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "10203:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "10203:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "10208:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "10208:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "10199:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "10199:3:16"
																												},
																												"nativeSrc": "10199:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "10199:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "10193:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "10193:5:16"
																										},
																										"nativeSrc": "10193:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "10193:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10178:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "10178:6:16"
																								},
																								"nativeSrc": "10178:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "10178:42:16"
																							},
																							"nativeSrc": "10178:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "10178:42:16"
																						},
																						{
																							"nativeSrc": "10237:24:16",
																							"nodeType": "YulAssignment",
																							"src": "10237:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10251:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "10251:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10259:1:16",
																										"nodeType": "YulLiteral",
																										"src": "10259:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10247:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "10247:3:16"
																								},
																								"nativeSrc": "10247:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "10247:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "10237:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "10237:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "10278:33:16",
																							"nodeType": "YulAssignment",
																							"src": "10278:33:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "10295:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "10295:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10306:4:16",
																										"nodeType": "YulLiteral",
																										"src": "10306:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10291:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "10291:3:16"
																								},
																								"nativeSrc": "10291:20:16",
																								"nodeType": "YulFunctionCall",
																								"src": "10291:20:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "10278:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "10278:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "10114:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "10114:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10117:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "10117:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10111:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "10111:2:16"
																					},
																					"nativeSrc": "10111:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "10111:14:16"
																				},
																				"nativeSrc": "10103:222:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "10126:21:16",
																					"nodeType": "YulBlock",
																					"src": "10126:21:16",
																					"statements": [
																						{
																							"nativeSrc": "10128:17:16",
																							"nodeType": "YulAssignment",
																							"src": "10128:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "10137:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "10137:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10140:4:16",
																										"nodeType": "YulLiteral",
																										"src": "10140:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10133:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "10133:3:16"
																								},
																								"nativeSrc": "10133:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "10133:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "10128:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "10128:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "10107:3:16",
																					"nodeType": "YulBlock",
																					"src": "10107:3:16",
																					"statements": []
																				},
																				"src": "10103:222:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "10373:166:16",
																					"nodeType": "YulBlock",
																					"src": "10373:166:16",
																					"statements": [
																						{
																							"nativeSrc": "10391:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "10391:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10418:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "10418:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10423:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "10423:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10414:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "10414:3:16"
																										},
																										"nativeSrc": "10414:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "10414:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10408:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "10408:5:16"
																								},
																								"nativeSrc": "10408:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "10408:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "10395:9:16",
																									"nodeType": "YulTypedName",
																									"src": "10395:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10458:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "10458:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "10470:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "10470:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "10497:1:16",
																																				"nodeType": "YulLiteral",
																																				"src": "10497:1:16",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "10500:6:16",
																																				"nodeType": "YulIdentifier",
																																				"src": "10500:6:16"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "10493:3:16",
																																			"nodeType": "YulIdentifier",
																																			"src": "10493:3:16"
																																		},
																																		"nativeSrc": "10493:14:16",
																																		"nodeType": "YulFunctionCall",
																																		"src": "10493:14:16"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "10509:3:16",
																																		"nodeType": "YulLiteral",
																																		"src": "10509:3:16",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "10489:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "10489:3:16"
																																},
																																"nativeSrc": "10489:24:16",
																																"nodeType": "YulFunctionCall",
																																"src": "10489:24:16"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "10519:1:16",
																																		"nodeType": "YulLiteral",
																																		"src": "10519:1:16",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "10515:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "10515:3:16"
																																},
																																"nativeSrc": "10515:6:16",
																																"nodeType": "YulFunctionCall",
																																"src": "10515:6:16"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "10485:3:16",
																															"nodeType": "YulIdentifier",
																															"src": "10485:3:16"
																														},
																														"nativeSrc": "10485:37:16",
																														"nodeType": "YulFunctionCall",
																														"src": "10485:37:16"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "10481:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "10481:3:16"
																												},
																												"nativeSrc": "10481:42:16",
																												"nodeType": "YulFunctionCall",
																												"src": "10481:42:16"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "10466:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "10466:3:16"
																										},
																										"nativeSrc": "10466:58:16",
																										"nodeType": "YulFunctionCall",
																										"src": "10466:58:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10451:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "10451:6:16"
																								},
																								"nativeSrc": "10451:74:16",
																								"nodeType": "YulFunctionCall",
																								"src": "10451:74:16"
																							},
																							"nativeSrc": "10451:74:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "10451:74:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10344:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "10344:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "10353:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "10353:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10341:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "10341:2:16"
																					},
																					"nativeSrc": "10341:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "10341:19:16"
																				},
																				"nativeSrc": "10338:201:16",
																				"nodeType": "YulIf",
																				"src": "10338:201:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10559:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "10559:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "10573:1:16",
																											"nodeType": "YulLiteral",
																											"src": "10573:1:16",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "10576:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "10576:6:16"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "10569:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "10569:3:16"
																									},
																									"nativeSrc": "10569:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "10569:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10585:1:16",
																									"nodeType": "YulLiteral",
																									"src": "10585:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10565:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "10565:3:16"
																							},
																							"nativeSrc": "10565:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "10565:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10552:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "10552:6:16"
																					},
																					"nativeSrc": "10552:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "10552:36:16"
																				},
																				"nativeSrc": "10552:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "10552:36:16"
																			}
																		]
																	},
																	"nativeSrc": "9949:649:16",
																	"nodeType": "YulCase",
																	"src": "9949:649:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9954:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9954:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10615:234:16",
																		"nodeType": "YulBlock",
																		"src": "10615:234:16",
																		"statements": [
																			{
																				"nativeSrc": "10629:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10629:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10642:1:16",
																					"nodeType": "YulLiteral",
																					"src": "10642:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "10633:5:16",
																						"nodeType": "YulTypedName",
																						"src": "10633:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10678:67:16",
																					"nodeType": "YulBlock",
																					"src": "10678:67:16",
																					"statements": [
																						{
																							"nativeSrc": "10696:35:16",
																							"nodeType": "YulAssignment",
																							"src": "10696:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10715:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "10715:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10720:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "10720:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10711:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "10711:3:16"
																										},
																										"nativeSrc": "10711:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "10711:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10705:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "10705:5:16"
																								},
																								"nativeSrc": "10705:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "10705:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "10696:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "10696:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "10659:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "10659:6:16"
																				},
																				"nativeSrc": "10656:89:16",
																				"nodeType": "YulIf",
																				"src": "10656:89:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10765:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "10765:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "10824:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "10824:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "10831:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "10831:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "10771:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "10771:52:16"
																							},
																							"nativeSrc": "10771:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "10771:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10758:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "10758:6:16"
																					},
																					"nativeSrc": "10758:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "10758:81:16"
																				},
																				"nativeSrc": "10758:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "10758:81:16"
																			}
																		]
																	},
																	"nativeSrc": "10607:242:16",
																	"nodeType": "YulCase",
																	"src": "10607:242:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9929:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9929:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9937:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9937:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9926:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "9926:2:16"
																},
																"nativeSrc": "9926:14:16",
																"nodeType": "YulFunctionCall",
																"src": "9926:14:16"
															},
															"nativeSrc": "9919:930:16",
															"nodeType": "YulSwitch",
															"src": "9919:930:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "9556:1299:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "9637:4:16",
														"nodeType": "YulTypedName",
														"src": "9637:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "9643:3:16",
														"nodeType": "YulTypedName",
														"src": "9643:3:16",
														"type": ""
													}
												],
												"src": "9556:1299:16"
											},
											{
												"body": {
													"nativeSrc": "11063:282:16",
													"nodeType": "YulBlock",
													"src": "11063:282:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11080:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11080:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11095:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11095:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11111:3:16",
																								"nodeType": "YulLiteral",
																								"src": "11111:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11116:1:16",
																								"nodeType": "YulLiteral",
																								"src": "11116:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11107:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "11107:3:16"
																						},
																						"nativeSrc": "11107:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "11107:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11120:1:16",
																						"nodeType": "YulLiteral",
																						"src": "11120:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11103:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11103:3:16"
																				},
																				"nativeSrc": "11103:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11103:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11091:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11091:3:16"
																		},
																		"nativeSrc": "11091:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11091:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11073:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11073:6:16"
																},
																"nativeSrc": "11073:51:16",
																"nodeType": "YulFunctionCall",
																"src": "11073:51:16"
															},
															"nativeSrc": "11073:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "11073:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11144:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11144:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11155:2:16",
																				"nodeType": "YulLiteral",
																				"src": "11155:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11140:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11140:3:16"
																		},
																		"nativeSrc": "11140:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11140:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11164:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11164:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11180:3:16",
																								"nodeType": "YulLiteral",
																								"src": "11180:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11185:1:16",
																								"nodeType": "YulLiteral",
																								"src": "11185:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11176:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "11176:3:16"
																						},
																						"nativeSrc": "11176:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "11176:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11189:1:16",
																						"nodeType": "YulLiteral",
																						"src": "11189:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11172:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11172:3:16"
																				},
																				"nativeSrc": "11172:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11172:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11160:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11160:3:16"
																		},
																		"nativeSrc": "11160:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11160:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11133:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11133:6:16"
																},
																"nativeSrc": "11133:60:16",
																"nodeType": "YulFunctionCall",
																"src": "11133:60:16"
															},
															"nativeSrc": "11133:60:16",
															"nodeType": "YulExpressionStatement",
															"src": "11133:60:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11213:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11213:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11224:2:16",
																				"nodeType": "YulLiteral",
																				"src": "11224:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11209:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11209:3:16"
																		},
																		"nativeSrc": "11209:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11209:18:16"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11229:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11229:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11202:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11202:6:16"
																},
																"nativeSrc": "11202:34:16",
																"nodeType": "YulFunctionCall",
																"src": "11202:34:16"
															},
															"nativeSrc": "11202:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "11202:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11256:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11256:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11267:2:16",
																				"nodeType": "YulLiteral",
																				"src": "11267:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11252:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11252:3:16"
																		},
																		"nativeSrc": "11252:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11252:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11272:3:16",
																		"nodeType": "YulLiteral",
																		"src": "11272:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11245:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11245:6:16"
																},
																"nativeSrc": "11245:31:16",
																"nodeType": "YulFunctionCall",
																"src": "11245:31:16"
															},
															"nativeSrc": "11245:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "11245:31:16"
														},
														{
															"nativeSrc": "11285:54:16",
															"nodeType": "YulAssignment",
															"src": "11285:54:16",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "11311:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11311:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11323:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11323:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11334:3:16",
																				"nodeType": "YulLiteral",
																				"src": "11334:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11319:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11319:3:16"
																		},
																		"nativeSrc": "11319:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11319:19:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "11293:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "11293:17:16"
																},
																"nativeSrc": "11293:46:16",
																"nodeType": "YulFunctionCall",
																"src": "11293:46:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11285:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11285:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "10860:485:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11008:9:16",
														"nodeType": "YulTypedName",
														"src": "11008:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11019:6:16",
														"nodeType": "YulTypedName",
														"src": "11019:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11027:6:16",
														"nodeType": "YulTypedName",
														"src": "11027:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11035:6:16",
														"nodeType": "YulTypedName",
														"src": "11035:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11043:6:16",
														"nodeType": "YulTypedName",
														"src": "11043:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11054:4:16",
														"nodeType": "YulTypedName",
														"src": "11054:4:16",
														"type": ""
													}
												],
												"src": "10860:485:16"
											},
											{
												"body": {
													"nativeSrc": "11430:169:16",
													"nodeType": "YulBlock",
													"src": "11430:169:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11476:16:16",
																"nodeType": "YulBlock",
																"src": "11476:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11485:1:16",
																					"nodeType": "YulLiteral",
																					"src": "11485:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11488:1:16",
																					"nodeType": "YulLiteral",
																					"src": "11488:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11478:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11478:6:16"
																			},
																			"nativeSrc": "11478:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11478:12:16"
																		},
																		"nativeSrc": "11478:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11478:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11451:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11451:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11460:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11460:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11447:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11447:3:16"
																		},
																		"nativeSrc": "11447:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11447:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11472:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11472:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11443:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11443:3:16"
																},
																"nativeSrc": "11443:32:16",
																"nodeType": "YulFunctionCall",
																"src": "11443:32:16"
															},
															"nativeSrc": "11440:52:16",
															"nodeType": "YulIf",
															"src": "11440:52:16"
														},
														{
															"nativeSrc": "11501:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "11501:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11520:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11520:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11514:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "11514:5:16"
																},
																"nativeSrc": "11514:16:16",
																"nodeType": "YulFunctionCall",
																"src": "11514:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "11505:5:16",
																	"nodeType": "YulTypedName",
																	"src": "11505:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11563:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "11563:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "11539:23:16",
																	"nodeType": "YulIdentifier",
																	"src": "11539:23:16"
																},
																"nativeSrc": "11539:30:16",
																"nodeType": "YulFunctionCall",
																"src": "11539:30:16"
															},
															"nativeSrc": "11539:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "11539:30:16"
														},
														{
															"nativeSrc": "11578:15:16",
															"nodeType": "YulAssignment",
															"src": "11578:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "11588:5:16",
																"nodeType": "YulIdentifier",
																"src": "11588:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "11578:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11578:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "11350:249:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11396:9:16",
														"nodeType": "YulTypedName",
														"src": "11396:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11407:7:16",
														"nodeType": "YulTypedName",
														"src": "11407:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11419:6:16",
														"nodeType": "YulTypedName",
														"src": "11419:6:16",
														"type": ""
													}
												],
												"src": "11350:249:16"
											},
											{
												"body": {
													"nativeSrc": "11653:79:16",
													"nodeType": "YulBlock",
													"src": "11653:79:16",
													"statements": [
														{
															"nativeSrc": "11663:17:16",
															"nodeType": "YulAssignment",
															"src": "11663:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11675:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "11675:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11678:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "11678:1:16"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11671:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11671:3:16"
																},
																"nativeSrc": "11671:9:16",
																"nodeType": "YulFunctionCall",
																"src": "11671:9:16"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11663:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11663:4:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11704:22:16",
																"nodeType": "YulBlock",
																"src": "11704:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11706:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "11706:16:16"
																			},
																			"nativeSrc": "11706:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11706:18:16"
																		},
																		"nativeSrc": "11706:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11706:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11695:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "11695:4:16"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11701:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "11701:1:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11692:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "11692:2:16"
																},
																"nativeSrc": "11692:11:16",
																"nodeType": "YulFunctionCall",
																"src": "11692:11:16"
															},
															"nativeSrc": "11689:37:16",
															"nodeType": "YulIf",
															"src": "11689:37:16"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11604:128:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11635:1:16",
														"nodeType": "YulTypedName",
														"src": "11635:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11638:1:16",
														"nodeType": "YulTypedName",
														"src": "11638:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11644:4:16",
														"nodeType": "YulTypedName",
														"src": "11644:4:16",
														"type": ""
													}
												],
												"src": "11604:128:16"
											},
											{
												"body": {
													"nativeSrc": "11769:95:16",
													"nodeType": "YulBlock",
													"src": "11769:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11786:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11786:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11793:3:16",
																				"nodeType": "YulLiteral",
																				"src": "11793:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11798:10:16",
																				"nodeType": "YulLiteral",
																				"src": "11798:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11789:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11789:3:16"
																		},
																		"nativeSrc": "11789:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11789:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11779:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11779:6:16"
																},
																"nativeSrc": "11779:31:16",
																"nodeType": "YulFunctionCall",
																"src": "11779:31:16"
															},
															"nativeSrc": "11779:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "11779:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11826:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11826:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11829:4:16",
																		"nodeType": "YulLiteral",
																		"src": "11829:4:16",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11819:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11819:6:16"
																},
																"nativeSrc": "11819:15:16",
																"nodeType": "YulFunctionCall",
																"src": "11819:15:16"
															},
															"nativeSrc": "11819:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "11819:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11850:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11850:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11853:4:16",
																		"nodeType": "YulLiteral",
																		"src": "11853:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11843:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11843:6:16"
																},
																"nativeSrc": "11843:15:16",
																"nodeType": "YulFunctionCall",
																"src": "11843:15:16"
															},
															"nativeSrc": "11843:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "11843:15:16"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "11737:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "11737:127:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(pos, i), 0x20), mload(add(add(value, i), 0x20)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let result := and(add(length, 31), not(31))\n        size := add(result, 0x20)\n        let memPtr := 0\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(result, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$362__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_4ea3d59c64f65d2cbfee983191fdda536e8ebff816db04c792e2170d3375ac3a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Sale is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f228330aaeab6837b31939dc3fb4d4d65288ff159222a88fcaf0fe99680d9aa8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Incorrect ETH value\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_d1099d1c7032e5298c84f4c6b860f4ab2795bab6ef1d36ad66089e1852a88ee1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Not reach mint time\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_79449f1ff9b8ee509d5ecc9044233c86b19b5620be95a941a12c60ec9839df1c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Only whitelist user can mint\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101fb575f3560e01c80636352211e11610113578063b88d4fde1161009d578063de8b51e11161006d578063de8b51e114610592578063e985e9c5146105a6578063f2fde38b146105c5578063f4a0a528146105e4578063fc0c546a14610603575f80fd5b8063b88d4fde14610516578063c87b56dd14610535578063cada2a1814610554578063d85d3d2714610573575f80fd5b806370a08231116100e357806370a0823114610493578063715018a6146104b25780638da5cb5b146104c657806395d89b41146104e3578063a22cb465146104f7575f80fd5b80636352211e1461041b5780636817c76c1461043a5780636aa71d181461044f5780637080d6fc1461047a575f80fd5b806318160ddd116101945780633004defe116101645780633004defe146103795780633ccfd60b146103b657806342842e0e146103ca5780634f6ccce7146103e9578063537efe3114610408575f80fd5b806318160ddd14610312578063232e623e1461032657806323b872dd1461033b5780632f745c591461035a575f80fd5b8063081812fc116101cf578063081812fc14610286578063095ea7b3146102bd5780630bb78ec1146102de5780630e726e6b146102fd575f80fd5b80629a9b7b146101ff57806301ffc9a71461022257806306dbc1311461025157806306fdde0314610265575b5f80fd5b34801561020a575f80fd5b50600b545b6040519081526020015b60405180910390f35b34801561022d575f80fd5b5061024161023c3660046115f1565b610622565b6040519015158152602001610219565b34801561025c575f80fd5b5061020f61064c565b348015610270575f80fd5b50610279610687565b6040516102199190611656565b348015610291575f80fd5b506102a56102a0366004611668565b610716565b6040516001600160a01b039091168152602001610219565b3480156102c8575f80fd5b506102dc6102d736600461169a565b61073d565b005b3480156102e9575f80fd5b506102796102f8366004611668565b61074c565b348015610308575f80fd5b5061020f600e5481565b34801561031d575f80fd5b5060085461020f565b348015610331575f80fd5b5061020f600f5481565b348015610346575f80fd5b506102dc6103553660046116c2565b6107e3565b348015610365575f80fd5b5061020f61037436600461169a565b610871565b348015610384575f80fd5b506102dc6103933660046116fc565b6001600160a01b03165f908152601260205260409020805460ff19166001179055565b3480156103c1575f80fd5b506102dc6108d4565b3480156103d5575f80fd5b506102dc6103e43660046116c2565b610915565b3480156103f4575f80fd5b5061020f610403366004611668565b610934565b61020f6104163660046117a0565b610989565b348015610426575f80fd5b506102a5610435366004611668565b610a7d565b348015610445575f80fd5b5061020f600d5481565b34801561045a575f80fd5b5061020f6104693660046116fc565b60136020525f908152604090205481565b348015610485575f80fd5b506010546102419060ff1681565b34801561049e575f80fd5b5061020f6104ad3660046116fc565b610a87565b3480156104bd575f80fd5b506102dc610acc565b3480156104d1575f80fd5b50600a546001600160a01b03166102a5565b3480156104ee575f80fd5b50610279610adf565b348015610502575f80fd5b506102dc6105113660046117e5565b610aee565b348015610521575f80fd5b506102dc61053036600461181e565b610af9565b348015610540575f80fd5b5061027961054f366004611668565b610b10565b34801561055f575f80fd5b506102dc61056e366004611668565b610bb8565b34801561057e575f80fd5b5061020f61058d3660046117a0565b610bc5565b34801561059d575f80fd5b506102dc610cbf565b3480156105b1575f80fd5b506102416105c0366004611895565b610cdb565b3480156105d0575f80fd5b506102dc6105df3660046116fc565b610d08565b3480156105ef575f80fd5b506102dc6105fe366004611668565b610d42565b34801561060e575f80fd5b50600c546102a5906001600160a01b031681565b5f6001600160e01b0319821663780e9d6360e01b1480610646575061064682610d4f565b92915050565b335f90815260136020526040812054810361066657505f90565b600e54335f9081526013602052604090205461068291906118da565b905090565b60605f8054610695906118ed565b80601f01602080910402602001604051908101604052809291908181526020018280546106c1906118ed565b801561070c5780601f106106e35761010080835404028352916020019161070c565b820191905f5260205f20905b8154815290600101906020018083116106ef57829003601f168201915b5050505050905090565b5f61072082610d9e565b505f828152600460205260409020546001600160a01b0316610646565b610748828233610dd6565b5050565b60116020525f908152604090208054610764906118ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610790906118ed565b80156107db5780601f106107b2576101008083540402835291602001916107db565b820191905f5260205f20905b8154815290600101906020018083116107be57829003601f168201915b505050505081565b6001600160a01b03821661081157604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f61081d838333610de3565b9050836001600160a01b0316816001600160a01b03161461086b576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610808565b50505050565b5f61087b83610a87565b82106108ac5760405163295f44f760e21b81526001600160a01b038416600482015260248101839052604401610808565b506001600160a01b03919091165f908152600660209081526040808320938352929052205490565b6108dc610eb6565b600a546040516001600160a01b03909116904780156108fc02915f818181858888f19350505050158015610912573d5f803e3d5ffd5b50565b61092f83838360405180602001604052805f815250610af9565b505050565b5f61093e60085490565b82106109665760405163295f44f760e21b81525f600482015260248101839052604401610808565b6008828154811061097957610979611925565b905f5260205f2001549050919050565b6010545f9060ff166109d25760405162461bcd60e51b815260206004820152601260248201527153616c65206973206e6f742061637469766560701b6044820152606401610808565b600d543414610a195760405162461bcd60e51b8152602060048201526013602482015272496e636f7272656374204554482076616c756560681b6044820152606401610808565b600b5f8154610a2790611939565b90915550600b54610a383382610ee3565b610a428184610efc565b60405181815233907f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe9060200160405180910390a292915050565b5f61064682610d9e565b5f6001600160a01b038216610ab1576040516322718ad960e21b81525f6004820152602401610808565b506001600160a01b03165f9081526003602052604090205490565b610ad4610eb6565b610add5f610f13565b565b606060018054610695906118ed565b610748338383610f64565b610b048484846107e3565b61086b84848484611002565b6060610b1b82610d9e565b505f8281526011602052604081208054610b34906118ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610b60906118ed565b8015610bab5780601f10610b8257610100808354040283529160200191610bab565b820191905f5260205f20905b815481529060010190602001808311610b8e57829003601f168201915b5093979650505050505050565b610bc0610eb6565b600e55565b600e54335f908152601360205260408120549091610be2916118da565b421015610c275760405162461bcd60e51b81526020600482015260136024820152724e6f74207265616368206d696e742074696d6560681b6044820152606401610808565b600f54421015610c8f57335f9081526012602052604090205460ff16610c8f5760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c792077686974656c69737420757365722063616e206d696e74000000006044820152606401610808565b600b5f8154610c9d90611939565b90915550600b54335f818152601360205260409020429055610a389082610ee3565b610cc7610eb6565b6010805460ff19811660ff90911615179055565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b610d10610eb6565b6001600160a01b038116610d3957604051631e4fbdf760e01b81525f6004820152602401610808565b61091281610f13565b610d4a610eb6565b600d55565b5f6001600160e01b031982166380ac58cd60e01b1480610d7f57506001600160e01b03198216635b5e139f60e01b145b8061064657506301ffc9a760e01b6001600160e01b0319831614610646565b5f818152600260205260408120546001600160a01b03168061064657604051637e27328960e01b815260048101849052602401610808565b61092f8383836001611128565b5f80610df085858561122c565b90506001600160a01b038116610e4c57610e4784600880545f838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610e6f565b846001600160a01b0316816001600160a01b031614610e6f57610e6f818561131e565b6001600160a01b038516610e8b57610e86846113ab565b610eae565b846001600160a01b0316816001600160a01b031614610eae57610eae8585611452565b949350505050565b600a546001600160a01b03163314610add5760405163118cdaa760e01b8152336004820152602401610808565b610748828260405180602001604052805f8152506114a0565b5f82815260116020526040902061092f8282611995565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216610f9657604051630b61174360e31b81526001600160a01b0383166004820152602401610808565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561086b57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290611044903390889087908790600401611a50565b6020604051808303815f875af192505050801561107e575060408051601f3d908101601f1916820190925261107b91810190611a8c565b60015b6110e5573d8080156110ab576040519150601f19603f3d011682016040523d82523d5f602084013e6110b0565b606091505b5080515f036110dd57604051633250574960e11b81526001600160a01b0385166004820152602401610808565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461112157604051633250574960e11b81526001600160a01b0385166004820152602401610808565b5050505050565b808061113c57506001600160a01b03821615155b156111fd575f61114b84610d9e565b90506001600160a01b038316158015906111775750826001600160a01b0316816001600160a01b031614155b801561118a57506111888184610cdb565b155b156111b35760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610808565b81156111fb5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f828152600260205260408120546001600160a01b0390811690831615611258576112588184866114b6565b6001600160a01b03811615611292576112735f855f80611128565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b038516156112c0576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b5f61132883610a87565b5f83815260076020526040902054909150808214611379576001600160a01b0384165f9081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b505f9182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008545f906113bc90600190611aa7565b5f83815260096020526040812054600880549394509092849081106113e3576113e3611925565b905f5260205f2001549050806008838154811061140257611402611925565b5f91825260208083209091019290925582815260099091526040808220849055858252812055600880548061143957611439611aba565b600190038181905f5260205f20015f9055905550505050565b5f600161145e84610a87565b6114689190611aa7565b6001600160a01b039093165f908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6114aa838361151a565b61092f5f848484611002565b6114c183838361157b565b61092f576001600160a01b0383166114ef57604051637e27328960e01b815260048101829052602401610808565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610808565b6001600160a01b03821661154357604051633250574960e11b81525f6004820152602401610808565b5f61154f83835f610de3565b90506001600160a01b0381161561092f576040516339e3563760e11b81525f6004820152602401610808565b5f6001600160a01b03831615801590610eae5750826001600160a01b0316846001600160a01b031614806115b457506115b48484610cdb565b80610eae5750505f908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b031981168114610912575f80fd5b5f60208284031215611601575f80fd5b813561160c816115dc565b9392505050565b5f81518084525f5b818110156116375760208185018101518683018201520161161b565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f61160c6020830184611613565b5f60208284031215611678575f80fd5b5035919050565b80356001600160a01b0381168114611695575f80fd5b919050565b5f80604083850312156116ab575f80fd5b6116b48361167f565b946020939093013593505050565b5f805f606084860312156116d4575f80fd5b6116dd8461167f565b92506116eb6020850161167f565b929592945050506040919091013590565b5f6020828403121561170c575f80fd5b61160c8261167f565b634e487b7160e01b5f52604160045260245ffd5b5f8067ffffffffffffffff84111561174357611743611715565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff8211171561177257611772611715565b604052838152905080828401851015611789575f80fd5b838360208301375f60208583010152509392505050565b5f602082840312156117b0575f80fd5b813567ffffffffffffffff8111156117c6575f80fd5b8201601f810184136117d6575f80fd5b610eae84823560208401611729565b5f80604083850312156117f6575f80fd5b6117ff8361167f565b915060208301358015158114611813575f80fd5b809150509250929050565b5f805f8060808587031215611831575f80fd5b61183a8561167f565b93506118486020860161167f565b925060408501359150606085013567ffffffffffffffff81111561186a575f80fd5b8501601f8101871361187a575f80fd5b61188987823560208401611729565b91505092959194509250565b5f80604083850312156118a6575f80fd5b6118af8361167f565b91506118bd6020840161167f565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610646576106466118c6565b600181811c9082168061190157607f821691505b60208210810361191f57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b5f6001820161194a5761194a6118c6565b5060010190565b601f82111561092f57805f5260205f20601f840160051c810160208510156119765750805b601f840160051c820191505b81811015611121575f8155600101611982565b815167ffffffffffffffff8111156119af576119af611715565b6119c3816119bd84546118ed565b84611951565b6020601f8211600181146119f5575f83156119de5750848201515b5f19600385901b1c1916600184901b178455611121565b5f84815260208120601f198516915b82811015611a245787850151825560209485019460019092019101611a04565b5084821015611a4157868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f90611a8290830184611613565b9695505050505050565b5f60208284031215611a9c575f80fd5b815161160c816115dc565b81810381811115610646576106466118c6565b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220ee74cac879b28e8bfbdee495019d9c67c93ce68aca16621f92649cbb20a18bc964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x113 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xDE8B51E1 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xDE8B51E1 EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0xF4A0A528 EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x603 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0xCADA2A18 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0xD85D3D27 EQ PUSH2 0x573 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x6AA71D18 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x7080D6FC EQ PUSH2 0x47A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x194 JUMPI DUP1 PUSH4 0x3004DEFE GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x3004DEFE EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x537EFE31 EQ PUSH2 0x408 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x232E623E EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x35A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1CF JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xBB78EC1 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xE726E6B EQ PUSH2 0x2FD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x9A9B7B EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x6DBC131 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x265 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x15F1 JUMP JUMPDEST PUSH2 0x622 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x219 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x64C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1656 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x219 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x20F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x8D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x934 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A0 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0xA7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x241 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0xACC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH2 0xADF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x502 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x511 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E5 JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x530 CALLDATASIZE PUSH1 0x4 PUSH2 0x181E JUMP JUMPDEST PUSH2 0xAF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH2 0x54F CALLDATASIZE PUSH1 0x4 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x56E CALLDATASIZE PUSH1 0x4 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0xBB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x58D CALLDATASIZE PUSH1 0x4 PUSH2 0x17A0 JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0xCBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x5C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1895 JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x5DF CALLDATASIZE PUSH1 0x4 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0xD08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x5FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0xD42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x2A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x646 JUMPI POP PUSH2 0x646 DUP3 PUSH2 0xD4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SUB PUSH2 0x666 JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x682 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x695 SWAP1 PUSH2 0x18ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C1 SWAP1 PUSH2 0x18ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x70C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x720 DUP3 PUSH2 0xD9E JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x646 JUMP JUMPDEST PUSH2 0x748 DUP3 DUP3 CALLER PUSH2 0xDD6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x764 SWAP1 PUSH2 0x18ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x790 SWAP1 PUSH2 0x18ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7DB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7BE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x81D DUP4 DUP4 CALLER PUSH2 0xDE3 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x808 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x87B DUP4 PUSH2 0xA87 JUMP JUMPDEST DUP3 LT PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x808 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8DC PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x912 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x92F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xAF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x93E PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x979 JUMPI PUSH2 0x979 PUSH2 0x1925 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH0 SWAP1 PUSH1 0xFF AND PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53616C65206973206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0xD SLOAD CALLVALUE EQ PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E636F7272656374204554482076616C7565 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0xB PUSH0 DUP2 SLOAD PUSH2 0xA27 SWAP1 PUSH2 0x1939 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0xB SLOAD PUSH2 0xA38 CALLER DUP3 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0xA42 DUP2 DUP5 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x646 DUP3 PUSH2 0xD9E JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAD4 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0xADD PUSH0 PUSH2 0xF13 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x695 SWAP1 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x748 CALLER DUP4 DUP4 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0xB04 DUP5 DUP5 DUP5 PUSH2 0x7E3 JUMP JUMPDEST PUSH2 0x86B DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB1B DUP3 PUSH2 0xD9E JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xB34 SWAP1 PUSH2 0x18ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB60 SWAP1 PUSH2 0x18ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBAB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB82 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBAB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB8E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP SWAP4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBC0 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0xE SSTORE JUMP JUMPDEST PUSH1 0xE SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xBE2 SWAP2 PUSH2 0x18DA JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xC27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F74207265616368206D696E742074696D65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP LT ISZERO PUSH2 0xC8F JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792077686974656C69737420757365722063616E206D696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0xB PUSH0 DUP2 SLOAD PUSH2 0xC9D SWAP1 PUSH2 0x1939 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0xB SLOAD CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH2 0xA38 SWAP1 DUP3 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0xCC7 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP1 SWAP2 AND ISZERO OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xD10 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST PUSH2 0x912 DUP2 PUSH2 0xF13 JUMP JUMPDEST PUSH2 0xD4A PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xD7F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x646 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x646 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST PUSH2 0x92F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1128 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDF0 DUP6 DUP6 DUP6 PUSH2 0x122C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE4C JUMPI PUSH2 0xE47 DUP5 PUSH1 0x8 DUP1 SLOAD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE6F JUMPI PUSH2 0xE6F DUP2 DUP6 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xE8B JUMPI PUSH2 0xE86 DUP5 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0xEAE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEAE JUMPI PUSH2 0xEAE DUP6 DUP6 PUSH2 0x1452 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST PUSH2 0x748 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x14A0 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x92F DUP3 DUP3 PUSH2 0x1995 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF96 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1044 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x107E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x107B SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10E5 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x10AB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x10DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x113C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x11FD JUMPI PUSH0 PUSH2 0x114B DUP5 PUSH2 0xD9E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1177 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x118A JUMPI POP PUSH2 0x1188 DUP2 DUP5 PUSH2 0xCDB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x11B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x11FB JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x1258 JUMPI PUSH2 0x1258 DUP2 DUP5 DUP7 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1292 JUMPI PUSH2 0x1273 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1128 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x12C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1328 DUP4 PUSH2 0xA87 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x1379 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH0 SWAP1 PUSH2 0x13BC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x13E3 JUMPI PUSH2 0x13E3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1402 JUMPI PUSH2 0x1402 PUSH2 0x1925 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1439 JUMPI PUSH2 0x1439 PUSH2 0x1ABA JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x145E DUP5 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH2 0x14AA DUP4 DUP4 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x92F PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x14C1 DUP4 DUP4 DUP4 PUSH2 0x157B JUMP JUMPDEST PUSH2 0x92F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x808 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1543 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST PUSH0 PUSH2 0x154F DUP4 DUP4 PUSH0 PUSH2 0xDE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x92F JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x808 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xEAE JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x15B4 JUMPI POP PUSH2 0x15B4 DUP5 DUP5 PUSH2 0xCDB JUMP JUMPDEST DUP1 PUSH2 0xEAE JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x912 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1601 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x160C DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1637 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x161B JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x160C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1613 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1678 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1695 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16AB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16B4 DUP4 PUSH2 0x167F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16DD DUP5 PUSH2 0x167F JUMP JUMPDEST SWAP3 POP PUSH2 0x16EB PUSH1 0x20 DUP6 ADD PUSH2 0x167F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x170C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x160C DUP3 PUSH2 0x167F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x1743 JUMPI PUSH2 0x1743 PUSH2 0x1715 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1772 JUMPI PUSH2 0x1772 PUSH2 0x1715 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x1789 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x17D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEAE DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1729 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17FF DUP4 PUSH2 0x167F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1813 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1831 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x183A DUP6 PUSH2 0x167F JUMP JUMPDEST SWAP4 POP PUSH2 0x1848 PUSH1 0x20 DUP7 ADD PUSH2 0x167F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x186A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x187A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1889 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x18AF DUP4 PUSH2 0x167F JUMP JUMPDEST SWAP2 POP PUSH2 0x18BD PUSH1 0x20 DUP5 ADD PUSH2 0x167F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x646 JUMPI PUSH2 0x646 PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1901 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x191F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x194A JUMPI PUSH2 0x194A PUSH2 0x18C6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x92F JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1976 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1121 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1982 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19AF JUMPI PUSH2 0x19AF PUSH2 0x1715 JUMP JUMPDEST PUSH2 0x19C3 DUP2 PUSH2 0x19BD DUP5 SLOAD PUSH2 0x18ED JUMP JUMPDEST DUP5 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x19F5 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x19DE JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1121 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A24 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1A04 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1A41 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1A82 SWAP1 DUP4 ADD DUP5 PUSH2 0x1613 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A9C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x160C DUP2 PUSH2 0x15DC JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x646 JUMPI PUSH2 0x646 PUSH2 0x18C6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH21 0xCAC879B28E8BFBDEE495019D9C67C93CE68ACA1662 0x1F SWAP3 PUSH5 0x9CBB20A18B 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "382:3162:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3330:97;;;;;;;;;;-1:-1:-1;3404:15:15;;3330:97;;;160:25:16;;;148:2;133:18;3330:97:15;;;;;;;;1435:222:6;;;;;;;;;;-1:-1:-1;1435:222:6;;;;;:::i;:::-;;:::i;:::-;;;747:14:16;;740:22;722:41;;710:2;695:18;1435:222:6;582:187:16;1844:249:15;;;;;;;;;;;;;:::i;2365:89:3:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;;;;;-1:-1:-1;3497:154:3;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1799:32:16;;;1781:51;;1769:2;1754:18;3497:154:3;1635:203:16;3323:113:3;;;;;;;;;;-1:-1:-1;3323:113:3;;;;;:::i;:::-;;:::i;:::-;;659:52:15;;;;;;;;;;-1:-1:-1;659:52:15;;;;;:::i;:::-;;:::i;549:27::-;;;;;;;;;;;;;;;;2062:102:6;;;;;;;;;;-1:-1:-1;2140:10:6;:17;2062:102;;583:35:15;;;;;;;;;;;;;;;;4143:578:3;;;;;;;;;;-1:-1:-1;4143:578:3;;;;;:::i;:::-;;:::i;1736:255:6:-;;;;;;;;;;-1:-1:-1;1736:255:6;;;;;:::i;:::-;;:::i;2736:88:15:-;;;;;;;;;;-1:-1:-1;2736:88:15;;;;;:::i;:::-;-1:-1:-1;;;;;2794:15:15;;;;;:9;:15;;;;;:22;;-1:-1:-1;;2794:22:15;2812:4;2794:22;;;2736:88;3435:106;;;;;;;;;;;;;:::i;4787:132:3:-;;;;;;;;;;-1:-1:-1;4787:132:3;;;;;:::i;:::-;;:::i;2236:226:6:-;;;;;;;;;;-1:-1:-1;2236:226:6;;;;;:::i;:::-;;:::i;1411:425:15:-;;;;;;:::i;:::-;;:::i;2185:118:3:-;;;;;;;;;;-1:-1:-1;2185:118:3;;;;;:::i;:::-;;:::i;505:37:15:-;;;;;;;;;;;;;;;;759:47;;;;;;;;;;-1:-1:-1;759:47:15;;;;;:::i;:::-;;;;;;;;;;;;;;625:25;;;;;;;;;;-1:-1:-1;625:25:15;;;;;;;;1920:208:3;;;;;;;;;;-1:-1:-1;1920:208:3;;;;;:::i;:::-;;:::i;2293:101:0:-;;;;;;;;;;;;;:::i;1638:85::-;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;2518:93:3;;;;;;;;;;;;;:::i;3718:144::-;;;;;;;;;;-1:-1:-1;3718:144:3;;;;;:::i;:::-;;:::i;4985:208::-;;;;;;;;;;-1:-1:-1;4985:208:3;;;;;:::i;:::-;;:::i;1183:220:15:-;;;;;;;;;;-1:-1:-1;1183:220:15;;;;;:::i;:::-;;:::i;2996:114::-;;;;;;;;;;-1:-1:-1;2996:114:15;;;;;:::i;:::-;;:::i;2101:627::-;;;;;;;;;;-1:-1:-1;2101:627:15;;;;;:::i;:::-;;:::i;3118:94::-;;;;;;;;;;;;;:::i;3928:153:3:-;;;;;;;;;;-1:-1:-1;3928:153:3;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;3220:102:15:-;;;;;;;;;;-1:-1:-1;3220:102:15;;;;;:::i;:::-;;:::i;479:19::-;;;;;;;;;;-1:-1:-1;479:19:15;;;;-1:-1:-1;;;;;479:19:15;;;1435:222:6;1537:4;-1:-1:-1;;;;;;1560:50:6;;-1:-1:-1;;;1560:50:6;;:90;;;1614:36;1638:11;1614:23;:36::i;:::-;1553:97;1435:222;-1:-1:-1;;1435:222:6:o;1844:249:15:-;1938:10;1888:20;1925:24;;;:12;:24;;;;;;:29;;1921:165;;-1:-1:-1;1986:1:15;1844:249;:::o;1921:165::-;2062:12;;2048:10;2035:24;;;;:12;:24;;;;;;:39;;2062:12;2035:39;:::i;:::-;2020:54;;1844:249;:::o;2365:89:3:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:3;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:3;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:9;3394:8:3;:35::i;:::-;3323:113;;:::o;659:52:15:-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4143:578:3:-;-1:-1:-1;;;;;4237:16:3;;4233:87;;4276:33;;-1:-1:-1;;;4276:33:3;;4306:1;4276:33;;;1781:51:16;1754:18;;4276:33:3;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;735:10:9;4562:7:3;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:3;:13;-1:-1:-1;;;;;4610:21:3;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:3;;-1:-1:-1;;;;;6629:32:16;;;4654:50:3;;;6611:51:16;6678:18;;;6671:34;;;6741:32;;6721:18;;;6714:60;6584:18;;4654:50:3;6409:371:16;4606:109:3;4223:498;4143:578;;;:::o;1736:255:6:-;1824:7;1856:16;1866:5;1856:9;:16::i;:::-;1847:5;:25;1843:99;;1895:36;;-1:-1:-1;;;1895:36:6;;-1:-1:-1;;;;;6977:32:16;;1895:36:6;;;6959:51:16;7026:18;;;7019:34;;;6932:18;;1895:36:6;6785:274:16;1843:99:6;-1:-1:-1;;;;;;1958:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1736:255::o;3435:106:15:-;1531:13:0;:11;:13::i;:::-;1710:6;;3485:48:15::1;::::0;-1:-1:-1;;;;;1710:6:0;;;;3511:21:15::1;3485:48:::0;::::1;;;::::0;::::1;::::0;;;3511:21;1710:6:0;3485:48:15;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;3435:106::o:0;4787:132:3:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2236:226:6:-;2302:7;2334:13;2140:10;:17;;2062:102;2334:13;2325:5;:22;2321:101;;2370:41;;-1:-1:-1;;;2370:41:6;;2401:1;2370:41;;;6959:51:16;7026:18;;;7019:34;;;6932:18;;2370:41:6;6785:274:16;2321:101:6;2438:10;2449:5;2438:17;;;;;;;;:::i;:::-;;;;;;;;;2431:24;;2236:226;;;:::o;1411:425:15:-;1503:13;;1475:7;;1503:13;;1495:44;;;;-1:-1:-1;;;1495:44:15;;7398:2:16;1495:44:15;;;7380:21:16;7437:2;7417:18;;;7410:30;-1:-1:-1;;;7456:18:16;;;7449:48;7514:18;;1495:44:15;7196:342:16;1495:44:15;1571:9;;1558;:22;1550:54;;;;-1:-1:-1;;;1550:54:15;;7745:2:16;1550:54:15;;;7727:21:16;7784:2;7764:18;;;7757:30;-1:-1:-1;;;7803:18:16;;;7796:49;7862:18;;1550:54:15;7543:343:16;1550:54:15;1619:15;;1617:17;;;;;:::i;:::-;;;;-1:-1:-1;1663:15:15;;1689:30;1699:10;1663:15;1689:9;:30::i;:::-;1730:26;1743:7;1752:3;1730:12;:26::i;:::-;1774:27;;160:25:16;;;1781:10:15;;1774:27;;148:2:16;133:18;1774:27:15;;;;;;;1821:7;1411:425;-1:-1:-1;;1411:425:15:o;2185:118:3:-;2248:7;2274:22;2288:7;2274:13;:22::i;1920:208::-;1983:7;-1:-1:-1;;;;;2006:19:3;;2002:87;;2048:30;;-1:-1:-1;;;2048:30:3;;2075:1;2048:30;;;1781:51:16;1754:18;;2048:30:3;1635:203:16;2002:87:3;-1:-1:-1;;;;;;2105:16:3;;;;;:9;:16;;;;;;;1920:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2518:93:3:-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:9;3836:8:3;3846;3803:18;:52::i;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;1183:220:15:-;1264:13;1290:22;1304:7;1290:13;:22::i;:::-;-1:-1:-1;1323:23:15;1349:19;;;:10;:19;;;;;1323:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1323:45:15;;1183:220;-1:-1:-1;;;;;;;1183:220:15:o;2996:114::-;1531:13:0;:11;:13::i;:::-;3074:12:15::1;:28:::0;2996:114::o;2101:627::-;2240:12;;2226:10;2152:7;2213:24;;;:12;:24;;;;;;2152:7;;2213:39;;;:::i;:::-;2194:15;:58;;2172:127;;;;-1:-1:-1;;;2172:127:15;;8233:2:16;2172:127:15;;;8215:21:16;8272:2;8252:18;;;8245:30;-1:-1:-1;;;8291:18:16;;;8284:49;8350:18;;2172:127:15;8031:343:16;2172:127:15;2332:20;;2314:15;:38;2310:134;;;2387:10;2377:21;;;;:9;:21;;;;;;;;2369:62;;;;-1:-1:-1;;;2369:62:15;;8581:2:16;2369:62:15;;;8563:21:16;8620:2;8600:18;;;8593:30;8659;8639:18;;;8632:58;8707:18;;2369:62:15;8379:352:16;2369:62:15;2458:15;;2456:17;;;;;:::i;:::-;;;;-1:-1:-1;2502:15:15;;2541:10;2484:15;2528:24;;;:12;:24;;;;;2555:15;2528:42;;2581:30;;2502:15;2581:9;:30::i;3118:94::-;1531:13:0;:11;:13::i;:::-;3191::15::1;::::0;;-1:-1:-1;;3174:30:15;::::1;3191:13;::::0;;::::1;3190:14;3174:30;::::0;;3118:94::o;3928:153:3:-;-1:-1:-1;;;;;4039:25:3;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1781:51:16::0;1754:18;;2672:31:0::1;1635:203:16::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;3220:102:15:-:0;1531:13:0;:11;:13::i;:::-;3292:9:15::1;:22:::0;3220:102::o;1561:300:3:-;1663:4;-1:-1:-1;;;;;;1698:40:3;;-1:-1:-1;;;1698:40:3;;:104;;-1:-1:-1;;;;;;;1754:48:3;;-1:-1:-1;;;1754:48:3;1698:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:11;;;1818:36:3;762:146:11;16138:241:3;16201:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:3;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:3;;;;;160:25:16;;;133:18;;16309:31:3;14:177:16;14418:120:3;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;2518:625:6:-;2613:7;2632:21;2656:32;2670:2;2674:7;2683:4;2656:13;:32::i;:::-;2632:56;-1:-1:-1;;;;;;2703:27:6;;2699:210;;2746:40;2778:7;3949:10;:17;;3922:24;;;;:15;:24;;;;;:44;;;3976:24;;;;;;;;;;;;3846:161;2746:40;2699:210;;;2824:2;-1:-1:-1;;;;;2807:19:6;:13;-1:-1:-1;;;;;2807:19:6;;2803:106;;2842:56;2875:13;2890:7;2842:32;:56::i;:::-;-1:-1:-1;;;;;2922:16:6;;2918:188;;2954:45;2991:7;2954:36;:45::i;:::-;2918:188;;;3037:2;-1:-1:-1;;;;;3020:19:6;:13;-1:-1:-1;;;;;3020:19:6;;3016:90;;3055:40;3083:2;3087:7;3055:27;:40::i;:::-;3123:13;2518:625;-1:-1:-1;;;;2518:625:6:o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:9;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:9;1901:40:0;;;1781:51:16;1754:18;;1901:40:0;1635:203:16;10633:100:3;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;2832:156:15:-;2949:19;;;;:10;:19;;;;;:31;2971:9;2949:19;:31;:::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15591:312:3:-;-1:-1:-1;;;;;15698:22:3;;15694:91;;15743:31;;-1:-1:-1;;;15743:31:3;;-1:-1:-1;;;;;1799:32:16;;15743:31:3;;;1781:51:16;1754:18;;15743:31:3;1635:203:16;15694:91:3;-1:-1:-1;;;;;15794:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:3;;;;;;;;;;15855:41;;722::16;;;15855::3;;695:18:16;15855:41:3;;;;;;;15591:312;;;:::o;16918:782::-;-1:-1:-1;;;;;17034:14:3;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:3;;-1:-1:-1;;;;;17072:36:3;;;;;:71;;735:10:9;;17123:4:3;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:3;;;;;;;;-1:-1:-1;;17072:71:3;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17430:25;;-1:-1:-1;;;17430:25:3;;-1:-1:-1;;;;;1799:32:16;;17430:25:3;;;1781:51:16;1754:18;;17430:25:3;1635:203:16;17377:293:3;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:3;;-1:-1:-1;;;17190:51:3;17186:130;;17272:25;;-1:-1:-1;;;17272:25:3;;-1:-1:-1;;;;;1799:32:16;;17272:25:3;;;1781:51:16;1754:18;;17272:25:3;1635:203:16;17186:130:3;17144:186;16918:782;;;;:::o;14720:662::-;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:3;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:3;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:3;:5;-1:-1:-1;;;;;15115:13:3;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15189:27;;-1:-1:-1;;;15189:27:3;;-1:-1:-1;;;;;1799:32:16;;15189:27:3;;;1781:51:16;1754:18;;15189:27:3;1635:203:16;15089:142:3;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:3;15292:5;-1:-1:-1;;;;;15283:28:3;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:3;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:3;-1:-1:-1;;;;;15346:29:3;;;;;;;;;;14720:662::o;8838:795::-;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:3;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:3;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:3;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:3;;;9157:256;-1:-1:-1;;;;;9427:16:3;;;9423:107;;-1:-1:-1;;;;;9487:13:3;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:3;-1:-1:-1;;;;;9540:21:3;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:3:o;4624:959:6:-;4886:22;4911:15;4921:4;4911:9;:15::i;:::-;4936:18;4957:26;;;:17;:26;;;;;;4886:40;;-1:-1:-1;5087:28:6;;;5083:323;;-1:-1:-1;;;;;5153:18:6;;5131:19;5153:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5202:30;;;;;;:44;;;5318:30;;:17;:30;;;;;:43;;;5083:323;-1:-1:-1;5499:26:6;;;;:17;:26;;;;;;;;5492:33;;;-1:-1:-1;;;;;5542:18:6;;;;;:12;:18;;;;;:34;;;;;;;5535:41;4624:959::o;5871:1061::-;6145:10;:17;6120:22;;6145:21;;6165:1;;6145:21;:::i;:::-;6176:18;6197:24;;;:15;:24;;;;;;6565:10;:26;;6120:46;;-1:-1:-1;6197:24:6;;6120:46;;6565:26;;;;;;:::i;:::-;;;;;;;;;6543:48;;6627:11;6602:10;6613;6602:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6706:28;;;:15;:28;;;;;;;:41;;;6875:24;;;;;6868:31;6909:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5942:990;;;5871:1061;:::o;3437:214::-;3521:14;3554:1;3538:13;3548:2;3538:9;:13::i;:::-;:17;;;;:::i;:::-;-1:-1:-1;;;;;3565:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3609:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3437:214:6:o;10954:182:3:-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:3;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:3;;;;;160:25:16;;;133:18;;7298:31:3;14:177:16;7248:186:3;7375:44;;-1:-1:-1;;;7375:44:3;;-1:-1:-1;;;;;6977:32:16;;7375:44:3;;;6959:51:16;7026:18;;;7019:34;;;6932:18;;7375:44:3;6785:274:16;9955:327:3;-1:-1:-1;;;;;10022:16:3;;10018:87;;10061:33;;-1:-1:-1;;;10061:33:3;;10091:1;10061:33;;;1781:51:16;1754:18;;10061:33:3;1635:203:16;10018:87:3;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;;;;;;10184:27:3;;;10180:96;;10234:31;;-1:-1:-1;;;10234:31:3;;10262:1;10234:31;;;1781:51:16;1754:18;;10234:31:3;1635:203:16;6376:272:3;6479:4;-1:-1:-1;;;;;6514:21:3;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:3;:5;-1:-1:-1;;;;;6552:16:3;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;-1:-1:-1;;6008:7:3;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:3;;;6608:32;;;;6495:146;-1:-1:-1;6376:272:3:o;196:131:16:-;-1:-1:-1;;;;;;270:32:16;;260:43;;250:71;;317:1;314;307:12;332:245;390:6;443:2;431:9;422:7;418:23;414:32;411:52;;;459:1;456;449:12;411:52;498:9;485:23;517:30;541:5;517:30;:::i;:::-;566:5;332:245;-1:-1:-1;;;332:245:16:o;774:400::-;816:3;854:5;848:12;881:6;876:3;869:19;906:1;916:139;930:6;927:1;924:13;916:139;;;1038:4;1023:13;;;1019:24;;1013:31;993:11;;;989:22;;982:63;945:12;916:139;;;920:3;1100:1;1093:4;1084:6;1079:3;1075:16;1071:27;1064:38;1163:4;1156:2;1152:7;1147:2;1139:6;1135:15;1131:29;1126:3;1122:39;1118:50;1111:57;;;774:400;;;;:::o;1179:220::-;1328:2;1317:9;1310:21;1291:4;1348:45;1389:2;1378:9;1374:18;1366:6;1348:45;:::i;1404:226::-;1463:6;1516:2;1504:9;1495:7;1491:23;1487:32;1484:52;;;1532:1;1529;1522:12;1484:52;-1:-1:-1;1577:23:16;;1404:226;-1:-1:-1;1404:226:16:o;1843:173::-;1911:20;;-1:-1:-1;;;;;1960:31:16;;1950:42;;1940:70;;2006:1;2003;1996:12;1940:70;1843:173;;;:::o;2021:300::-;2089:6;2097;2150:2;2138:9;2129:7;2125:23;2121:32;2118:52;;;2166:1;2163;2156:12;2118:52;2189:29;2208:9;2189:29;:::i;:::-;2179:39;2287:2;2272:18;;;;2259:32;;-1:-1:-1;;;2021:300:16:o;2326:374::-;2403:6;2411;2419;2472:2;2460:9;2451:7;2447:23;2443:32;2440:52;;;2488:1;2485;2478:12;2440:52;2511:29;2530:9;2511:29;:::i;:::-;2501:39;;2559:38;2593:2;2582:9;2578:18;2559:38;:::i;:::-;2326:374;;2549:48;;-1:-1:-1;;;2666:2:16;2651:18;;;;2638:32;;2326:374::o;2705:186::-;2764:6;2817:2;2805:9;2796:7;2792:23;2788:32;2785:52;;;2833:1;2830;2823:12;2785:52;2856:29;2875:9;2856:29;:::i;2896:127::-;2957:10;2952:3;2948:20;2945:1;2938:31;2988:4;2985:1;2978:15;3012:4;3009:1;3002:15;3028:716;3093:5;3125:1;3149:18;3141:6;3138:30;3135:56;;;3171:18;;:::i;:::-;-1:-1:-1;3326:2:16;3320:9;-1:-1:-1;;3239:2:16;3218:15;;3214:29;;3384:2;3372:15;3368:29;3356:42;;3449:22;;;3428:18;3413:34;;3410:62;3407:88;;;3475:18;;:::i;:::-;3511:2;3504:22;3559;;;3544:6;-1:-1:-1;3544:6:16;3596:16;;;3593:25;-1:-1:-1;3590:45:16;;;3631:1;3628;3621:12;3590:45;3681:6;3676:3;3669:4;3661:6;3657:17;3644:44;3736:1;3729:4;3720:6;3712;3708:19;3704:30;3697:41;;3028:716;;;;;:::o;3749:451::-;3818:6;3871:2;3859:9;3850:7;3846:23;3842:32;3839:52;;;3887:1;3884;3877:12;3839:52;3927:9;3914:23;3960:18;3952:6;3949:30;3946:50;;;3992:1;3989;3982:12;3946:50;4015:22;;4068:4;4060:13;;4056:27;-1:-1:-1;4046:55:16;;4097:1;4094;4087:12;4046:55;4120:74;4186:7;4181:2;4168:16;4163:2;4159;4155:11;4120:74;:::i;4205:347::-;4270:6;4278;4331:2;4319:9;4310:7;4306:23;4302:32;4299:52;;;4347:1;4344;4337:12;4299:52;4370:29;4389:9;4370:29;:::i;:::-;4360:39;;4449:2;4438:9;4434:18;4421:32;4496:5;4489:13;4482:21;4475:5;4472:32;4462:60;;4518:1;4515;4508:12;4462:60;4541:5;4531:15;;;4205:347;;;;;:::o;4557:713::-;4652:6;4660;4668;4676;4729:3;4717:9;4708:7;4704:23;4700:33;4697:53;;;4746:1;4743;4736:12;4697:53;4769:29;4788:9;4769:29;:::i;:::-;4759:39;;4817:38;4851:2;4840:9;4836:18;4817:38;:::i;:::-;4807:48;-1:-1:-1;4924:2:16;4909:18;;4896:32;;-1:-1:-1;5003:2:16;4988:18;;4975:32;5030:18;5019:30;;5016:50;;;5062:1;5059;5052:12;5016:50;5085:22;;5138:4;5130:13;;5126:27;-1:-1:-1;5116:55:16;;5167:1;5164;5157:12;5116:55;5190:74;5256:7;5251:2;5238:16;5233:2;5229;5225:11;5190:74;:::i;:::-;5180:84;;;4557:713;;;;;;;:::o;5275:260::-;5343:6;5351;5404:2;5392:9;5383:7;5379:23;5375:32;5372:52;;;5420:1;5417;5410:12;5372:52;5443:29;5462:9;5443:29;:::i;:::-;5433:39;;5491:38;5525:2;5514:9;5510:18;5491:38;:::i;:::-;5481:48;;5275:260;;;;;:::o;5762:127::-;5823:10;5818:3;5814:20;5811:1;5804:31;5854:4;5851:1;5844:15;5878:4;5875:1;5868:15;5894:125;5959:9;;;5980:10;;;5977:36;;;5993:18;;:::i;6024:380::-;6103:1;6099:12;;;;6146;;;6167:61;;6221:4;6213:6;6209:17;6199:27;;6167:61;6274:2;6266:6;6263:14;6243:18;6240:38;6237:161;;6320:10;6315:3;6311:20;6308:1;6301:31;6355:4;6352:1;6345:15;6383:4;6380:1;6373:15;6237:161;;6024:380;;;:::o;7064:127::-;7125:10;7120:3;7116:20;7113:1;7106:31;7156:4;7153:1;7146:15;7180:4;7177:1;7170:15;7891:135;7930:3;7951:17;;;7948:43;;7971:18;;:::i;:::-;-1:-1:-1;8018:1:16;8007:13;;7891:135::o;8862:518::-;8964:2;8959:3;8956:11;8953:421;;;9000:5;8997:1;8990:16;9044:4;9041:1;9031:18;9114:2;9102:10;9098:19;9095:1;9091:27;9085:4;9081:38;9150:4;9138:10;9135:20;9132:47;;;-1:-1:-1;9173:4:16;9132:47;9228:2;9223:3;9219:12;9216:1;9212:20;9206:4;9202:31;9192:41;;9283:81;9301:2;9294:5;9291:13;9283:81;;;9360:1;9346:16;;9327:1;9316:13;9283:81;;9556:1299;9682:3;9676:10;9709:18;9701:6;9698:30;9695:56;;;9731:18;;:::i;:::-;9760:97;9850:6;9810:38;9842:4;9836:11;9810:38;:::i;:::-;9804:4;9760:97;:::i;:::-;9906:4;9937:2;9926:14;;9954:1;9949:649;;;;10642:1;10659:6;10656:89;;;-1:-1:-1;10711:19:16;;;10705:26;10656:89;-1:-1:-1;;9513:1:16;9509:11;;;9505:24;9501:29;9491:40;9537:1;9533:11;;;9488:57;10758:81;;9919:930;;9949:649;8809:1;8802:14;;;8846:4;8833:18;;-1:-1:-1;;9985:20:16;;;10103:222;10117:7;10114:1;10111:14;10103:222;;;10199:19;;;10193:26;10178:42;;10306:4;10291:20;;;;10259:1;10247:14;;;;10133:12;10103:222;;;10107:3;10353:6;10344:7;10341:19;10338:201;;;10414:19;;;10408:26;-1:-1:-1;;10497:1:16;10493:14;;;10509:3;10489:24;10485:37;10481:42;10466:58;10451:74;;10338:201;-1:-1:-1;;;;10585:1:16;10569:14;;;10565:22;10552:36;;-1:-1:-1;9556:1299:16:o;10860:485::-;-1:-1:-1;;;;;11091:32:16;;;11073:51;;11160:32;;11155:2;11140:18;;11133:60;11224:2;11209:18;;11202:34;;;11272:3;11267:2;11252:18;;11245:31;;;-1:-1:-1;;11293:46:16;;11319:19;;11311:6;11293:46;:::i;:::-;11285:54;10860:485;-1:-1:-1;;;;;;10860:485:16:o;11350:249::-;11419:6;11472:2;11460:9;11451:7;11447:23;11443:32;11440:52;;;11488:1;11485;11478:12;11440:52;11520:9;11514:16;11539:30;11563:5;11539:30;:::i;11604:128::-;11671:9;;;11692:11;;;11689:37;;;11706:18;;:::i;11737:127::-;11798:10;11793:3;11789:20;11786:1;11779:31;11829:4;11826:1;11819:15;11853:4;11850:1;11843:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1383200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_isSaleActive()": "2421",
								"_tokenURIs(uint256)": "infinite",
								"addToWhitelsit(address)": "24640",
								"approve(address,uint256)": "31509",
								"balanceOf(address)": "2619",
								"currentTokenId()": "2316",
								"endWhitelistMintTime()": "2351",
								"flipSaleActive()": "26590",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"judgeMint()": "6826",
								"lastMintTime(address)": "2595",
								"mint(string)": "infinite",
								"mintInterval()": "2395",
								"mintPrice()": "2351",
								"name()": "infinite",
								"owner()": "2419",
								"ownerOf(uint256)": "infinite",
								"payToMint(string)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26789",
								"setMintInterval(uint256)": "24575",
								"setMintPrice(uint256)": "24596",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"token()": "2468",
								"tokenByIndex(uint256)": "6810",
								"tokenOfOwnerByIndex(address,uint256)": "5025",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2326",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421",
								"withdraw()": "infinite"
							},
							"internal": {
								"_setTokenURI(uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 382,
									"end": 3544,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 382,
									"end": 3544,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 382,
									"end": 3544,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 532,
									"end": 542,
									"name": "PUSH",
									"source": 15,
									"value": "2386F26FC10000"
								},
								{
									"begin": 505,
									"end": 542,
									"name": "PUSH",
									"source": 15,
									"value": "D"
								},
								{
									"begin": 505,
									"end": 542,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "CODESIZE",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 875,
									"end": 1175,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "tag",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 875,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1022,
									"end": 1032,
									"name": "CALLER",
									"source": 15
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "10985B985B98539195"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "BA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "10939195"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3338,
									"end": 3389,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3311,
									"end": 3329,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3311,
									"end": 3329,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1045,
									"end": 1057,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 15,
									"value": "E"
								},
								{
									"begin": 1045,
									"end": 1073,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1045,
									"end": 1073,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1045,
									"end": 1073,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1084,
									"end": 1089,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 15,
									"value": "C"
								},
								{
									"begin": 1084,
									"end": 1098,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1084,
									"end": 1098,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1084,
									"end": 1098,
									"modifierDepth": 2,
									"name": "AND",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1084,
									"end": 1098,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1084,
									"end": 1098,
									"modifierDepth": 2,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1084,
									"end": 1098,
									"modifierDepth": 2,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 1084,
									"end": 1098,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1084,
									"end": 1098,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1132,
									"end": 1167,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1150,
									"end": 1167,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1132,
									"end": 1147,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 15
								},
								{
									"begin": 1132,
									"end": 1167,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1132,
									"end": 1167,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1132,
									"end": 1167,
									"modifierDepth": 2,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1132,
									"end": 1167,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1109,
									"end": 1129,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 15,
									"value": "F"
								},
								{
									"begin": 1109,
									"end": 1167,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 382,
									"end": 3544,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 382,
									"end": 3544,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 382,
									"end": 3544,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 546,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 546,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 116,
									"end": 122,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 130,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 132,
									"end": 138,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 185,
									"end": 187,
									"name": "PUSH",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 173,
									"end": 182,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 164,
									"end": 171,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 160,
									"end": 183,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 156,
									"end": 188,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 153,
									"end": 205,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 153,
									"end": 205,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 153,
									"end": 205,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 201,
									"end": 202,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 199,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 191,
									"end": 203,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 153,
									"end": 205,
									"name": "tag",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 153,
									"end": 205,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 246,
									"end": 262,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 246,
									"end": 262,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 331,
									"end": 333,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 316,
									"end": 334,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 316,
									"end": 334,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 310,
									"end": 335,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 246,
									"end": 262,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 246,
									"end": 262,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 366,
									"end": 399,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 366,
									"end": 399,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 354,
									"end": 400,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 354,
									"end": 400,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 344,
									"end": 418,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 344,
									"end": 418,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 414,
									"end": 415,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 412,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 404,
									"end": 416,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 344,
									"end": 418,
									"name": "tag",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 344,
									"end": 418,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 510,
									"end": 512,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 495,
									"end": 513,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 495,
									"end": 513,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 495,
									"end": 513,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 489,
									"end": 514,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 14,
									"end": 546,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 14,
									"end": 546,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": 437,
									"end": 444,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 437,
									"end": 444,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 489,
									"end": 514,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 489,
									"end": 514,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 14,
									"end": 546,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 546,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 551,
									"end": 678,
									"name": "tag",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 551,
									"end": 678,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 612,
									"end": 622,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 607,
									"end": 610,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 603,
									"end": 623,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 600,
									"end": 601,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 593,
									"end": 624,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 643,
									"end": 647,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 640,
									"end": 641,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 633,
									"end": 648,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 667,
									"end": 671,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 664,
									"end": 665,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 672,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 683,
									"end": 1063,
									"name": "tag",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 683,
									"end": 1063,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 762,
									"end": 763,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 758,
									"end": 770,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 758,
									"end": 770,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 758,
									"end": 770,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 758,
									"end": 770,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 805,
									"end": 817,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 805,
									"end": 817,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 805,
									"end": 817,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 826,
									"end": 887,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 826,
									"end": 887,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 880,
									"end": 884,
									"name": "PUSH",
									"source": 16,
									"value": "7F"
								},
								{
									"begin": 872,
									"end": 878,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 868,
									"end": 885,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 858,
									"end": 885,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 858,
									"end": 885,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 826,
									"end": 887,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 826,
									"end": 887,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 933,
									"end": 935,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 925,
									"end": 931,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 922,
									"end": 936,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 902,
									"end": 920,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 899,
									"end": 937,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 896,
									"end": 1057,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 896,
									"end": 1057,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 979,
									"end": 989,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 974,
									"end": 977,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 970,
									"end": 990,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 967,
									"end": 968,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 960,
									"end": 991,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1014,
									"end": 1018,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1004,
									"end": 1019,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1042,
									"end": 1046,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1039,
									"end": 1040,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1047,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 896,
									"end": 1057,
									"name": "tag",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 896,
									"end": 1057,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 896,
									"end": 1057,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 683,
									"end": 1063,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 683,
									"end": 1063,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 683,
									"end": 1063,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 683,
									"end": 1063,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1194,
									"end": 1712,
									"name": "tag",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 1194,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1296,
									"end": 1298,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 1291,
									"end": 1294,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1288,
									"end": 1299,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1285,
									"end": 1706,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1285,
									"end": 1706,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1285,
									"end": 1706,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1332,
									"end": 1337,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1329,
									"end": 1330,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1338,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1376,
									"end": 1380,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1374,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1363,
									"end": 1381,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 1446,
									"end": 1448,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 1434,
									"end": 1444,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1430,
									"end": 1449,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1427,
									"end": 1428,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 1423,
									"end": 1450,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1417,
									"end": 1421,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1413,
									"end": 1451,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1482,
									"end": 1486,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1470,
									"end": 1480,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1467,
									"end": 1487,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1464,
									"end": 1511,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1464,
									"end": 1511,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 1464,
									"end": 1511,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1505,
									"end": 1509,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1464,
									"end": 1511,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 1464,
									"end": 1511,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1560,
									"end": 1562,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 1555,
									"end": 1558,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1551,
									"end": 1563,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1548,
									"end": 1549,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 1544,
									"end": 1564,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1538,
									"end": 1542,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1534,
									"end": 1565,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1524,
									"end": 1565,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1524,
									"end": 1565,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1615,
									"end": 1696,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1615,
									"end": 1696,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1633,
									"end": 1635,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1626,
									"end": 1631,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1623,
									"end": 1636,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1615,
									"end": 1696,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1615,
									"end": 1696,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 1615,
									"end": 1696,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1692,
									"end": 1693,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1678,
									"end": 1694,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1678,
									"end": 1694,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1615,
									"end": 1696,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1615,
									"end": 1696,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1615,
									"end": 1696,
									"name": "tag",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 1615,
									"end": 1696,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1622,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1622,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1285,
									"end": 1706,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1285,
									"end": 1706,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1194,
									"end": 1712,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1194,
									"end": 1712,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1194,
									"end": 1712,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1194,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1888,
									"end": 3187,
									"name": "tag",
									"source": 16,
									"value": "9"
								},
								{
									"begin": 1888,
									"end": 3187,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2008,
									"end": 2018,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2008,
									"end": 2018,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2030,
									"end": 2060,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2030,
									"end": 2060,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2027,
									"end": 2083,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2027,
									"end": 2083,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 2027,
									"end": 2083,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2063,
									"end": 2081,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 2063,
									"end": 2081,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 2063,
									"end": 2081,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2063,
									"end": 2081,
									"name": "tag",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 2063,
									"end": 2081,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2092,
									"end": 2189,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "46"
								},
								{
									"begin": 2182,
									"end": 2188,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2142,
									"end": 2180,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 2174,
									"end": 2178,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2168,
									"end": 2179,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 2142,
									"end": 2180,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 2142,
									"end": 2180,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2142,
									"end": 2180,
									"name": "tag",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 2142,
									"end": 2180,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2136,
									"end": 2140,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2092,
									"end": 2189,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 2092,
									"end": 2189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2092,
									"end": 2189,
									"name": "tag",
									"source": 16,
									"value": "46"
								},
								{
									"begin": 2092,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2238,
									"end": 2242,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2269,
									"end": 2271,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2258,
									"end": 2272,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2258,
									"end": 2272,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2286,
									"end": 2287,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2281,
									"end": 2930,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2281,
									"end": 2930,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 2281,
									"end": 2930,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "49"
								},
								{
									"begin": 2281,
									"end": 2930,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2974,
									"end": 2975,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2991,
									"end": 2997,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2988,
									"end": 3077,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2988,
									"end": 3077,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 2988,
									"end": 3077,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3037,
									"end": 3063,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 2988,
									"end": 3077,
									"name": "tag",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 2988,
									"end": 3077,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1845,
									"end": 1846,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 1841,
									"end": 1852,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1841,
									"end": 1852,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1841,
									"end": 1852,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1837,
									"end": 1861,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1833,
									"end": 1862,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 1823,
									"end": 1863,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1869,
									"end": 1870,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1865,
									"end": 1876,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1876,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1876,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1820,
									"end": 1877,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 3090,
									"end": 3171,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3090,
									"end": 3171,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 2251,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 2251,
									"end": 3181,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2281,
									"end": 2930,
									"name": "tag",
									"source": 16,
									"value": "49"
								},
								{
									"begin": 2281,
									"end": 2930,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1141,
									"end": 1142,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1134,
									"end": 1148,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1134,
									"end": 1148,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1134,
									"end": 1148,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1178,
									"end": 1182,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1165,
									"end": 1183,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1165,
									"end": 1183,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2317,
									"end": 2337,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2317,
									"end": 2337,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2317,
									"end": 2337,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2435,
									"end": 2657,
									"name": "tag",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 2435,
									"end": 2657,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2449,
									"end": 2456,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2446,
									"end": 2447,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2443,
									"end": 2457,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2435,
									"end": 2657,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2435,
									"end": 2657,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 2435,
									"end": 2657,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2531,
									"end": 2550,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 2531,
									"end": 2550,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2531,
									"end": 2550,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2525,
									"end": 2551,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 2510,
									"end": 2552,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2510,
									"end": 2552,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 2638,
									"end": 2642,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2623,
									"end": 2643,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 2623,
									"end": 2643,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2623,
									"end": 2643,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2623,
									"end": 2643,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 2591,
									"end": 2592,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2579,
									"end": 2593,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2579,
									"end": 2593,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2579,
									"end": 2593,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2579,
									"end": 2593,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2465,
									"end": 2477,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2435,
									"end": 2657,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 2435,
									"end": 2657,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2435,
									"end": 2657,
									"name": "tag",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 2435,
									"end": 2657,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2439,
									"end": 2442,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2685,
									"end": 2691,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2676,
									"end": 2683,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2673,
									"end": 2692,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2670,
									"end": 2871,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2670,
									"end": 2871,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 2670,
									"end": 2871,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2746,
									"end": 2765,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2746,
									"end": 2765,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2746,
									"end": 2765,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2740,
									"end": 2766,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2829,
									"end": 2830,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 2825,
									"end": 2839,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 2825,
									"end": 2839,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2825,
									"end": 2839,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2841,
									"end": 2844,
									"name": "PUSH",
									"source": 16,
									"value": "F8"
								},
								{
									"begin": 2821,
									"end": 2845,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2817,
									"end": 2854,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2813,
									"end": 2855,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 2798,
									"end": 2856,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2783,
									"end": 2857,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2783,
									"end": 2857,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 2670,
									"end": 2871,
									"name": "tag",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 2670,
									"end": 2871,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2917,
									"end": 2918,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2901,
									"end": 2915,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2901,
									"end": 2915,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2901,
									"end": 2915,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2897,
									"end": 2919,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2884,
									"end": 2920,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2884,
									"end": 2920,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1888,
									"end": 3187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3400,
									"end": 3622,
									"name": "tag",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 3400,
									"end": 3622,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3465,
									"end": 3474,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3465,
									"end": 3474,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3465,
									"end": 3474,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3486,
									"end": 3496,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3486,
									"end": 3496,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3486,
									"end": 3496,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 3483,
									"end": 3616,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3483,
									"end": 3616,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "59"
								},
								{
									"begin": 3483,
									"end": 3616,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3538,
									"end": 3548,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 3529,
									"end": 3549,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3526,
									"end": 3527,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3519,
									"end": 3550,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3573,
									"end": 3577,
									"name": "PUSH",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 3570,
									"end": 3571,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 3563,
									"end": 3578,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3601,
									"end": 3605,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3598,
									"end": 3599,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3591,
									"end": 3606,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 3483,
									"end": 3616,
									"name": "tag",
									"source": 16,
									"value": "59"
								},
								{
									"begin": 3483,
									"end": 3616,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3400,
									"end": 3622,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3400,
									"end": 3622,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3400,
									"end": 3622,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3400,
									"end": 3622,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3400,
									"end": 3622,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3400,
									"end": 3622,
									"name": "tag",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 3400,
									"end": 3622,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 382,
									"end": 3544,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 382,
									"end": 3544,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 382,
									"end": 3544,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 382,
									"end": 3544,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 382,
									"end": 3544,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 382,
									"end": 3544,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 382,
									"end": 3544,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee74cac879b28e8bfbdee495019d9c67c93ce68aca16621f92649cbb20a18bc964736f6c634300081a0033",
									".code": [
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "6352211E"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "B88D4FDE"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "DE8B51E1"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "DE8B51E1"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "E985E9C5"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "F2FDE38B"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "F4A0A528"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "FC0C546A"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "B88D4FDE"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "C87B56DD"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "CADA2A18"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "D85D3D27"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "715018A6"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "8DA5CB5B"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "A22CB465"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "6352211E"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "6817C76C"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "6AA71D18"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "7080D6FC"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "18160DDD"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "3004DEFE"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "3004DEFE"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "3CCFD60B"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "42842E0E"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "4F6CCCE7"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "537EFE31"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "18160DDD"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "232E623E"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "2F745C59"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "tag",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "81812FC"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "81812FC"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "BB78EC1"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "E726E6B"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "9A9B7B"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A7"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "6DBC131"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "6FDDE03"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 382,
											"end": 3544,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3404,
											"end": 3419,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 3404,
											"end": 3419,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3427,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1435,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1435,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 747,
											"end": 761,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 747,
											"end": 761,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 740,
											"end": 762,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 722,
											"end": 763,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 722,
											"end": 763,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 713,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 582,
											"end": 769,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "tag",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 1844,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1781,
											"end": 1832,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1781,
											"end": 1832,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1769,
											"end": 1771,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1635,
											"end": 1838,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 659,
											"end": 711,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 659,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 659,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 549,
											"end": 576,
											"name": "tag",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 549,
											"end": 576,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 549,
											"end": 576,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 549,
											"end": 576,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 549,
											"end": 576,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 549,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 549,
											"end": 576,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 549,
											"end": 576,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 576,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 549,
											"end": 576,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 549,
											"end": 576,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 549,
											"end": 576,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 549,
											"end": 576,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 549,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 549,
											"end": 576,
											"name": "PUSH",
											"source": 15,
											"value": "E"
										},
										{
											"begin": 549,
											"end": 576,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 549,
											"end": 576,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 549,
											"end": 576,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 583,
											"end": 618,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 583,
											"end": 618,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 583,
											"end": 618,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 583,
											"end": 618,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 583,
											"end": 618,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 583,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 583,
											"end": 618,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 583,
											"end": 618,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 618,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 583,
											"end": 618,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 583,
											"end": 618,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 583,
											"end": 618,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 583,
											"end": 618,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 583,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 583,
											"end": 618,
											"name": "PUSH",
											"source": 15,
											"value": "F"
										},
										{
											"begin": 583,
											"end": 618,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 583,
											"end": 618,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 583,
											"end": 618,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "tag",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 2736,
											"end": 2824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "tag",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2816,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2816,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2816,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2812,
											"end": 2816,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2794,
											"end": 2816,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2816,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2816,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2736,
											"end": 2824,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "tag",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "tag",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 3435,
											"end": 3541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1836,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 1411,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 1411,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 1411,
											"end": 1836,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1836,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1411,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 1411,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1836,
											"name": "tag",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 1411,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 1411,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 505,
											"end": 542,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 505,
											"end": 542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 505,
											"end": 542,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 505,
											"end": 542,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 505,
											"end": 542,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 505,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 505,
											"end": 542,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 505,
											"end": 542,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 542,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 505,
											"end": 542,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 505,
											"end": 542,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 505,
											"end": 542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 505,
											"end": 542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 505,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 505,
											"end": 542,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 505,
											"end": 542,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 505,
											"end": 542,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 505,
											"end": 542,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "tag",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 759,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "tag",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 625,
											"end": 650,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 625,
											"end": 650,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 625,
											"end": 650,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 625,
											"end": 650,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 625,
											"end": 650,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 625,
											"end": 650,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 625,
											"end": 650,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 625,
											"end": 650,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "tag",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 1183,
											"end": 1403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "tag",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 1183,
											"end": 1403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "tag",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 2996,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "tag",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 2996,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "tag",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 2101,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "tag",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 2101,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 3118,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "tag",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 3220,
											"end": 3322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "tag",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 3220,
											"end": 3322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 479,
											"end": 498,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 479,
											"end": 498,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 479,
											"end": 498,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 479,
											"end": 498,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 498,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 479,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 479,
											"end": 498,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 479,
											"end": 498,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 498,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 479,
											"end": 498,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 479,
											"end": 498,
											"name": "tag",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 479,
											"end": 498,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 479,
											"end": 498,
											"name": "PUSH",
											"source": 15,
											"value": "C"
										},
										{
											"begin": 479,
											"end": 498,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 479,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 479,
											"end": 498,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 479,
											"end": 498,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 479,
											"end": 498,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 479,
											"end": 498,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1537,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "780E9D63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1638,
											"end": 1649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1614,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1650,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1435,
											"end": 1657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1938,
											"end": 1948,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1888,
											"end": 1908,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1949,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1925,
											"end": 1949,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1925,
											"end": 1949,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1925,
											"end": 1937,
											"name": "PUSH",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 1925,
											"end": 1949,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1949,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1925,
											"end": 1949,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1949,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1925,
											"end": 1949,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1925,
											"end": 1949,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1925,
											"end": 1954,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1921,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 1921,
											"end": 2086,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1986,
											"end": 1987,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1844,
											"end": 2093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1921,
											"end": 2086,
											"name": "tag",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 1921,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "PUSH",
											"source": 15,
											"value": "E"
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2048,
											"end": 2058,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2035,
											"end": 2059,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2059,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2035,
											"end": 2059,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2035,
											"end": 2059,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2035,
											"end": 2047,
											"name": "PUSH",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 2035,
											"end": 2059,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2035,
											"end": 2059,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2035,
											"end": 2059,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2059,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2035,
											"end": 2059,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2035,
											"end": 2059,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2035,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 2035,
											"end": 2074,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2035,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 2035,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2035,
											"end": 2074,
											"name": "tag",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 2035,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2074,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1844,
											"end": 2093,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1844,
											"end": 2093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 659,
											"end": 711,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 659,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 659,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "tag",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "tag",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "tag",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 659,
											"end": 711,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 659,
											"end": 711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1832,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64283D7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6629,
											"end": 6661,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6629,
											"end": 6661,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6629,
											"end": 6661,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6611,
											"end": 6662,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6678,
											"end": 6696,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6678,
											"end": 6696,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6678,
											"end": 6696,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6671,
											"end": 6705,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6671,
											"end": 6705,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6671,
											"end": 6705,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6741,
											"end": 6773,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6741,
											"end": 6773,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6721,
											"end": 6739,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6721,
											"end": 6739,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6721,
											"end": 6739,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6714,
											"end": 6774,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6584,
											"end": 6602,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 6584,
											"end": 6602,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 6409,
											"end": 6780,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1856,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1872,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "295F44F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6977,
											"end": 7009,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6977,
											"end": 7009,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6959,
											"end": 7010,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7019,
											"end": 7053,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7019,
											"end": 7053,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7019,
											"end": 7053,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6785,
											"end": 7059,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "tag",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 3435,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3485,
											"end": 3533,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3511,
											"end": 3532,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "8FC"
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3533,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3511,
											"end": 3532,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3533,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3533,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3533,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3435,
											"end": 3541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2325,
											"end": 2330,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2325,
											"end": 2347,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "295F44F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6959,
											"end": 7010,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7019,
											"end": 7053,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7019,
											"end": 7053,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7019,
											"end": 7053,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6785,
											"end": 7059,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2449,
											"end": 2454,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2438,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1836,
											"name": "tag",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 1411,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1503,
											"end": 1516,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 1503,
											"end": 1516,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1475,
											"end": 1482,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1482,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1503,
											"end": 1516,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 1503,
											"end": 1516,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1495,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 1495,
											"end": 1539,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1495,
											"end": 1539,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1495,
											"end": 1539,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1495,
											"end": 1539,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1495,
											"end": 1539,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7398,
											"end": 7400,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1495,
											"end": 1539,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1495,
											"end": 1539,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1495,
											"end": 1539,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7380,
											"end": 7401,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7437,
											"end": 7439,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 7417,
											"end": 7435,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7417,
											"end": 7435,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7417,
											"end": 7435,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7410,
											"end": 7440,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53616C65206973206E6F7420616374697665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7456,
											"end": 7474,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 7456,
											"end": 7474,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7456,
											"end": 7474,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7449,
											"end": 7497,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7514,
											"end": 7532,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 7514,
											"end": 7532,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1495,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 7196,
											"end": 7538,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1495,
											"end": 1539,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 1495,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1558,
											"end": 1580,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7745,
											"end": 7747,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7727,
											"end": 7748,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7784,
											"end": 7786,
											"name": "PUSH",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 7764,
											"end": 7782,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7764,
											"end": 7782,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7764,
											"end": 7782,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7757,
											"end": 7787,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E636F7272656374204554482076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7803,
											"end": 7821,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7796,
											"end": 7845,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7862,
											"end": 7880,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 7862,
											"end": 7880,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 7543,
											"end": 7886,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1634,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1617,
											"end": 1634,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1617,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 1617,
											"end": 1634,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1617,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 1617,
											"end": 1634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1617,
											"end": 1634,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 1617,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1617,
											"end": 1634,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1617,
											"end": 1634,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1617,
											"end": 1634,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1663,
											"end": 1678,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 1663,
											"end": 1678,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1689,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 1699,
											"end": 1709,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1663,
											"end": 1678,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1689,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 1689,
											"end": 1719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1689,
											"end": 1719,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 1689,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 1743,
											"end": 1750,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1752,
											"end": 1755,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1730,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 1730,
											"end": 1756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1774,
											"end": 1801,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1801,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1781,
											"end": 1791,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1781,
											"end": 1791,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1774,
											"end": 1801,
											"name": "PUSH",
											"source": 15,
											"value": "30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE"
										},
										{
											"begin": 1774,
											"end": 1801,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1774,
											"end": 1801,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1801,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1774,
											"end": 1801,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1774,
											"end": 1801,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1774,
											"end": 1801,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1774,
											"end": 1801,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1774,
											"end": 1801,
											"name": "LOG2",
											"source": 15
										},
										{
											"begin": 1821,
											"end": 1828,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1836,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1411,
											"end": 1836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22718AD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1832,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 1635,
											"end": 1838,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1264,
											"end": 1277,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1290,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 1304,
											"end": 1311,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 1290,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1312,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 1290,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1323,
											"end": 1346,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1349,
											"end": 1359,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 1323,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 1323,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "tag",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1368,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1403,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1183,
											"end": 1403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 2996,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "E"
										},
										{
											"begin": 3074,
											"end": 3102,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 2101,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "PUSH",
											"source": 15,
											"value": "E"
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2226,
											"end": 2236,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2152,
											"end": 2159,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2237,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2213,
											"end": 2237,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2213,
											"end": 2237,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "PUSH",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 2213,
											"end": 2237,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2213,
											"end": 2237,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2213,
											"end": 2237,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2237,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2213,
											"end": 2237,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2213,
											"end": 2237,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2152,
											"end": 2159,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2152,
											"end": 2159,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2213,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 2213,
											"end": 2252,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2213,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 2213,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2213,
											"end": 2252,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 2213,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2194,
											"end": 2209,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 2194,
											"end": 2252,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2194,
											"end": 2252,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 2172,
											"end": 2299,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2299,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2299,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2172,
											"end": 2299,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2299,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8233,
											"end": 8235,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2299,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2172,
											"end": 2299,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2299,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8215,
											"end": 8236,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8272,
											"end": 8274,
											"name": "PUSH",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 8252,
											"end": 8270,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8252,
											"end": 8270,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8252,
											"end": 8270,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8245,
											"end": 8275,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F74207265616368206D696E742074696D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8291,
											"end": 8309,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 8291,
											"end": 8309,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8291,
											"end": 8309,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8284,
											"end": 8333,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 8350,
											"end": 8368,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 8031,
											"end": 8374,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2172,
											"end": 2299,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 2172,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2332,
											"end": 2352,
											"name": "PUSH",
											"source": 15,
											"value": "F"
										},
										{
											"begin": 2332,
											"end": 2352,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2314,
											"end": 2329,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 2314,
											"end": 2352,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2444,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 2310,
											"end": 2444,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2397,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2377,
											"end": 2398,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2398,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2377,
											"end": 2398,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2377,
											"end": 2398,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2377,
											"end": 2386,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 2377,
											"end": 2398,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2377,
											"end": 2398,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2377,
											"end": 2398,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2398,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2377,
											"end": 2398,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2377,
											"end": 2398,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2377,
											"end": 2398,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 2377,
											"end": 2398,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8581,
											"end": 8583,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8563,
											"end": 8584,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8620,
											"end": 8622,
											"name": "PUSH",
											"source": 16,
											"value": "1C"
										},
										{
											"begin": 8600,
											"end": 8618,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8600,
											"end": 8618,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8600,
											"end": 8618,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8593,
											"end": 8623,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8659,
											"end": 8689,
											"name": "PUSH",
											"source": 16,
											"value": "4F6E6C792077686974656C69737420757365722063616E206D696E7400000000"
										},
										{
											"begin": 8639,
											"end": 8657,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 8639,
											"end": 8657,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8639,
											"end": 8657,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8632,
											"end": 8690,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 8379,
											"end": 8731,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2473,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2456,
											"end": 2473,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2456,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 2456,
											"end": 2473,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2456,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 2456,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2456,
											"end": 2473,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 2456,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2456,
											"end": 2473,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2456,
											"end": 2473,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2456,
											"end": 2473,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2502,
											"end": 2517,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 2502,
											"end": 2517,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2541,
											"end": 2551,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2484,
											"end": 2499,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2552,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2552,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2552,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2540,
											"name": "PUSH",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 2528,
											"end": 2552,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2528,
											"end": 2552,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2552,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2552,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2552,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2570,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2570,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2581,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 2581,
											"end": 2611,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2502,
											"end": 2517,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2581,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 2581,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "tag",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 3118,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3174,
											"end": 3204,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3191,
											"end": 3204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3191,
											"end": 3204,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3190,
											"end": 3204,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3174,
											"end": 3204,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 3118,
											"end": 3212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1832,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1635,
											"end": 1838,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "tag",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 3220,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 3292,
											"end": 3314,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 3220,
											"end": 3322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2620,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2653,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 2670,
											"end": 2672,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2681,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2687,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 2656,
											"end": 2688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 2778,
											"end": 2785,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3959,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3937,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "F3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 4007,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 2875,
											"end": 2888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2897,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 2842,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 2991,
											"end": 2998,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 2954,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3039,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3094,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 3055,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3136,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2518,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1832,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1635,
											"end": 1838,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2988,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 2832,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2949,
											"end": 2968,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2949,
											"end": 2968,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2949,
											"end": 2968,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2949,
											"end": 2968,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2949,
											"end": 2959,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 2949,
											"end": 2968,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2949,
											"end": 2968,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2949,
											"end": 2968,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 2968,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2949,
											"end": 2968,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2949,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 2971,
											"end": 2980,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2949,
											"end": 2968,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2949,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 2949,
											"end": 2980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B611743"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1832,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 1635,
											"end": 1838,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 722,
											"end": 763,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 722,
											"end": 763,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 722,
											"end": 763,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 695,
											"end": 713,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1832,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 1635,
											"end": 1838,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1832,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 1635,
											"end": 1838,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9FBF51F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1832,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 1635,
											"end": 1838,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "431"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "434"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 3,
											"value": "434"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 4921,
											"end": 4925,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4911,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "tag",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4974,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5165,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5335,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5554,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5576,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 5583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6120,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6120,
											"end": 6142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6166,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6165,
											"end": 6166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 6145,
											"end": 6166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6212,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6575,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 6565,
											"end": 6591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "tag",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6543,
											"end": 6591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6543,
											"end": 6591,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6613,
											"end": 6623,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 6602,
											"end": 6624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6868,
											"end": 6899,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6919,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 6909,
											"end": 6925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 6932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3535,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 3548,
											"end": 3550,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3538,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 3538,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3577,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3437,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 3,
											"value": "431"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "461"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "462"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 3,
											"value": "461"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "464"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 3,
											"value": "464"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177E802F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6977,
											"end": 7009,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6977,
											"end": 7009,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6959,
											"end": 7010,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7019,
											"end": 7053,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7019,
											"end": 7053,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7019,
											"end": 7053,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 6785,
											"end": 7059,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1832,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 1635,
											"end": 1838,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "471"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 3,
											"value": "471"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39E35637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1832,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 1635,
											"end": 1838,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 3,
											"value": "462"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 196,
											"end": 327,
											"name": "tag",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 196,
											"end": 327,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 270,
											"end": 302,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 270,
											"end": 302,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 260,
											"end": 303,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 260,
											"end": 303,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 250,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "260"
										},
										{
											"begin": 250,
											"end": 321,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 332,
											"end": 577,
											"name": "tag",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 332,
											"end": 577,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 390,
											"end": 396,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 445,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 440,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 422,
											"end": 429,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 418,
											"end": 441,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 414,
											"end": 446,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 411,
											"end": 463,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 411,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 411,
											"end": 463,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 459,
											"end": 460,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 457,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 449,
											"end": 461,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 411,
											"end": 463,
											"name": "tag",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 411,
											"end": 463,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 498,
											"end": 507,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 485,
											"end": 508,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 517,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 541,
											"end": 546,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 517,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 517,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 517,
											"end": 547,
											"name": "tag",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 517,
											"end": 547,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 566,
											"end": 571,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 332,
											"end": 577,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 332,
											"end": 577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 774,
											"end": 1174,
											"name": "tag",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 774,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 816,
											"end": 819,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 859,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 848,
											"end": 860,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 881,
											"end": 887,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 869,
											"end": 888,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 906,
											"end": 907,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 916,
											"end": 1055,
											"name": "tag",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 916,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 930,
											"end": 936,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 924,
											"end": 937,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 916,
											"end": 1055,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 916,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 916,
											"end": 1055,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1038,
											"end": 1042,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1036,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1036,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1036,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1019,
											"end": 1043,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1019,
											"end": 1043,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1013,
											"end": 1044,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 993,
											"end": 1004,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 993,
											"end": 1004,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 993,
											"end": 1004,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 989,
											"end": 1011,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 989,
											"end": 1011,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 982,
											"end": 1045,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 945,
											"end": 957,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 916,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 916,
											"end": 1055,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 916,
											"end": 1055,
											"name": "tag",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 916,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 920,
											"end": 923,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1100,
											"end": 1101,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1097,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1090,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1079,
											"end": 1082,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1071,
											"end": 1098,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1064,
											"end": 1102,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1163,
											"end": 1167,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1158,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1152,
											"end": 1159,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1131,
											"end": 1160,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1126,
											"end": 1129,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1122,
											"end": 1161,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1118,
											"end": 1168,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1111,
											"end": 1168,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1111,
											"end": 1168,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1111,
											"end": 1168,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 774,
											"end": 1174,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 774,
											"end": 1174,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 774,
											"end": 1174,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 774,
											"end": 1174,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 774,
											"end": 1174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1179,
											"end": 1399,
											"name": "tag",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 1179,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1310,
											"end": 1331,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1291,
											"end": 1295,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 1389,
											"end": 1391,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1378,
											"end": 1387,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1348,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 1348,
											"end": 1393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1630,
											"name": "tag",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 1404,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1518,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1513,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1495,
											"end": 1502,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1491,
											"end": 1514,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1519,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1484,
											"end": 1536,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1484,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 1484,
											"end": 1536,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1532,
											"end": 1533,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1530,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1522,
											"end": 1534,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1484,
											"end": 1536,
											"name": "tag",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 1484,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1577,
											"end": 1600,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1577,
											"end": 1600,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1630,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1404,
											"end": 1630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1843,
											"end": 2016,
											"name": "tag",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 1843,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1911,
											"end": 1931,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1911,
											"end": 1931,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1960,
											"end": 1991,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 1991,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1950,
											"end": 1992,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1950,
											"end": 1992,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1940,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 1940,
											"end": 2010,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2006,
											"end": 2007,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2004,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1996,
											"end": 2008,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1940,
											"end": 2010,
											"name": "tag",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 1940,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1843,
											"end": 2016,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1843,
											"end": 2016,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1843,
											"end": 2016,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1843,
											"end": 2016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2021,
											"end": 2321,
											"name": "tag",
											"source": 16,
											"value": "75"
										},
										{
											"begin": 2021,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2089,
											"end": 2095,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2103,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2150,
											"end": 2152,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2129,
											"end": 2136,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2125,
											"end": 2148,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2153,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2118,
											"end": 2170,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2118,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 2118,
											"end": 2170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2166,
											"end": 2167,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2164,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2118,
											"end": 2170,
											"name": "tag",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 2118,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2189,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2189,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 2189,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2189,
											"end": 2218,
											"name": "tag",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 2189,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2179,
											"end": 2218,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2272,
											"end": 2290,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2272,
											"end": 2290,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2272,
											"end": 2290,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2272,
											"end": 2290,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2326,
											"end": 2700,
											"name": "tag",
											"source": 16,
											"value": "97"
										},
										{
											"begin": 2326,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2417,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2419,
											"end": 2425,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2440,
											"end": 2492,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2440,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 2440,
											"end": 2492,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2486,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2440,
											"end": 2492,
											"name": "tag",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 2440,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 2530,
											"end": 2539,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 2511,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2511,
											"end": 2540,
											"name": "tag",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 2511,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2501,
											"end": 2540,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2501,
											"end": 2540,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2559,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 2593,
											"end": 2595,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2591,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2559,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 2559,
											"end": 2597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2559,
											"end": 2597,
											"name": "tag",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 2559,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2326,
											"end": 2700,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2326,
											"end": 2700,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 2549,
											"end": 2597,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2549,
											"end": 2597,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2651,
											"end": 2669,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2651,
											"end": 2669,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2651,
											"end": 2669,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2651,
											"end": 2669,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2638,
											"end": 2670,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2638,
											"end": 2670,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2326,
											"end": 2700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2705,
											"end": 2891,
											"name": "tag",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 2705,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2819,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2814,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2796,
											"end": 2803,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2792,
											"end": 2815,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2788,
											"end": 2820,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2785,
											"end": 2837,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2785,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 2785,
											"end": 2837,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2833,
											"end": 2834,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2831,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2823,
											"end": 2835,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2785,
											"end": 2837,
											"name": "tag",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 2785,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 2875,
											"end": 2884,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 2856,
											"end": 2885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2896,
											"end": 3023,
											"name": "tag",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 2896,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 2952,
											"end": 2955,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2948,
											"end": 2968,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 2969,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2988,
											"end": 2992,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 2985,
											"end": 2986,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2978,
											"end": 2993,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3012,
											"end": 3016,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3009,
											"end": 3010,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3017,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3744,
											"name": "tag",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 3028,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3093,
											"end": 3098,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3126,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3149,
											"end": 3167,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3141,
											"end": 3147,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3138,
											"end": 3168,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 3171,
											"end": 3189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "tag",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3326,
											"end": 3328,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3320,
											"end": 3329,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3239,
											"end": 3241,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3218,
											"end": 3233,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3218,
											"end": 3233,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3214,
											"end": 3243,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3214,
											"end": 3243,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "PUSH",
											"source": 16,
											"value": "3F"
										},
										{
											"begin": 3372,
											"end": 3387,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3356,
											"end": 3398,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3356,
											"end": 3398,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3449,
											"end": 3471,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3449,
											"end": 3471,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3449,
											"end": 3471,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 3428,
											"end": 3446,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3447,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3413,
											"end": 3447,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 3410,
											"end": 3472,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 3407,
											"end": 3495,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3407,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 3407,
											"end": 3495,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3475,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 3475,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 3475,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3475,
											"end": 3493,
											"name": "tag",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 3475,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3513,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3559,
											"end": 3581,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3559,
											"end": 3581,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3559,
											"end": 3581,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3544,
											"end": 3550,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3544,
											"end": 3550,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3596,
											"end": 3612,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3596,
											"end": 3612,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3596,
											"end": 3612,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3593,
											"end": 3618,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3590,
											"end": 3635,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3590,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 3590,
											"end": 3635,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3631,
											"end": 3632,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3629,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3621,
											"end": 3633,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3590,
											"end": 3635,
											"name": "tag",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 3590,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3687,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3676,
											"end": 3679,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3669,
											"end": 3673,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3667,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3657,
											"end": 3674,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3644,
											"end": 3688,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 3736,
											"end": 3737,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3733,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3720,
											"end": 3726,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3712,
											"end": 3718,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3708,
											"end": 3727,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3704,
											"end": 3734,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3697,
											"end": 3738,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3697,
											"end": 3738,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3744,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3744,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3744,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3744,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3744,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3749,
											"end": 4200,
											"name": "tag",
											"source": 16,
											"value": "123"
										},
										{
											"begin": 3749,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3871,
											"end": 3873,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3859,
											"end": 3868,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3850,
											"end": 3857,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3846,
											"end": 3869,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3842,
											"end": 3874,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3839,
											"end": 3891,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3839,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 3839,
											"end": 3891,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3887,
											"end": 3888,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3839,
											"end": 3891,
											"name": "tag",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 3839,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3927,
											"end": 3936,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3914,
											"end": 3937,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3960,
											"end": 3978,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3958,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3949,
											"end": 3979,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 3946,
											"end": 3996,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3946,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 3946,
											"end": 3996,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3992,
											"end": 3993,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 3990,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3982,
											"end": 3994,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3946,
											"end": 3996,
											"name": "tag",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 3946,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4015,
											"end": 4037,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4015,
											"end": 4037,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4068,
											"end": 4072,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 4060,
											"end": 4073,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4060,
											"end": 4073,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4056,
											"end": 4083,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4046,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 4046,
											"end": 4101,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4097,
											"end": 4098,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4094,
											"end": 4095,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4046,
											"end": 4101,
											"name": "tag",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 4046,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4120,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 4186,
											"end": 4193,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4181,
											"end": 4183,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4184,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4163,
											"end": 4165,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4159,
											"end": 4161,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4155,
											"end": 4166,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4120,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 4120,
											"end": 4194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4205,
											"end": 4552,
											"name": "tag",
											"source": 16,
											"value": "163"
										},
										{
											"begin": 4205,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4270,
											"end": 4276,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4284,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4331,
											"end": 4333,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4319,
											"end": 4328,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4310,
											"end": 4317,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4306,
											"end": 4329,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4302,
											"end": 4334,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4299,
											"end": 4351,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4299,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 4299,
											"end": 4351,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4347,
											"end": 4348,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4345,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4349,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4299,
											"end": 4351,
											"name": "tag",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 4299,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4370,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 4389,
											"end": 4398,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4370,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 4370,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4370,
											"end": 4399,
											"name": "tag",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 4370,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4360,
											"end": 4399,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4360,
											"end": 4399,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4449,
											"end": 4451,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4438,
											"end": 4447,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4434,
											"end": 4452,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4496,
											"end": 4501,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4502,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4482,
											"end": 4503,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4475,
											"end": 4480,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4472,
											"end": 4504,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4462,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 4462,
											"end": 4522,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4518,
											"end": 4519,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4515,
											"end": 4516,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4508,
											"end": 4520,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4462,
											"end": 4522,
											"name": "tag",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 4462,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4541,
											"end": 4546,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4205,
											"end": 4552,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4205,
											"end": 4552,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4205,
											"end": 4552,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4205,
											"end": 4552,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4205,
											"end": 4552,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4205,
											"end": 4552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4557,
											"end": 5270,
											"name": "tag",
											"source": 16,
											"value": "168"
										},
										{
											"begin": 4557,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4652,
											"end": 4658,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4660,
											"end": 4666,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4668,
											"end": 4674,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4682,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4729,
											"end": 4732,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 4717,
											"end": 4726,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4708,
											"end": 4715,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4704,
											"end": 4727,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4700,
											"end": 4733,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4697,
											"end": 4750,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4697,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "535"
										},
										{
											"begin": 4697,
											"end": 4750,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4746,
											"end": 4747,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4744,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4736,
											"end": 4748,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4697,
											"end": 4750,
											"name": "tag",
											"source": 16,
											"value": "535"
										},
										{
											"begin": 4697,
											"end": 4750,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4769,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 4788,
											"end": 4797,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4769,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 4769,
											"end": 4798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4769,
											"end": 4798,
											"name": "tag",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 4769,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4759,
											"end": 4798,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 4759,
											"end": 4798,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 4851,
											"end": 4853,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 4817,
											"end": 4855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "tag",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 4817,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4807,
											"end": 4855,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4924,
											"end": 4926,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4975,
											"end": 5007,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5019,
											"end": 5049,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5019,
											"end": 5049,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5016,
											"end": 5066,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5016,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 5016,
											"end": 5066,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5062,
											"end": 5063,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5060,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5052,
											"end": 5064,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5016,
											"end": 5066,
											"name": "tag",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 5016,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5085,
											"end": 5107,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5085,
											"end": 5107,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5138,
											"end": 5142,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 5130,
											"end": 5143,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5130,
											"end": 5143,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5126,
											"end": 5153,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5116,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 5116,
											"end": 5171,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5167,
											"end": 5168,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5164,
											"end": 5165,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5157,
											"end": 5169,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5116,
											"end": 5171,
											"name": "tag",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 5116,
											"end": 5171,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5190,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "540"
										},
										{
											"begin": 5256,
											"end": 5263,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5251,
											"end": 5253,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5238,
											"end": 5254,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 5233,
											"end": 5235,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5229,
											"end": 5231,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5225,
											"end": 5236,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5190,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 5190,
											"end": 5264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5190,
											"end": 5264,
											"name": "tag",
											"source": 16,
											"value": "540"
										},
										{
											"begin": 5190,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5180,
											"end": 5264,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5180,
											"end": 5264,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5180,
											"end": 5264,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4557,
											"end": 5270,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4557,
											"end": 5270,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 4557,
											"end": 5270,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4557,
											"end": 5270,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 4557,
											"end": 5270,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4557,
											"end": 5270,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4557,
											"end": 5270,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4557,
											"end": 5270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5275,
											"end": 5535,
											"name": "tag",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 5275,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5343,
											"end": 5349,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5351,
											"end": 5357,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5404,
											"end": 5406,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5392,
											"end": 5401,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5383,
											"end": 5390,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5379,
											"end": 5402,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5375,
											"end": 5407,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5372,
											"end": 5424,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5372,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 5372,
											"end": 5424,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5420,
											"end": 5421,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5410,
											"end": 5422,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5372,
											"end": 5424,
											"name": "tag",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 5372,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5443,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 5462,
											"end": 5471,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5443,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 5443,
											"end": 5472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5443,
											"end": 5472,
											"name": "tag",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 5443,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5491,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 5525,
											"end": 5527,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5514,
											"end": 5523,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5510,
											"end": 5528,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5491,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 5491,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5491,
											"end": 5529,
											"name": "tag",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 5491,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5481,
											"end": 5529,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5481,
											"end": 5529,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5275,
											"end": 5535,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5275,
											"end": 5535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5275,
											"end": 5535,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5275,
											"end": 5535,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5275,
											"end": 5535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5275,
											"end": 5535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5762,
											"end": 5889,
											"name": "tag",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 5762,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5823,
											"end": 5833,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 5818,
											"end": 5821,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 5814,
											"end": 5834,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 5811,
											"end": 5812,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5804,
											"end": 5835,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5854,
											"end": 5858,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 5851,
											"end": 5852,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5844,
											"end": 5859,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5878,
											"end": 5882,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5883,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5894,
											"end": 6019,
											"name": "tag",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 5894,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5959,
											"end": 5968,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5959,
											"end": 5968,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5959,
											"end": 5968,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5980,
											"end": 5990,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5980,
											"end": 5990,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5980,
											"end": 5990,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5977,
											"end": 6013,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5977,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 5977,
											"end": 6013,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 5993,
											"end": 6011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6024,
											"end": 6404,
											"name": "tag",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 6024,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6103,
											"end": 6104,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6099,
											"end": 6111,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6099,
											"end": 6111,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6099,
											"end": 6111,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 6099,
											"end": 6111,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6146,
											"end": 6158,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6146,
											"end": 6158,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6146,
											"end": 6158,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6167,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "551"
										},
										{
											"begin": 6167,
											"end": 6228,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 6213,
											"end": 6219,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6209,
											"end": 6226,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6199,
											"end": 6226,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6167,
											"end": 6228,
											"name": "tag",
											"source": 16,
											"value": "551"
										},
										{
											"begin": 6167,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6274,
											"end": 6276,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6266,
											"end": 6272,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6263,
											"end": 6277,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 6243,
											"end": 6261,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6240,
											"end": 6278,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6237,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 6237,
											"end": 6398,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6320,
											"end": 6330,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 6315,
											"end": 6318,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 6311,
											"end": 6331,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6332,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6355,
											"end": 6359,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 6352,
											"end": 6353,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6345,
											"end": 6360,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6383,
											"end": 6387,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6380,
											"end": 6381,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6388,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6237,
											"end": 6398,
											"name": "tag",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 6237,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6237,
											"end": 6398,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6024,
											"end": 6404,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6024,
											"end": 6404,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6024,
											"end": 6404,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6024,
											"end": 6404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7064,
											"end": 7191,
											"name": "tag",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 7064,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7125,
											"end": 7135,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 7120,
											"end": 7123,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 7116,
											"end": 7136,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7137,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7156,
											"end": 7160,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 7153,
											"end": 7154,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7146,
											"end": 7161,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7180,
											"end": 7184,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7177,
											"end": 7178,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7185,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7891,
											"end": 8026,
											"name": "tag",
											"source": 16,
											"value": "279"
										},
										{
											"begin": 7891,
											"end": 8026,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7930,
											"end": 7933,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7951,
											"end": 7968,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 7951,
											"end": 7968,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7951,
											"end": 7968,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7948,
											"end": 7991,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 7948,
											"end": 7991,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 7971,
											"end": 7989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "tag",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8018,
											"end": 8019,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 8007,
											"end": 8020,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8007,
											"end": 8020,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7891,
											"end": 8026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8862,
											"end": 9380,
											"name": "tag",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 8862,
											"end": 9380,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8964,
											"end": 8966,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 8959,
											"end": 8962,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8956,
											"end": 8967,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 8953,
											"end": 9374,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8953,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "262"
										},
										{
											"begin": 8953,
											"end": 9374,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9000,
											"end": 9005,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8997,
											"end": 8998,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8990,
											"end": 9006,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9044,
											"end": 9048,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9041,
											"end": 9042,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9031,
											"end": 9049,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 9114,
											"end": 9116,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 9102,
											"end": 9112,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9098,
											"end": 9117,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9095,
											"end": 9096,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 9091,
											"end": 9118,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 9085,
											"end": 9089,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9081,
											"end": 9119,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9150,
											"end": 9154,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9138,
											"end": 9148,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9135,
											"end": 9155,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 9132,
											"end": 9179,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9132,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "566"
										},
										{
											"begin": 9132,
											"end": 9179,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9173,
											"end": 9177,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9132,
											"end": 9179,
											"name": "tag",
											"source": 16,
											"value": "566"
										},
										{
											"begin": 9132,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9228,
											"end": 9230,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 9223,
											"end": 9226,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9219,
											"end": 9231,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9216,
											"end": 9217,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 9212,
											"end": 9232,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 9206,
											"end": 9210,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9202,
											"end": 9233,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9192,
											"end": 9233,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9192,
											"end": 9233,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9283,
											"end": 9364,
											"name": "tag",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 9283,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9301,
											"end": 9303,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9294,
											"end": 9299,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9291,
											"end": 9304,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 9283,
											"end": 9364,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9283,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 9283,
											"end": 9364,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9360,
											"end": 9361,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9362,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9346,
											"end": 9362,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 9327,
											"end": 9328,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 9316,
											"end": 9329,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9283,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 9283,
											"end": 9364,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9556,
											"end": 10855,
											"name": "tag",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 9556,
											"end": 10855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9682,
											"end": 9685,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9676,
											"end": 9686,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 9709,
											"end": 9727,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9701,
											"end": 9707,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9698,
											"end": 9728,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 9695,
											"end": 9751,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9695,
											"end": 9751,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 9695,
											"end": 9751,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9731,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 9731,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 9731,
											"end": 9749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9731,
											"end": 9749,
											"name": "tag",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 9731,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9760,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 9850,
											"end": 9856,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9810,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 9842,
											"end": 9846,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9836,
											"end": 9847,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 9810,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 9810,
											"end": 9848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9810,
											"end": 9848,
											"name": "tag",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 9810,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9804,
											"end": 9808,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9760,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 9760,
											"end": 9857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9760,
											"end": 9857,
											"name": "tag",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 9760,
											"end": 9857,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9906,
											"end": 9910,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9937,
											"end": 9939,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 9926,
											"end": 9940,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9926,
											"end": 9940,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 9954,
											"end": 9955,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 9949,
											"end": 10598,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9949,
											"end": 10598,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 9949,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 9949,
											"end": 10598,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10642,
											"end": 10643,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10659,
											"end": 10665,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10656,
											"end": 10745,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10656,
											"end": 10745,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 10656,
											"end": 10745,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10711,
											"end": 10730,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10711,
											"end": 10730,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10711,
											"end": 10730,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10705,
											"end": 10731,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10656,
											"end": 10745,
											"name": "tag",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 10656,
											"end": 10745,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9513,
											"end": 9514,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 9509,
											"end": 9520,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9509,
											"end": 9520,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9509,
											"end": 9520,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 9505,
											"end": 9529,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 9501,
											"end": 9530,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 9491,
											"end": 9531,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 9537,
											"end": 9538,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 9533,
											"end": 9544,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9533,
											"end": 9544,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9533,
											"end": 9544,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 9488,
											"end": 9545,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 10758,
											"end": 10839,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10758,
											"end": 10839,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 9919,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 9919,
											"end": 10849,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9949,
											"end": 10598,
											"name": "tag",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 9949,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8809,
											"end": 8810,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8816,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8802,
											"end": 8816,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8802,
											"end": 8816,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8846,
											"end": 8850,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8833,
											"end": 8851,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8833,
											"end": 8851,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9985,
											"end": 10005,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9985,
											"end": 10005,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 9985,
											"end": 10005,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10103,
											"end": 10325,
											"name": "tag",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 10103,
											"end": 10325,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10117,
											"end": 10124,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10114,
											"end": 10115,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10111,
											"end": 10125,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 10103,
											"end": 10325,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10103,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "583"
										},
										{
											"begin": 10103,
											"end": 10325,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10199,
											"end": 10218,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 10199,
											"end": 10218,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 10199,
											"end": 10218,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10193,
											"end": 10219,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10178,
											"end": 10220,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10178,
											"end": 10220,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 10306,
											"end": 10310,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10291,
											"end": 10311,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 10291,
											"end": 10311,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 10291,
											"end": 10311,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10291,
											"end": 10311,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 10259,
											"end": 10260,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10247,
											"end": 10261,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10133,
											"end": 10145,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10103,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 10103,
											"end": 10325,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10103,
											"end": 10325,
											"name": "tag",
											"source": 16,
											"value": "583"
										},
										{
											"begin": 10103,
											"end": 10325,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10107,
											"end": 10110,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10353,
											"end": 10359,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10344,
											"end": 10351,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10341,
											"end": 10360,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 10338,
											"end": 10539,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10338,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "584"
										},
										{
											"begin": 10338,
											"end": 10539,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10414,
											"end": 10433,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 10414,
											"end": 10433,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10414,
											"end": 10433,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10408,
											"end": 10434,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10497,
											"end": 10498,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 10493,
											"end": 10507,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 10493,
											"end": 10507,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10493,
											"end": 10507,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 10509,
											"end": 10512,
											"name": "PUSH",
											"source": 16,
											"value": "F8"
										},
										{
											"begin": 10489,
											"end": 10513,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 10485,
											"end": 10522,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 10481,
											"end": 10523,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 10466,
											"end": 10524,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 10451,
											"end": 10525,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10451,
											"end": 10525,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 10338,
											"end": 10539,
											"name": "tag",
											"source": 16,
											"value": "584"
										},
										{
											"begin": 10338,
											"end": 10539,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10585,
											"end": 10586,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 10569,
											"end": 10583,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10569,
											"end": 10583,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10569,
											"end": 10583,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 10565,
											"end": 10587,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10552,
											"end": 10588,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10552,
											"end": 10588,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9556,
											"end": 10855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10860,
											"end": 11345,
											"name": "tag",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 10860,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11091,
											"end": 11123,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11091,
											"end": 11123,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11091,
											"end": 11123,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 11073,
											"end": 11124,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11073,
											"end": 11124,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11160,
											"end": 11192,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11160,
											"end": 11192,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 11155,
											"end": 11157,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11140,
											"end": 11158,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11140,
											"end": 11158,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11133,
											"end": 11193,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11224,
											"end": 11226,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 11209,
											"end": 11227,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11209,
											"end": 11227,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11202,
											"end": 11236,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11202,
											"end": 11236,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11202,
											"end": 11236,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11272,
											"end": 11275,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 11267,
											"end": 11269,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 11252,
											"end": 11270,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11252,
											"end": 11270,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11245,
											"end": 11276,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11245,
											"end": 11276,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11245,
											"end": 11276,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11293,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 11293,
											"end": 11339,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11319,
											"end": 11338,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11319,
											"end": 11338,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11311,
											"end": 11317,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11293,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 11293,
											"end": 11339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11293,
											"end": 11339,
											"name": "tag",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 11293,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11285,
											"end": 11339,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 10860,
											"end": 11345,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10860,
											"end": 11345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11350,
											"end": 11599,
											"name": "tag",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 11350,
											"end": 11599,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11419,
											"end": 11425,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11474,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11460,
											"end": 11469,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11451,
											"end": 11458,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11447,
											"end": 11470,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11443,
											"end": 11475,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11440,
											"end": 11492,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11440,
											"end": 11492,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "588"
										},
										{
											"begin": 11440,
											"end": 11492,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11488,
											"end": 11489,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11485,
											"end": 11486,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11478,
											"end": 11490,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 11440,
											"end": 11492,
											"name": "tag",
											"source": 16,
											"value": "588"
										},
										{
											"begin": 11440,
											"end": 11492,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11520,
											"end": 11529,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 11530,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 11539,
											"end": 11569,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 11563,
											"end": 11568,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11539,
											"end": 11569,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 11539,
											"end": 11569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11604,
											"end": 11732,
											"name": "tag",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 11604,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11671,
											"end": 11680,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11671,
											"end": 11680,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11671,
											"end": 11680,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11692,
											"end": 11703,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11692,
											"end": 11703,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11692,
											"end": 11703,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 11689,
											"end": 11726,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11689,
											"end": 11726,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 11689,
											"end": 11726,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11706,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 11706,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 11706,
											"end": 11724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11737,
											"end": 11864,
											"name": "tag",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 11737,
											"end": 11864,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11798,
											"end": 11808,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 11793,
											"end": 11796,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 11789,
											"end": 11809,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 11786,
											"end": 11787,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11779,
											"end": 11810,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11829,
											"end": 11833,
											"name": "PUSH",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 11826,
											"end": 11827,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 11819,
											"end": 11834,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11853,
											"end": 11857,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 11850,
											"end": 11851,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11843,
											"end": 11858,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/BananaNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_isSaleActive()": "7080d6fc",
							"_tokenURIs(uint256)": "0bb78ec1",
							"addToWhitelsit(address)": "3004defe",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"currentTokenId()": "009a9b7b",
							"endWhitelistMintTime()": "232e623e",
							"flipSaleActive()": "de8b51e1",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"judgeMint()": "06dbc131",
							"lastMintTime(address)": "6aa71d18",
							"mint(string)": "d85d3d27",
							"mintInterval()": "0e726e6b",
							"mintPrice()": "6817c76c",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"payToMint(string)": "537efe31",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setMintInterval(uint256)": "cada2a18",
							"setMintPrice(uint256)": "f4a0a528",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"token()": "fc0c546a",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintInterval\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"whitelistMintTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_isSaleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"_tokenURIs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addToWhitelsit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endWhitelistMintTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flipSaleActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"judgeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nextMintTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastMintTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"payToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintInterval\",\"type\":\"uint256\"}],\"name\":\"setMintInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintPrice\",\"type\":\"uint256\"}],\"name\":\"setMintPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BananaNFT.sol\":\"BananaNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/BananaNFT.sol\":{\"keccak256\":\"0x3ad020ef028f0fbb9e9bd51f0dc1cab1ba919fca11362d10d286d67722704f07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dab51c27a64fcfa71656dc451c489e27f0df25a3652bf311e1f9bf2e7312b32b\",\"dweb:/ipfs/QmcNyRm77UT223m5HoKFggsrHgJS8U16rueB7qfEe3qQni\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 395,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 397,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 401,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 405,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 409,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 415,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1525,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1529,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1532,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1536,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 8,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 3446,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 3449,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "token",
								"offset": 0,
								"slot": "12",
								"type": "t_contract(IERC20)362"
							},
							{
								"astId": 3452,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "mintPrice",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 3454,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "mintInterval",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 3456,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "endWhitelistMintTime",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 3458,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "_isSaleActive",
								"offset": 0,
								"slot": "16",
								"type": "t_bool"
							},
							{
								"astId": 3462,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 3466,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "whitelist",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 3470,
								"contract": "contracts/BananaNFT.sol:BananaNFT",
								"label": "lastMintTime",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)362": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1980
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1981,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1980,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1980,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1980
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1962,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							362
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 296,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 305,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 362,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 362,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 362,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 362,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 346,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 362,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 362,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 363,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								296,
								305
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1980
						],
						"ERC165": [
							2259
						],
						"ERC721": [
							1371
						],
						"IERC165": [
							2271
						],
						"IERC721": [
							1488
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1950
						],
						"IERC721Receiver": [
							1506
						],
						"Strings": [
							2235
						]
					},
					"id": 1372,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 1489,
							"src": "133:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 365,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1488,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 368,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 1507,
							"src": "172:54:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 367,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1506,
										"src": "180:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 1951,
							"src": "227:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 369,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1950,
										"src": "235:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 1981,
							"src": "293:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 371,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1980,
										"src": "301:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 374,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 2236,
							"src": "342:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 373,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2235,
										"src": "350:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 377,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 2260,
							"src": "391:69:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 375,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2271,
										"src": "399:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 376,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2259,
										"src": "408:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 379,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 285,
							"src": "461:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 378,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "469:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 381,
										"name": "Context",
										"nameLocations": [
											"804:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1980,
										"src": "804:7:3"
									},
									"id": 382,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:3"
								},
								{
									"baseName": {
										"id": 383,
										"name": "ERC165",
										"nameLocations": [
											"813:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2259,
										"src": "813:6:3"
									},
									"id": 384,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:3"
								},
								{
									"baseName": {
										"id": 385,
										"name": "IERC721",
										"nameLocations": [
											"821:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1488,
										"src": "821:7:3"
									},
									"id": 386,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:3"
								},
								{
									"baseName": {
										"id": 387,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1950,
										"src": "830:15:3"
									},
									"id": 388,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:3"
								},
								{
									"baseName": {
										"id": 389,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "847:13:3"
									},
									"id": 390,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:3"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 380,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:3",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1371,
							"linearizedBaseContracts": [
								1371,
								237,
								1950,
								1488,
								2259,
								2271,
								1980
							],
							"name": "ERC721",
							"nameLocation": "794:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 393,
									"libraryName": {
										"id": 391,
										"name": "Strings",
										"nameLocations": [
											"873:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2235,
										"src": "873:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:3",
									"typeName": {
										"id": 392,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 395,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "917:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 394,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 397,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "964:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 396,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 401,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "993:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 400,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:3",
										"keyType": {
											"id": 398,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 399,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 405,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "1051:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 404,
										"keyName": "owner",
										"keyNameLocation": "1067:5:3",
										"keyType": {
											"id": 402,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 403,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "1109:59:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 408,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:3",
										"keyType": {
											"id": 406,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 407,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 415,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "1175:86:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 414,
										"keyName": "owner",
										"keyNameLocation": "1191:5:3",
										"keyType": {
											"id": 410,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 413,
											"keyName": "operator",
											"keyNameLocation": "1216:8:3",
											"keyType": {
												"id": 411,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 412,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "1437:57:3",
										"statements": [
											{
												"expression": {
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 423,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "1447:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 424,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "1455:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:3"
											},
											{
												"expression": {
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 427,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "1470:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 428,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "1480:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:3"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:3",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 432,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1393:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1414:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 419,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:3"
									},
									"scope": 1371,
									"src": "1381:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2258,
										2270
									],
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "1669:192:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 443,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "1698:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 445,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1488,
																			"src": "1718:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1488_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1488_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 444,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1488",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 449,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "1754:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 451,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1950,
																			"src": "1774:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1950_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1950_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 450,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1950",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 458,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "1842:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 456,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1371_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:3",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2258,
															"src": "1818:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 442,
												"id": 461,
												"nodeType": "Return",
												"src": "1679:175:3"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 439,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 437,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2259,
												"src": "1637:6:3"
											},
											{
												"id": 438,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2271,
												"src": "1645:7:3"
											}
										],
										"src": "1628:25:3"
									},
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1588:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 434,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:3"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1663:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:3"
									},
									"scope": 1371,
									"src": "1561:300:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1413
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "1992:136:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 471,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "2006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 472,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 485,
												"nodeType": "IfStatement",
												"src": "2002:87:3",
												"trueBody": {
													"id": 484,
													"nodeType": "Block",
													"src": "2027:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 478,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 477,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2048:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 483,
															"nodeType": "RevertStatement",
															"src": "2041:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 486,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "2105:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "2115:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 470,
												"id": 489,
												"nodeType": "Return",
												"src": "2098:23:3"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:3",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1939:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:3"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1983:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:3"
									},
									"scope": 1371,
									"src": "1920:208:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1421
									],
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "2257:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 500,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "2288:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 499,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "2274:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 498,
												"id": 502,
												"nodeType": "Return",
												"src": "2267:29:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:3",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "2202:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:3"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "2248:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:3"
									},
									"scope": 1371,
									"src": "2185:118:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1935
									],
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "2425:29:3",
										"statements": [
											{
												"expression": {
													"id": 510,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 395,
													"src": "2442:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 509,
												"id": 511,
												"nodeType": "Return",
												"src": "2435:12:3"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:3",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:3"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "2410:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 507,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:3"
									},
									"scope": 1371,
									"src": "2365:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1941
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "2580:31:3",
										"statements": [
											{
												"expression": {
													"id": 519,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "2597:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 518,
												"id": 520,
												"nodeType": "Return",
												"src": "2590:14:3"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:3",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:3"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2565:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 516,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:3"
									},
									"scope": 1371,
									"src": "2518:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1949
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "2756:176:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "2780:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 530,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "2766:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:3"
											},
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 557,
														"src": "2799:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 534,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 536,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "2823:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 541,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "2856:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 539,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:3",
													"trueExpression": {
														"arguments": [
															{
																"id": 549,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "2892:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 550,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 525,
																		"src": "2901:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:3",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2048,
																	"src": "2901:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 546,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:3",
																	"typeDescriptions": {}
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:3",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 529,
												"id": 556,
												"nodeType": "Return",
												"src": "2843:82:3"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:3",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2695:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:3"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2741:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 527,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:3"
									},
									"scope": 1371,
									"src": "2677:255:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "3240:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 563,
												"id": 565,
												"nodeType": "Return",
												"src": "3250:9:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3225:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 561,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:3"
									},
									"scope": 1371,
									"src": "3174:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1461
									],
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "3384:52:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "3403:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "3407:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 578,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "3416:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 575,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1174,
															1240
														],
														"referencedDeclaration": 1174,
														"src": "3394:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:3",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "3340:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "3352:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:3"
									},
									"scope": 1371,
									"src": "3323:113:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1477
									],
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "3573:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "3597:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 591,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "3583:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 596,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "3636:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 595,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "3623:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 590,
												"id": 598,
												"nodeType": "Return",
												"src": "3616:28:3"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:3",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "3564:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:3"
									},
									"scope": 1371,
									"src": "3497:154:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1469
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3793:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 609,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "3822:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "3836:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 612,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "3846:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 608,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "3803:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:3"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:3",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3745:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3763:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:3"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:3"
									},
									"scope": 1371,
									"src": "3718:144:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1487
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4022:59:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 626,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "4039:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 628,
														"indexExpression": {
															"id": 627,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "4058:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 630,
													"indexExpression": {
														"id": 629,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "4065:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 625,
												"id": 631,
												"nodeType": "Return",
												"src": "4032:42:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:3",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3954:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3969:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4016:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:3"
									},
									"scope": 1371,
									"src": "3928:153:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1453
									],
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "4223:498:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "4237:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 657,
												"nodeType": "IfStatement",
												"src": "4233:87:3",
												"trueBody": {
													"id": 656,
													"nodeType": "Block",
													"src": "4255:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 650,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 649,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4276:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 655,
															"nodeType": "RevertStatement",
															"src": "4269:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 678,
														"src": "4538:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 658,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 666,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4570:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4574:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 663,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "4583:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 660,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "4562:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 667,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "4610:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 668,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "4627:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 677,
												"nodeType": "IfStatement",
												"src": "4606:109:3",
												"trueBody": {
													"id": 676,
													"nodeType": "Block",
													"src": "4633:82:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 671,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "4675:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 672,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "4681:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 673,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "4690:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 670,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4654:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 675,
															"nodeType": "RevertStatement",
															"src": "4647:57:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:3",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "4165:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "4179:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "4191:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:3"
									},
									"scope": 1371,
									"src": "4143:578:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1443
									],
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "4863:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 690,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "4890:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4896:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "4900:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 689,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															697,
															723
														],
														"referencedDeclaration": 723,
														"src": "4873:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:3"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "4813:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "4827:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "4839:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:3"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:3"
									},
									"scope": 1371,
									"src": "4787:132:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1433
									],
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "5088:105:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 710,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "5111:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "5117:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "5121:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 709,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "5098:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 716,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "5162:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 717,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "5168:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "5172:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 719,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "5181:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 715,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "5139:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:3"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "5011:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "5025:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "5037:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "5054:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 705,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:3"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:3"
									},
									"scope": 1371,
									"src": "4985:208:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "5782:40:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 731,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "5799:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 733,
													"indexExpression": {
														"id": 732,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "5807:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 730,
												"id": 734,
												"nodeType": "Return",
												"src": "5792:23:3"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:3",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "5725:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:3"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "5773:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:3"
									},
									"scope": 1371,
									"src": "5707:115:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "6017:48:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 744,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "6034:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 746,
													"indexExpression": {
														"id": 745,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "6050:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 743,
												"id": 747,
												"nodeType": "Return",
												"src": "6027:31:3"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:3",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "5960:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:3"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "6008:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:3"
									},
									"scope": 1371,
									"src": "5938:127:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "6485:163:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 761,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "6514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 767,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 752,
																			"src": "6552:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 768,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 754,
																			"src": "6561:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 771,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 752,
																				"src": "6589:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 772,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 754,
																				"src": "6596:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 770,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "6572:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 776,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 756,
																				"src": "6621:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 775,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "6608:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 778,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "6633:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 781,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 760,
												"id": 783,
												"nodeType": "Return",
												"src": "6495:146:3"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:3",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "6399:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "6414:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "6431:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:3"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "6479:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:3"
									},
									"scope": 1371,
									"src": "6376:272:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "7179:271:3",
										"statements": [
											{
												"condition": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:3",
													"subExpression": {
														"arguments": [
															{
																"id": 796,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "7208:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 797,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "7215:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 798,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "7224:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 795,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "7194:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 820,
												"nodeType": "IfStatement",
												"src": "7189:255:3",
												"trueBody": {
													"id": 819,
													"nodeType": "Block",
													"src": "7234:210:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 801,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "7252:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 802,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 817,
																"nodeType": "Block",
																"src": "7350:84:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 813,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 790,
																					"src": "7402:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 814,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "7411:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 812,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7375:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 816,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:3"
																	}
																]
															},
															"id": 818,
															"nodeType": "IfStatement",
															"src": "7248:186:3",
															"trueBody": {
																"id": 811,
																"nodeType": "Block",
																"src": "7273:71:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 808,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "7321:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 807,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7298:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 810,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:3",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "7108:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "7123:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "7140:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:3"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:3"
									},
									"scope": 1371,
									"src": "7082:368:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "8167:78:3",
										"statements": [
											{
												"id": 836,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:3",
												"statements": [
													{
														"expression": {
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 830,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "8201:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 832,
																"indexExpression": {
																	"id": 831,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "8211:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 833,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "8223:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 835,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:3",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "8118:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "8135:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 826,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:3"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:3"
									},
									"scope": 1371,
									"src": "8092:153:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "8933:700:3",
										"statements": [
											{
												"assignments": [
													851
												],
												"declarations": [
													{
														"constant": false,
														"id": 851,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 927,
														"src": "8943:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 850,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 855,
												"initialValue": {
													"arguments": [
														{
															"id": 853,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "8967:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 852,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "8958:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 856,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "9035:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 857,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "9031:86:3",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "9055:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 863,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "9086:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 864,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "9092:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 865,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "9098:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 862,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "9069:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 867,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 870,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "9161:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 871,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 897,
												"nodeType": "IfStatement",
												"src": "9157:256:3",
												"trueBody": {
													"id": 896,
													"nodeType": "Block",
													"src": "9181:232:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 879,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 877,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 881,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "9298:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 876,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1174,
																		1240
																	],
																	"referencedDeclaration": 1240,
																	"src": "9277:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 888,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:3"
														},
														{
															"id": 895,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:3",
															"statements": [
																{
																	"expression": {
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 889,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 405,
																				"src": "9368:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 891,
																			"indexExpression": {
																				"id": 890,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 851,
																				"src": "9378:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 894,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:3"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 898,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "9427:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 899,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 912,
												"nodeType": "IfStatement",
												"src": "9423:107:3",
												"trueBody": {
													"id": 911,
													"nodeType": "Block",
													"src": "9445:85:3",
													"statements": [
														{
															"id": 910,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:3",
															"statements": [
																{
																	"expression": {
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 904,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 405,
																				"src": "9487:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 906,
																			"indexExpression": {
																				"id": 905,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 841,
																				"src": "9497:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 909,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:3"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 913,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "9540:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 915,
														"indexExpression": {
															"id": 914,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "9548:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 916,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "9559:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 920,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "9586:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 921,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "9592:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 922,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "9596:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 919,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "9577:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "EmitStatement",
												"src": "9572:32:3"
											},
											{
												"expression": {
													"id": 925,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 851,
													"src": "9622:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 849,
												"id": 926,
												"nodeType": "Return",
												"src": "9615:11:3"
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:3",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "8855:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "8867:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "8884:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:3"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "8924:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:3"
									},
									"scope": 1371,
									"src": "8838:795:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "10008:274:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 936,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "10022:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 937,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 950,
												"nodeType": "IfStatement",
												"src": "10018:87:3",
												"trueBody": {
													"id": 949,
													"nodeType": "Block",
													"src": "10040:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 943,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 942,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10061:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 948,
															"nodeType": "RevertStatement",
															"src": "10054:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 977,
														"src": "10114:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 951,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 961,
												"initialValue": {
													"arguments": [
														{
															"id": 954,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "10146:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "10150:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 956,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 953,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10138:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "10184:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 963,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "10180:96:3",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "10213:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 969,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 968,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10234:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 974,
															"nodeType": "RevertStatement",
															"src": "10227:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:3",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "9970:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:3"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:3"
									},
									"scope": 1371,
									"src": "9955:327:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "10690:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 987,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "10710:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 988,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "10714:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 986,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															993,
															1019
														],
														"referencedDeclaration": 1019,
														"src": "10700:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:3"
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:3",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "10652:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "10664:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:3"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:3"
									},
									"scope": 1371,
									"src": "10633:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "11038:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "11054:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "11058:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1003,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "11048:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1009,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "11111:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "11115:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1015,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "11124:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1008,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "11076:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:3"
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:3",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "10973:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "10985:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "11002:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 999,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:3"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:3"
									},
									"scope": 1371,
									"src": "10954:182:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "11503:186:3",
										"statements": [
											{
												"assignments": [
													1026
												],
												"declarations": [
													{
														"constant": false,
														"id": 1026,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1051,
														"src": "11513:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1025,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1038,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1028,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "11557:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1033,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1027,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "11537:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1039,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "11591:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1040,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1050,
												"nodeType": "IfStatement",
												"src": "11587:96:3",
												"trueBody": {
													"id": 1049,
													"nodeType": "Block",
													"src": "11620:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1046,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "11664:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1045,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11641:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1048,
															"nodeType": "RevertStatement",
															"src": "11634:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "11477:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:3"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:3"
									},
									"scope": 1371,
									"src": "11462:227:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "12084:389:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1062,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "12098:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1063,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "12094:87:3",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "12116:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1069,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1068,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12137:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1074,
															"nodeType": "RevertStatement",
															"src": "12130:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													1078
												],
												"declarations": [
													{
														"constant": false,
														"id": 1078,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1111,
														"src": "12190:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1077,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1087,
												"initialValue": {
													"arguments": [
														{
															"id": 1080,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "12222:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1081,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "12226:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1082,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1079,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "12214:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1088,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "12260:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1089,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1099,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "12362:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1100,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "12379:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1109,
													"nodeType": "IfStatement",
													"src": "12358:109:3",
													"trueBody": {
														"id": 1108,
														"nodeType": "Block",
														"src": "12385:82:3",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1103,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1055,
																			"src": "12427:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1104,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1059,
																			"src": "12433:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1105,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "12442:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1102,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12406:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1107,
																"nodeType": "RevertStatement",
																"src": "12399:57:3"
															}
														]
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "12256:211:3",
												"trueBody": {
													"id": 1098,
													"nodeType": "Block",
													"src": "12289:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1095,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "12333:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1094,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12310:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1097,
															"nodeType": "RevertStatement",
															"src": "12303:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "12032:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "12046:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "12058:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:3"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:3"
									},
									"scope": 1371,
									"src": "12013:460:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "13481:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1123,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "13505:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "13511:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "13515:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1122,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1130,
															1156
														],
														"referencedDeclaration": 1156,
														"src": "13491:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:3"
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "13429:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "13443:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "13455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:3"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:3"
									},
									"scope": 1371,
									"src": "13406:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "13873:102:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1143,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "13893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "13899:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1145,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "13903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1142,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "13883:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1149,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "13944:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "13950:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1151,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "13954:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1152,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "13963:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1148,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "13921:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:3"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:3",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "13794:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "13808:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "13820:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "13837:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1138,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:3"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:3"
									},
									"scope": 1371,
									"src": "13771:204:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "14488:50:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1167,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "14507:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1168,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "14511:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1169,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "14520:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1166,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1174,
															1240
														],
														"referencedDeclaration": 1240,
														"src": "14498:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:3"
											}
										]
									},
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:3",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "14436:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "14448:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "14465:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:3"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:3"
									},
									"scope": 1371,
									"src": "14418:120:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "14814:568:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1186,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "14880:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1187,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "14893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1188,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1232,
												"nodeType": "IfStatement",
												"src": "14876:460:3",
												"trueBody": {
													"id": 1231,
													"nodeType": "Block",
													"src": "14913:423:3",
													"statements": [
														{
															"assignments": [
																1195
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1195,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1231,
																	"src": "14927:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1194,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1199,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1197,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1179,
																		"src": "14957:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1196,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1306,
																	"src": "14943:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1200,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1181,
																			"src": "15093:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1203,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1202,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1201,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1206,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1195,
																			"src": "15115:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1207,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1181,
																			"src": "15124:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:3",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1211,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1195,
																				"src": "15150:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1212,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1181,
																				"src": "15157:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1210,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "15133:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1221,
															"nodeType": "IfStatement",
															"src": "15089:142:3",
															"trueBody": {
																"id": 1220,
																"nodeType": "Block",
																"src": "15164:67:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1217,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1181,
																					"src": "15211:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1216,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15189:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1219,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:3"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1222,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "15249:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1230,
															"nodeType": "IfStatement",
															"src": "15245:81:3",
															"trueBody": {
																"id": 1229,
																"nodeType": "Block",
																"src": "15260:66:3",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1224,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1195,
																					"src": "15292:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1225,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1177,
																					"src": "15299:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1226,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1179,
																					"src": "15303:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1223,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1396,
																				"src": "15283:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1228,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1233,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15346:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1235,
														"indexExpression": {
															"id": 1234,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "15362:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1236,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "15373:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:3"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:3",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "14738:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "14750:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "14767:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "14781:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:3"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:3"
									},
									"scope": 1371,
									"src": "14720:662:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "15684:219:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1250,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "15698:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1251,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1261,
												"nodeType": "IfStatement",
												"src": "15694:91:3",
												"trueBody": {
													"id": 1260,
													"nodeType": "Block",
													"src": "15722:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1257,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "15765:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1256,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "15743:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1259,
															"nodeType": "RevertStatement",
															"src": "15736:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1262,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "15794:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1265,
															"indexExpression": {
																"id": 1263,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "15813:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1266,
														"indexExpression": {
															"id": 1264,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "15820:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1267,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "15832:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1271,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "15870:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1272,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "15877:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1273,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "15887:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1270,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "15855:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "EmitStatement",
												"src": "15850:46:3"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:3",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "15619:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "15634:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "15652:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:3"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:3"
									},
									"scope": 1371,
									"src": "15591:312:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "16210:169:3",
										"statements": [
											{
												"assignments": [
													1286
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1305,
														"src": "16220:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1285,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"arguments": [
														{
															"id": 1288,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "16245:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1287,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "16236:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1291,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "16267:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1292,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1302,
												"nodeType": "IfStatement",
												"src": "16263:88:3",
												"trueBody": {
													"id": 1301,
													"nodeType": "Block",
													"src": "16288:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1298,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "16332:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1297,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16309:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1300,
															"nodeType": "RevertStatement",
															"src": "16302:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1303,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1286,
													"src": "16367:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1304,
												"nodeType": "Return",
												"src": "16360:12:3"
											}
										]
									},
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:3",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "16161:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:3"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "16201:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:3"
									},
									"scope": 1371,
									"src": "16138:241:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1369,
										"nodeType": "Block",
										"src": "17020:680:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1318,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1311,
																"src": "17034:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1368,
												"nodeType": "IfStatement",
												"src": "17030:664:3",
												"trueBody": {
													"id": 1367,
													"nodeType": "Block",
													"src": "17054:640:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1347,
																		"nodeType": "Block",
																		"src": "17168:162:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1340,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1336,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1334,
																						"src": "17190:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1337,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1506,
																								"src": "17200:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1506_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1338,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:3",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1505,
																							"src": "17200:32:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1339,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:3",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1346,
																				"nodeType": "IfStatement",
																				"src": "17186:130:3",
																				"trueBody": {
																					"id": 1345,
																					"nodeType": "Block",
																					"src": "17243:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1342,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1311,
																										"src": "17294:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1341,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17272:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1343,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1344,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1348,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1335,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1334,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1348,
																				"src": "17153:13:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1333,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:3"
																	},
																	"src": "17144:186:3"
																},
																{
																	"block": {
																		"id": 1364,
																		"nodeType": "Block",
																		"src": "17359:325:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1352,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1350,
																							"src": "17381:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1353,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:3",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1354,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1362,
																					"nodeType": "Block",
																					"src": "17480:190:3",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:3",
																								"nodeType": "YulBlock",
																								"src": "17566:86:3",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:3",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:3",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:3"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:3",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:3"
																													},
																													"nativeSrc": "17599:15:3",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:3"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:3"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:3",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:3"
																													},
																													"nativeSrc": "17616:13:3",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:3"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:3",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:3"
																											},
																											"nativeSrc": "17592:38:3",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:3"
																										},
																										"nativeSrc": "17592:38:3",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:3"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1350,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:3",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1350,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:3",
																									"valueSize": 1
																								}
																							],
																							"id": 1361,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:3"
																						}
																					]
																				},
																				"id": 1363,
																				"nodeType": "IfStatement",
																				"src": "17377:293:3",
																				"trueBody": {
																					"id": 1360,
																					"nodeType": "Block",
																					"src": "17401:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1357,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1311,
																										"src": "17452:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1356,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17430:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1358,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1359,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1365,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1351,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1350,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1365,
																				"src": "17338:19:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1349,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:3"
																	},
																	"src": "17331:353:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1327,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1962,
																			"src": "17109:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1329,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "17123:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1330,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "17129:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1331,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "17138:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1324,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1311,
																				"src": "17088:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1323,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1506,
																			"src": "17072:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1506_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1506",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:3",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1505,
																	"src": "17072:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1366,
															"nodeType": "TryStatement",
															"src": "17068:616:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:3",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "16950:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "16964:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "16976:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "16993:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:3"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:3"
									},
									"scope": 1371,
									"src": "16918:782:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1372,
							"src": "776:16926:3",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1387,
								1396,
								1405
							]
						}
					],
					"src": "107:17596:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2271
						],
						"IERC721": [
							1488
						]
					},
					"id": 1489,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1373,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1375,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1489,
							"sourceUnit": 2272,
							"src": "134:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1374,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2271,
										"src": "142:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1377,
										"name": "IERC165",
										"nameLocations": [
											"287:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2271,
										"src": "287:7:4"
									},
									"id": 1378,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1376,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1488,
							"linearizedBaseContracts": [
								1488,
								2271
							],
							"name": "IERC721",
							"nameLocation": "276:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1387,
									"name": "Transfer",
									"nameLocation": "400:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "409:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "431:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "451:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:4"
									},
									"src": "394:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1396,
									"name": "Approval",
									"nameLocation": "587:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "596:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "619:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "645:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:4"
									},
									"src": "581:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1405,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "819:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "842:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:4"
									},
									"src": "798:85:4"
								},
								{
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:4"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1027:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:4"
									},
									"scope": 1488,
									"src": "970:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "1203:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:4"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "1243:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:4"
									},
									"scope": 1488,
									"src": "1186:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1860:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1874:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1903:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1429,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:4"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:4"
									},
									"scope": 1488,
									"src": "1834:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "2675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "2689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "2701:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:4"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:4"
									},
									"scope": 1488,
									"src": "2649:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "3492:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "3506:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:4"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:4"
									},
									"scope": 1488,
									"src": "3470:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "4024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "4036:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:4"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:4"
									},
									"scope": 1488,
									"src": "4007:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "4415:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "4433:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:4"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:4"
									},
									"scope": 1488,
									"src": "4388:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "4628:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:4"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "4668:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:4"
									},
									"scope": 1488,
									"src": "4607:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4861:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4876:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:4"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4917:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:4"
									},
									"scope": 1488,
									"src": "4835:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1489,
							"src": "266:4659:4",
							"usedErrors": [],
							"usedEvents": [
								1387,
								1396,
								1405
							]
						}
					],
					"src": "108:4818:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1506
						]
					},
					"id": 1507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1490,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1491,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1506,
							"linearizedBaseContracts": [
								1506
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "867:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "893:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "915:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "940:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1499,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:5"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "984:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1502,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:5"
									},
									"scope": 1506,
									"src": "832:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1507,
							"src": "295:699:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
					"exportedSymbols": {
						"ERC721": [
							1371
						],
						"ERC721Enumerable": [
							1890
						],
						"IERC165": [
							2271
						],
						"IERC721Enumerable": [
							1922
						]
					},
					"id": 1891,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1508,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1510,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1891,
							"sourceUnit": 1372,
							"src": "154:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1509,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1371,
										"src": "162:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 1512,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1891,
							"sourceUnit": 1923,
							"src": "192:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1511,
										"name": "IERC721Enumerable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1922,
										"src": "200:17:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 1514,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1891,
							"sourceUnit": 2260,
							"src": "251:64:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1513,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2271,
										"src": "259:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1516,
										"name": "ERC721",
										"nameLocations": [
											"746:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1371,
										"src": "746:6:6"
									},
									"id": 1517,
									"nodeType": "InheritanceSpecifier",
									"src": "746:6:6"
								},
								{
									"baseName": {
										"id": 1518,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"754:17:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1922,
										"src": "754:17:6"
									},
									"id": 1519,
									"nodeType": "InheritanceSpecifier",
									"src": "754:17:6"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1515,
								"nodeType": "StructuredDocumentation",
								"src": "317:390:6",
								"text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n interfere with enumerability and should not be used together with `ERC721Enumerable`."
							},
							"fullyImplemented": true,
							"id": 1890,
							"linearizedBaseContracts": [
								1890,
								1922,
								1371,
								237,
								1950,
								1488,
								2259,
								2271,
								1980
							],
							"name": "ERC721Enumerable",
							"nameLocation": "726:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1525,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "846:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1890,
									"src": "778:80:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1524,
										"keyName": "owner",
										"keyNameLocation": "794:5:6",
										"keyType": {
											"id": 1520,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "786:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "778:59:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1523,
											"keyName": "index",
											"keyNameLocation": "819:5:6",
											"keyType": {
												"id": 1521,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "811:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "803:33:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1522,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "828:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1529,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "908:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1890,
									"src": "864:61:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1528,
										"keyName": "tokenId",
										"keyNameLocation": "880:7:6",
										"keyType": {
											"id": 1526,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "872:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "864:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1527,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "891:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1532,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "950:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1890,
									"src": "932:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1530,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "932:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1531,
										"nodeType": "ArrayTypeName",
										"src": "932:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1536,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "1010:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1890,
									"src": "966:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1535,
										"keyName": "tokenId",
										"keyNameLocation": "982:7:6",
										"keyType": {
											"id": 1533,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "974:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "966:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1534,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "993:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "1032:168:6",
										"text": " @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."
									},
									"errorSelector": "a57d13dc",
									"id": 1543,
									"name": "ERC721OutOfBoundsIndex",
									"nameLocation": "1211:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1257:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "1249:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:30:6"
									},
									"src": "1205:59:6"
								},
								{
									"documentation": {
										"id": 1544,
										"nodeType": "StructuredDocumentation",
										"src": "1270:50:6",
										"text": " @dev Batch mint is not allowed."
									},
									"errorSelector": "59171fc1",
									"id": 1546,
									"name": "ERC721EnumerableForbiddenBatchMint",
									"nameLocation": "1331:34:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:2:6"
									},
									"src": "1325:43:6"
								},
								{
									"baseFunctions": [
										463,
										2270
									],
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "1543:114:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1557,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "1560:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1559,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1922,
																		"src": "1580:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1922_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1922_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 1558,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1575:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1575:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$1922",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1599:11:6",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1575:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1560:50:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1565,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1549,
																"src": "1638:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1563,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1614:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1890_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1620:17:6",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 463,
															"src": "1614:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1614:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1560:90:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1556,
												"id": 1568,
												"nodeType": "Return",
												"src": "1553:97:6"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "1374:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1444:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1553,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1551,
												"name": "IERC165",
												"nameLocations": [
													"1511:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2271,
												"src": "1511:7:6"
											},
											{
												"id": 1552,
												"name": "ERC721",
												"nameLocations": [
													"1520:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1371,
												"src": "1520:6:6"
											}
										],
										"src": "1502:25:6"
									},
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1469:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1462:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1548,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1462:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:20:6"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1537:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1537:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:6:6"
									},
									"scope": 1890,
									"src": "1435:222:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1913
									],
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "1833:158:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1580,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "1847:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1582,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "1866:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1581,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "1856:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1856:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1847:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1591,
												"nodeType": "IfStatement",
												"src": "1843:99:6",
												"trueBody": {
													"id": 1590,
													"nodeType": "Block",
													"src": "1874:68:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1586,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1573,
																		"src": "1918:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1587,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1575,
																		"src": "1925:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1585,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1543,
																	"src": "1895:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256) pure returns (error)"
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1895:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1589,
															"nodeType": "RevertStatement",
															"src": "1888:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1592,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "1958:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1594,
														"indexExpression": {
															"id": 1593,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "1971:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1958:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1596,
													"indexExpression": {
														"id": 1595,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "1978:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1958:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1579,
												"id": 1597,
												"nodeType": "Return",
												"src": "1951:33:6"
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "1663:68:6",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "1745:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1773:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "1765:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1788:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "1780:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:30:6"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "1824:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:9:6"
									},
									"scope": 1890,
									"src": "1736:255:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1903
									],
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "2123:41:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1605,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "2140:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2151:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2140:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1604,
												"id": 1607,
												"nodeType": "Return",
												"src": "2133:24:6"
											}
										]
									},
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "1997:60:6",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2071:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:2:6"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "2114:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:9:6"
									},
									"scope": 1890,
									"src": "2062:102:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1921
									],
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "2311:151:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1617,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "2325:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1618,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "2334:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2334:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2325:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1630,
												"nodeType": "IfStatement",
												"src": "2321:101:6",
												"trueBody": {
													"id": 1629,
													"nodeType": "Block",
													"src": "2349:73:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2401:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2393:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2393:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2393:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1626,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "2405:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1621,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1543,
																	"src": "2370:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256) pure returns (error)"
																	}
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2370:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1628,
															"nodeType": "RevertStatement",
															"src": "2363:48:6"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1631,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "2438:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1633,
													"indexExpression": {
														"id": 1632,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "2449:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2438:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1616,
												"id": 1634,
												"nodeType": "Return",
												"src": "2431:24:6"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "2170:61:6",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "2245:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2266:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "2258:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:15:6"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "2302:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:9:6"
									},
									"scope": 1890,
									"src": "2236:226:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										928
									],
									"body": {
										"id": 1704,
										"nodeType": "Block",
										"src": "2622:521:6",
										"statements": [
											{
												"assignments": [
													1650
												],
												"declarations": [
													{
														"constant": false,
														"id": 1650,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "2640:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1704,
														"src": "2632:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1649,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2632:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1657,
												"initialValue": {
													"arguments": [
														{
															"id": 1653,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "2670:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1654,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "2674:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1655,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "2683:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1651,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2656:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1890_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2662:7:6",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 928,
														"src": "2656:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2656:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2632:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1658,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "2703:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2728:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2720:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1659,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2720:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2720:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2703:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1669,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "2807:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1670,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "2824:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2807:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1678,
													"nodeType": "IfStatement",
													"src": "2803:106:6",
													"trueBody": {
														"id": 1677,
														"nodeType": "Block",
														"src": "2828:81:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1673,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1650,
																			"src": "2875:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1674,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1641,
																			"src": "2890:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1672,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1816,
																		"src": "2842:32:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2842:56:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1676,
																"nodeType": "ExpressionStatement",
																"src": "2842:56:6"
															}
														]
													}
												},
												"id": 1679,
												"nodeType": "IfStatement",
												"src": "2699:210:6",
												"trueBody": {
													"id": 1668,
													"nodeType": "Block",
													"src": "2732:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1665,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "2778:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1664,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "2746:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1667,
															"nodeType": "ExpressionStatement",
															"src": "2746:40:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1680,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "2922:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2936:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2928:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1681,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2928:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2928:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2922:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1691,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "3020:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1692,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "3037:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3020:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1700,
													"nodeType": "IfStatement",
													"src": "3016:90:6",
													"trueBody": {
														"id": 1699,
														"nodeType": "Block",
														"src": "3041:65:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1695,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1639,
																			"src": "3083:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1696,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1641,
																			"src": "3087:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1694,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1736,
																		"src": "3055:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3055:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1698,
																"nodeType": "ExpressionStatement",
																"src": "3055:40:6"
															}
														]
													}
												},
												"id": 1701,
												"nodeType": "IfStatement",
												"src": "2918:188:6",
												"trueBody": {
													"id": 1690,
													"nodeType": "Block",
													"src": "2940:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1687,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "2991:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1686,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "2954:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2954:45:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1689,
															"nodeType": "ExpressionStatement",
															"src": "2954:45:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1702,
													"name": "previousOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1650,
													"src": "3123:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1648,
												"id": 1703,
												"nodeType": "Return",
												"src": "3116:20:6"
											}
										]
									},
									"documentation": {
										"id": 1637,
										"nodeType": "StructuredDocumentation",
										"src": "2468:45:6",
										"text": " @dev See {ERC721-_update}."
									},
									"id": 1705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2527:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1645,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2595:8:6"
									},
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2543:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "2535:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2555:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "2547:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "2572:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "2564:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:43:6"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "2613:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2613:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:9:6"
									},
									"scope": 1890,
									"src": "2518:625:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "3511:140:6",
										"statements": [
											{
												"assignments": [
													1714
												],
												"declarations": [
													{
														"constant": false,
														"id": 1714,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3529:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1735,
														"src": "3521:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1713,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3521:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1720,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1716,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "3548:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1715,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "3538:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3538:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3554:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3538:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3521:34:6"
											},
											{
												"expression": {
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1721,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "3565:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1724,
															"indexExpression": {
																"id": 1722,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "3578:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3565:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1725,
														"indexExpression": {
															"id": 1723,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "3582:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3565:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1726,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "3592:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3565:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "3565:34:6"
											},
											{
												"expression": {
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1729,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "3609:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1731,
														"indexExpression": {
															"id": 1730,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "3627:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3609:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1732,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "3638:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3609:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1734,
												"nodeType": "ExpressionStatement",
												"src": "3609:35:6"
											}
										]
									},
									"documentation": {
										"id": 1706,
										"nodeType": "StructuredDocumentation",
										"src": "3149:283:6",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "3446:27:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3482:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "3474:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3494:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "3486:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:29:6"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3511:0:6"
									},
									"scope": 1890,
									"src": "3437:214:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "3912:95:6",
										"statements": [
											{
												"expression": {
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1742,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "3922:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1744,
														"indexExpression": {
															"id": 1743,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "3938:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3922:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1745,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "3949:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3960:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3949:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3922:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "3922:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1752,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "3992:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1749,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "3976:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3987:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3976:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3976:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1754,
												"nodeType": "ExpressionStatement",
												"src": "3976:24:6"
											}
										]
									},
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "3657:184:6",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "3855:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3895:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "3887:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3886:17:6"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3912:0:6"
									},
									"scope": 1890,
									"src": "3846:161:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "4705:878:6",
										"statements": [
											{
												"assignments": [
													1765
												],
												"declarations": [
													{
														"constant": false,
														"id": 1765,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "4894:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1815,
														"src": "4886:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4886:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1769,
												"initialValue": {
													"arguments": [
														{
															"id": 1767,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "4921:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1766,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "4911:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4911:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4886:40:6"
											},
											{
												"assignments": [
													1771
												],
												"declarations": [
													{
														"constant": false,
														"id": 1771,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "4944:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1815,
														"src": "4936:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4936:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1775,
												"initialValue": {
													"baseExpression": {
														"id": 1772,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "4957:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1774,
													"indexExpression": {
														"id": 1773,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "4975:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4957:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4936:47:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1776,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1771,
														"src": "5087:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1777,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1765,
														"src": "5101:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5087:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1802,
												"nodeType": "IfStatement",
												"src": "5083:323:6",
												"trueBody": {
													"id": 1801,
													"nodeType": "Block",
													"src": "5117:289:6",
													"statements": [
														{
															"assignments": [
																1780
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1780,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "5139:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1801,
																	"src": "5131:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1779,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5131:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1786,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1781,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "5153:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1783,
																	"indexExpression": {
																		"id": 1782,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1759,
																		"src": "5166:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5153:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1785,
																"indexExpression": {
																	"id": 1784,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1765,
																	"src": "5172:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5153:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5131:56:6"
														},
														{
															"expression": {
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1787,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1525,
																			"src": "5202:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1790,
																		"indexExpression": {
																			"id": 1788,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1759,
																			"src": "5215:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5202:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1791,
																	"indexExpression": {
																		"id": 1789,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1771,
																		"src": "5221:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5202:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1792,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "5235:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5202:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1794,
															"nodeType": "ExpressionStatement",
															"src": "5202:44:6"
														},
														{
															"expression": {
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1795,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "5318:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1797,
																	"indexExpression": {
																		"id": 1796,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1780,
																		"src": "5336:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5318:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1798,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1771,
																	"src": "5351:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5318:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1800,
															"nodeType": "ExpressionStatement",
															"src": "5318:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5492:33:6",
													"subExpression": {
														"baseExpression": {
															"id": 1803,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "5499:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1805,
														"indexExpression": {
															"id": 1804,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "5517:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5499:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1807,
												"nodeType": "ExpressionStatement",
												"src": "5492:33:6"
											},
											{
												"expression": {
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5535:41:6",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1808,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "5542:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1810,
															"indexExpression": {
																"id": 1809,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "5555:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5542:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1812,
														"indexExpression": {
															"id": 1811,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "5561:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5542:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1814,
												"nodeType": "ExpressionStatement",
												"src": "5535:41:6"
											}
										]
									},
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "4013:606:6",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "4633:32:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4674:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "4666:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4688:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "4680:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4680:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4665:31:6"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4705:0:6"
									},
									"scope": 1890,
									"src": "4624:959:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "5942:990:6",
										"statements": [
											{
												"assignments": [
													1823
												],
												"declarations": [
													{
														"constant": false,
														"id": 1823,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "6128:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1863,
														"src": "6120:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6120:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1828,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1824,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "6145:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6156:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6145:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6165:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6145:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6120:46:6"
											},
											{
												"assignments": [
													1830
												],
												"declarations": [
													{
														"constant": false,
														"id": 1830,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "6184:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1863,
														"src": "6176:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1829,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6176:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1834,
												"initialValue": {
													"baseExpression": {
														"id": 1831,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "6197:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1833,
													"indexExpression": {
														"id": 1832,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1819,
														"src": "6213:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6197:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6176:45:6"
											},
											{
												"assignments": [
													1836
												],
												"declarations": [
													{
														"constant": false,
														"id": 1836,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "6551:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1863,
														"src": "6543:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1835,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6543:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1840,
												"initialValue": {
													"baseExpression": {
														"id": 1837,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "6565:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1839,
													"indexExpression": {
														"id": 1838,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "6576:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6565:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6543:48:6"
											},
											{
												"expression": {
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1841,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "6602:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1843,
														"indexExpression": {
															"id": 1842,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "6613:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6602:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1844,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1836,
														"src": "6627:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6602:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1846,
												"nodeType": "ExpressionStatement",
												"src": "6602:36:6"
											},
											{
												"expression": {
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1847,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "6706:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1849,
														"indexExpression": {
															"id": 1848,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "6722:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6706:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1850,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "6737:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6706:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "6706:41:6"
											},
											{
												"expression": {
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6868:31:6",
													"subExpression": {
														"baseExpression": {
															"id": 1853,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "6875:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1855,
														"indexExpression": {
															"id": 1854,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "6891:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6875:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1857,
												"nodeType": "ExpressionStatement",
												"src": "6868:31:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1858,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "6909:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6920:3:6",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "6909:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6909:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1862,
												"nodeType": "ExpressionStatement",
												"src": "6909:16:6"
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "5589:277:6",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "5880:36:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5925:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "5917:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5916:17:6"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5942:0:6"
									},
									"scope": 1890,
									"src": "5871:1061:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										838
									],
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "7134:149:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1873,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "7148:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7157:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7148:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1880,
												"nodeType": "IfStatement",
												"src": "7144:84:6",
												"trueBody": {
													"id": 1879,
													"nodeType": "Block",
													"src": "7160:68:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1876,
																	"name": "ERC721EnumerableForbiddenBatchMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "7181:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7181:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1878,
															"nodeType": "RevertStatement",
															"src": "7174:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1884,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "7260:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1885,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "7269:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 1881,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "7237:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1890_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7243:16:6",
														"memberName": "_increaseBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 838,
														"src": "7237:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7237:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "7237:39:6"
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "6938:106:6",
										"text": " See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"
									},
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "7058:16:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1871,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7125:8:6"
									},
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7083:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "7075:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7075:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7100:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "7092:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1868,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7092:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7074:33:6"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:6"
									},
									"scope": 1890,
									"src": "7049:234:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1891,
							"src": "708:6577:6",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236,
								1543,
								1546
							],
							"usedEvents": [
								1387,
								1396,
								1405
							]
						}
					],
					"src": "128:7158:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC721": [
							1488
						],
						"IERC721Enumerable": [
							1922
						]
					},
					"id": 1923,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1892,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "129:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1894,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1923,
							"sourceUnit": 1489,
							"src": "155:39:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1893,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1488,
										"src": "163:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1896,
										"name": "IERC721",
										"nameLocations": [
											"364:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1488,
										"src": "364:7:7"
									},
									"id": 1897,
									"nodeType": "InheritanceSpecifier",
									"src": "364:7:7"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1895,
								"nodeType": "StructuredDocumentation",
								"src": "196:136:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1922,
							"linearizedBaseContracts": [
								1922,
								1488,
								2271
							],
							"name": "IERC721Enumerable",
							"nameLocation": "343:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "378:82:7",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1903,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "474:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:7"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "511:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:9:7"
									},
									"scope": 1922,
									"src": "465:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1904,
										"nodeType": "StructuredDocumentation",
										"src": "526:171:7",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "711:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "739:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "731:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "754:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "746:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:30:7"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "784:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:9:7"
									},
									"scope": 1922,
									"src": "702:91:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1914,
										"nodeType": "StructuredDocumentation",
										"src": "799:164:7",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1921,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "977:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "998:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "990:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:7"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "1028:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:9:7"
									},
									"scope": 1922,
									"src": "968:69:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1923,
							"src": "333:706:7",
							"usedErrors": [],
							"usedEvents": [
								1387,
								1396,
								1405
							]
						}
					],
					"src": "129:911:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1488
						],
						"IERC721Metadata": [
							1950
						]
					},
					"id": 1951,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1924,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1926,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1951,
							"sourceUnit": 1489,
							"src": "153:39:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1925,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1488,
										"src": "161:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1928,
										"name": "IERC721",
										"nameLocations": [
											"357:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1488,
										"src": "357:7:8"
									},
									"id": 1929,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:8"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1927,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:8",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1950,
							"linearizedBaseContracts": [
								1950,
								1488,
								2271
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1930,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:8",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:8"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "473:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1932,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:8"
									},
									"scope": 1950,
									"src": "434:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:8",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:8"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "600:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1938,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:8"
									},
									"scope": 1950,
									"src": "559:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:8",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "734:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:8"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "774:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1946,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:8"
									},
									"scope": 1950,
									"src": "716:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1951,
							"src": "328:463:8",
							"usedErrors": [],
							"usedEvents": [
								1387,
								1396,
								1405
							]
						}
					],
					"src": "127:665:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1980
						]
					},
					"id": 1981,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1952,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1953,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1980,
							"linearizedBaseContracts": [
								1980
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1961,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1958,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1957,
												"id": 1960,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1980,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1967,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1966,
												"id": 1969,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1964,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1980,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1978,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1975,
												"id": 1977,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1980,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1981,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3325
						],
						"SignedMath": [
							3430
						],
						"Strings": [
							2235
						]
					},
					"id": 2236,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1982,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2236,
							"sourceUnit": 3326,
							"src": "127:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1983,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3325,
										"src": "135:4:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1986,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2236,
							"sourceUnit": 3431,
							"src": "165:49:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1985,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3430,
										"src": "173:10:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1987,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2235,
							"linearizedBaseContracts": [
								2235
							],
							"name": "Strings",
							"nameLocation": "259:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1990,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2235,
									"src": "273:56:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1988,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1989,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1993,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 2235,
									"src": "335:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1991,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1992,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1994,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:10",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2000,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "505:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "520:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:10"
									},
									"src": "470:66:10"
								},
								{
									"body": {
										"id": 2047,
										"nodeType": "Block",
										"src": "708:627:10",
										"statements": [
											{
												"id": 2046,
												"nodeType": "UncheckedBlock",
												"src": "718:611:10",
												"statements": [
													{
														"assignments": [
															2009
														],
														"declarations": [
															{
																"constant": false,
																"id": 2009,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2046,
																"src": "742:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2008,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2016,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2012,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2003,
																		"src": "770:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2010,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3325,
																		"src": "759:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3325_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:10",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3145,
																	"src": "759:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:10"
													},
													{
														"assignments": [
															2018
														],
														"declarations": [
															{
																"constant": false,
																"id": 2018,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2046,
																"src": "794:20:10",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2017,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2023,
														"initialValue": {
															"arguments": [
																{
																	"id": 2021,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2009,
																	"src": "828:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2019,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:10"
													},
													{
														"assignments": [
															2025
														],
														"declarations": [
															{
																"constant": false,
																"id": 2025,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 2046,
																"src": "849:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2024,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2026,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:10"
													},
													{
														"AST": {
															"nativeSrc": "930:67:10",
															"nodeType": "YulBlock",
															"src": "930:67:10",
															"statements": [
																{
																	"nativeSrc": "948:35:10",
																	"nodeType": "YulAssignment",
																	"src": "948:35:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:10",
																						"nodeType": "YulLiteral",
																						"src": "971:2:10",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:10"
																				},
																				"nativeSrc": "967:15:10",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:10"
																		},
																		"nativeSrc": "955:28:10",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:10"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:10"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2018,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:10",
																"valueSize": 1
															},
															{
																"declaration": 2009,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:10",
																"valueSize": 1
															},
															{
																"declaration": 2025,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:10",
																"valueSize": 1
															}
														],
														"id": 2027,
														"nodeType": "InlineAssembly",
														"src": "921:76:10"
													},
													{
														"body": {
															"id": 2042,
															"nodeType": "Block",
															"src": "1023:269:10",
															"statements": [
																{
																	"expression": {
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:10",
																		"subExpression": {
																			"id": 2029,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2025,
																			"src": "1041:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2031,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:10"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:10",
																		"nodeType": "YulBlock",
																		"src": "1124:86:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:10",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:10",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:10"
																									},
																									"nativeSrc": "1164:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:10"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:10",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:10"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:10"
																							},
																							"nativeSrc": "1159:32:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:10",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:10"
																					},
																					"nativeSrc": "1146:46:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:10"
																				},
																				"nativeSrc": "1146:46:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:10"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1990,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2025,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2003,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:10",
																			"valueSize": 1
																		}
																	],
																	"id": 2032,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:10"
																},
																{
																	"expression": {
																		"id": 2035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2033,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2003,
																			"src": "1227:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2036,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2037,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2003,
																			"src": "1260:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2041,
																	"nodeType": "IfStatement",
																	"src": "1256:21:10",
																	"trueBody": {
																		"id": 2040,
																		"nodeType": "Break",
																		"src": "1272:5:10"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2043,
														"nodeType": "WhileStatement",
														"src": "1010:282:10"
													},
													{
														"expression": {
															"id": 2044,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "1312:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2007,
														"id": 2045,
														"nodeType": "Return",
														"src": "1305:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2001,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "655:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:10"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "693:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2005,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:10"
									},
									"scope": 2235,
									"src": "637:698:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2073,
										"nodeType": "Block",
										"src": "1511:92:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2059,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2051,
																	"src": "1542:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:10",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2068,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "1588:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2066,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3430,
																			"src": "1573:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3430_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:10",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3429,
																		"src": "1573:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2065,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2048,
																"src": "1564:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2056,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 2058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:10",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2055,
												"id": 2072,
												"nodeType": "Return",
												"src": "1521:75:10"
											}
										]
									},
									"documentation": {
										"id": 2049,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:10",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "1459:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2050,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:10"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "1496:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2053,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:10"
									},
									"scope": 2235,
									"src": "1435:168:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2093,
										"nodeType": "Block",
										"src": "1782:100:10",
										"statements": [
											{
												"id": 2092,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2083,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2077,
																	"src": "1835:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2086,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2077,
																				"src": "1854:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2084,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3325,
																				"src": "1842:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3325_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:10",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3267,
																			"src": "1842:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2082,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2094,
																	2177,
																	2197
																],
																"referencedDeclaration": 2177,
																"src": "1823:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2081,
														"id": 2091,
														"nodeType": "Return",
														"src": "1816:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2075,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "1729:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:10"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "1767:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2079,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:10"
									},
									"scope": 2235,
									"src": "1708:174:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2176,
										"nodeType": "Block",
										"src": "2095:435:10",
										"statements": [
											{
												"assignments": [
													2105
												],
												"declarations": [
													{
														"constant": false,
														"id": 2105,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2176,
														"src": "2105:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2104,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2107,
												"initialValue": {
													"id": 2106,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2097,
													"src": "2126:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:10"
											},
											{
												"assignments": [
													2109
												],
												"declarations": [
													{
														"constant": false,
														"id": 2109,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2176,
														"src": "2141:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2108,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2118,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2113,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "2177:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2110,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:10"
											},
											{
												"expression": {
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2119,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "2198:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2121,
														"indexExpression": {
															"hexValue": "30",
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2124,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:10"
											},
											{
												"expression": {
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2125,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "2223:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2127,
														"indexExpression": {
															"hexValue": "31",
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2130,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:10"
											},
											{
												"body": {
													"id": 2159,
													"nodeType": "Block",
													"src": "2293:95:10",
													"statements": [
														{
															"expression": {
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2145,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "2307:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2147,
																	"indexExpression": {
																		"id": 2146,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2132,
																		"src": "2314:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2148,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1990,
																		"src": "2319:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2152,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2149,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "2330:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2154,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:10"
														},
														{
															"expression": {
																"id": 2157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2155,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2105,
																	"src": "2361:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2158,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2139,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "2281:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2160,
												"initializationExpression": {
													"assignments": [
														2132
													],
													"declarations": [
														{
															"constant": false,
															"id": 2132,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2160,
															"src": "2253:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2131,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2138,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2134,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "2269:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:10"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:10",
														"subExpression": {
															"id": 2142,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "2290:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2144,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2161,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2105,
														"src": "2401:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2170,
												"nodeType": "IfStatement",
												"src": "2397:96:10",
												"trueBody": {
													"id": 2169,
													"nodeType": "Block",
													"src": "2418:75:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2165,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2097,
																		"src": "2468:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2166,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "2475:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2164,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2000,
																	"src": "2439:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2168,
															"nodeType": "RevertStatement",
															"src": "2432:50:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2173,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "2516:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2171,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2103,
												"id": 2175,
												"nodeType": "Return",
												"src": "2502:21:10"
											}
										]
									},
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "2026:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "2041:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:10"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "2080:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2101,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:10"
									},
									"scope": 2235,
									"src": "2005:525:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2196,
										"nodeType": "Block",
										"src": "2762:75:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2190,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2180,
																			"src": "2807:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2188,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2186,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2193,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "2815:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2185,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2094,
															2177,
															2197
														],
														"referencedDeclaration": 2177,
														"src": "2779:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2184,
												"id": 2195,
												"nodeType": "Return",
												"src": "2772:58:10"
											}
										]
									},
									"documentation": {
										"id": 2178,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "2710:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:10"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "2747:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2182,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:10"
									},
									"scope": 2235,
									"src": "2689:148:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2233,
										"nodeType": "Block",
										"src": "2992:104:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2209,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2200,
																		"src": "3015:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2207,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2214,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2202,
																		"src": "3034:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2212,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2221,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2200,
																			"src": "3063:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2219,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2218,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2227,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2202,
																			"src": "3086:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2225,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2224,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2206,
												"id": 2232,
												"nodeType": "Return",
												"src": "3002:87:10"
											}
										]
									},
									"documentation": {
										"id": 2198,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:10",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "2929:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2199,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "2946:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2201,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:10"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "2986:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:10"
									},
									"scope": 2235,
									"src": "2914:182:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2236,
							"src": "251:2847:10",
							"usedErrors": [
								2000
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2259
						],
						"IERC165": [
							2271
						]
					},
					"id": 2260,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2237,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2239,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2260,
							"sourceUnit": 2272,
							"src": "140:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2238,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2271,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2241,
										"name": "IERC165",
										"nameLocations": [
											"687:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2271,
										"src": "687:7:11"
									},
									"id": 2242,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2240,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2259,
							"linearizedBaseContracts": [
								2259,
								2271
							],
							"name": "ERC165",
							"nameLocation": "677:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2270
									],
									"body": {
										"id": 2257,
										"nodeType": "Block",
										"src": "844:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2250,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2245,
														"src": "861:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2252,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2271_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2271_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2251,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2271",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2249,
												"id": 2256,
												"nodeType": "Return",
												"src": "854:47:11"
											}
										]
									},
									"documentation": {
										"id": 2243,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "789:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2244,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:11"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "838:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:11"
									},
									"scope": 2259,
									"src": "762:146:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2260,
							"src": "659:251:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2271
						]
					},
					"id": 2272,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2261,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2262,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2271,
							"linearizedBaseContracts": [
								2271
							],
							"name": "IERC165",
							"nameLocation": "431:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2263,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "817:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2264,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:12"
									},
									"returnParameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "860:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:12"
									},
									"scope": 2271,
									"src": "790:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2272,
							"src": "421:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3325
						]
					},
					"id": 3326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2273,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2274,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3325,
							"linearizedBaseContracts": [
								3325
							],
							"name": "Math",
							"nameLocation": "211:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2275,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:13",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2277,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:13"
									},
									"src": "277:29:13"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2282,
									"members": [
										{
											"id": 2278,
											"name": "Floor",
											"nameLocation": "336:5:13",
											"nodeType": "EnumValue",
											"src": "336:5:13"
										},
										{
											"id": 2279,
											"name": "Ceil",
											"nameLocation": "379:4:13",
											"nodeType": "EnumValue",
											"src": "379:4:13"
										},
										{
											"id": 2280,
											"name": "Trunc",
											"nameLocation": "421:5:13",
											"nodeType": "EnumValue",
											"src": "421:5:13"
										},
										{
											"id": 2281,
											"name": "Expand",
											"nameLocation": "451:6:13",
											"nodeType": "EnumValue",
											"src": "451:6:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:13",
									"nodeType": "EnumDefinition",
									"src": "312:169:13"
								},
								{
									"body": {
										"id": 2313,
										"nodeType": "Block",
										"src": "661:140:13",
										"statements": [
											{
												"id": 2312,
												"nodeType": "UncheckedBlock",
												"src": "671:124:13",
												"statements": [
													{
														"assignments": [
															2295
														],
														"declarations": [
															{
																"constant": false,
																"id": 2295,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2312,
																"src": "695:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2294,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2299,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2296,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2285,
																"src": "707:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2297,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2287,
																"src": "711:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2300,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "730:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2301,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2285,
																"src": "734:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2307,
														"nodeType": "IfStatement",
														"src": "726:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2305,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2293,
															"id": 2306,
															"nodeType": "Return",
															"src": "737:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2309,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "782:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2310,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2293,
														"id": 2311,
														"nodeType": "Return",
														"src": "768:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2283,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:13"
									},
									"returnParameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "646:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "652:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:13"
									},
									"scope": 3325,
									"src": "585:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2341,
										"nodeType": "Block",
										"src": "984:113:13",
										"statements": [
											{
												"id": 2340,
												"nodeType": "UncheckedBlock",
												"src": "994:97:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2326,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2319,
																"src": "1022:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2327,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2317,
																"src": "1026:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2333,
														"nodeType": "IfStatement",
														"src": "1018:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2331,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2325,
															"id": 2332,
															"nodeType": "Return",
															"src": "1029:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2335,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2317,
																		"src": "1074:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2336,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2319,
																		"src": "1078:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2338,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2325,
														"id": 2339,
														"nodeType": "Return",
														"src": "1060:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2315,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "924:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "935:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:13"
									},
									"returnParameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "969:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "975:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:13"
									},
									"scope": 3325,
									"src": "908:189:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2383,
										"nodeType": "Block",
										"src": "1283:417:13",
										"statements": [
											{
												"id": 2382,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2354,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2345,
																"src": "1551:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2361,
														"nodeType": "IfStatement",
														"src": "1547:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2359,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2353,
															"id": 2360,
															"nodeType": "Return",
															"src": "1559:16:13"
														}
													},
													{
														"assignments": [
															2363
														],
														"declarations": [
															{
																"constant": false,
																"id": 2363,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2382,
																"src": "1589:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2362,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2367,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2364,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2345,
																"src": "1601:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2365,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2347,
																"src": "1605:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2368,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2363,
																	"src": "1624:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2369,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2345,
																	"src": "1628:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2371,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2347,
																"src": "1633:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2377,
														"nodeType": "IfStatement",
														"src": "1620:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2375,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2353,
															"id": 2376,
															"nodeType": "Return",
															"src": "1636:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2379,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2363,
																	"src": "1681:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2380,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2353,
														"id": 2381,
														"nodeType": "Return",
														"src": "1667:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2343,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1223:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1234:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:13"
									},
									"returnParameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1268:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1274:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:13"
									},
									"scope": 3325,
									"src": "1207:493:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2411,
										"nodeType": "Block",
										"src": "1887:114:13",
										"statements": [
											{
												"id": 2410,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2396,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2389,
																"src": "1925:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2403,
														"nodeType": "IfStatement",
														"src": "1921:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2401,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2395,
															"id": 2402,
															"nodeType": "Return",
															"src": "1933:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2405,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2387,
																		"src": "1978:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2406,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2389,
																		"src": "1982:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2408,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2395,
														"id": 2409,
														"nodeType": "Return",
														"src": "1964:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2385,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "1827:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "1838:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:13"
									},
									"returnParameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "1872:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "1878:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:13"
									},
									"scope": 3325,
									"src": "1811:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "2198:114:13",
										"statements": [
											{
												"id": 2438,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2424,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2417,
																"src": "2236:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2431,
														"nodeType": "IfStatement",
														"src": "2232:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2429,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2423,
															"id": 2430,
															"nodeType": "Return",
															"src": "2244:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2433,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2415,
																		"src": "2289:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2434,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2417,
																		"src": "2293:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2436,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2423,
														"id": 2437,
														"nodeType": "Return",
														"src": "2275:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2413,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "2138:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "2149:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:13"
									},
									"returnParameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "2183:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "2189:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:13"
									},
									"scope": 3325,
									"src": "2122:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2457,
										"nodeType": "Block",
										"src": "2449:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2450,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2443,
															"src": "2466:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2451,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2445,
															"src": "2470:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2454,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2445,
														"src": "2478:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:13",
													"trueExpression": {
														"id": 2453,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2443,
														"src": "2474:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2449,
												"id": 2456,
												"nodeType": "Return",
												"src": "2459:20:13"
											}
										]
									},
									"documentation": {
										"id": 2441,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "2395:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "2406:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:13"
									},
									"returnParameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "2440:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:13"
									},
									"scope": 3325,
									"src": "2382:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2475,
										"nodeType": "Block",
										"src": "2624:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2468,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2461,
															"src": "2641:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2469,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2463,
															"src": "2645:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2472,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2463,
														"src": "2653:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:13",
													"trueExpression": {
														"id": 2471,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2461,
														"src": "2649:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2467,
												"id": 2474,
												"nodeType": "Return",
												"src": "2634:20:13"
											}
										]
									},
									"documentation": {
										"id": 2459,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "2570:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "2581:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:13"
									},
									"returnParameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "2615:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:13"
									},
									"scope": 3325,
									"src": "2557:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "2845:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2486,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2479,
																	"src": "2900:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2487,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2481,
																	"src": "2904:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2489,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2490,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2479,
																		"src": "2910:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2491,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2481,
																		"src": "2914:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2493,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2485,
												"id": 2497,
												"nodeType": "Return",
												"src": "2892:28:13"
											}
										]
									},
									"documentation": {
										"id": 2477,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "2791:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "2802:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:13"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "2836:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:13"
									},
									"scope": 3325,
									"src": "2774:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2532,
										"nodeType": "Block",
										"src": "3219:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2509,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2504,
														"src": "3233:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2517,
												"nodeType": "IfStatement",
												"src": "3229:127:13",
												"trueBody": {
													"id": 2516,
													"nodeType": "Block",
													"src": "3241:115:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2512,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "3340:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2513,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2504,
																	"src": "3344:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2508,
															"id": 2515,
															"nodeType": "Return",
															"src": "3333:12:13"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2518,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2502,
															"src": "3444:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2522,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2502,
																			"src": "3458:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2526,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2504,
																"src": "3467:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 2521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2508,
												"id": 2531,
												"nodeType": "Return",
												"src": "3437:35:13"
											}
										]
									},
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "3165:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "3176:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:13"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "3210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:13"
									},
									"scope": 3325,
									"src": "3148:331:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2658,
										"nodeType": "Block",
										"src": "3901:4018:13",
										"statements": [
											{
												"id": 2657,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:13",
												"statements": [
													{
														"assignments": [
															2546
														],
														"declarations": [
															{
																"constant": false,
																"id": 2546,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2657,
																"src": "4232:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2545,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2550,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2547,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2536,
																"src": "4248:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2548,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2538,
																"src": "4252:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:13"
													},
													{
														"assignments": [
															2552
														],
														"declarations": [
															{
																"constant": false,
																"id": 2552,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2657,
																"src": "4312:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2551,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2553,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:13"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:13",
															"nodeType": "YulBlock",
															"src": "4392:122:13",
															"statements": [
																{
																	"nativeSrc": "4410:30:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:13"
																				},
																				"nativeSrc": "4433:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:13"
																		},
																		"nativeSrc": "4420:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:13",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:13",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:13"
																				},
																				"nativeSrc": "4470:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:13"
																				},
																				"nativeSrc": "4486:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:13"
																		},
																		"nativeSrc": "4466:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2546,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2546,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2552,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2536,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2538,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:13",
																"valueSize": 1
															}
														],
														"id": 2554,
														"nodeType": "InlineAssembly",
														"src": "4383:131:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2555,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "4595:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2563,
														"nodeType": "IfStatement",
														"src": "4591:368:13",
														"trueBody": {
															"id": 2562,
															"nodeType": "Block",
															"src": "4607:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2558,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2546,
																			"src": "4925:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2559,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2540,
																			"src": "4933:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2544,
																	"id": 2561,
																	"nodeType": "Return",
																	"src": "4918:26:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2564,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2540,
																"src": "5065:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2565,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "5080:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2571,
														"nodeType": "IfStatement",
														"src": "5061:88:13",
														"trueBody": {
															"id": 2570,
															"nodeType": "Block",
															"src": "5087:62:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2567,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2277,
																			"src": "5112:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2569,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:13"
																}
															]
														}
													},
													{
														"assignments": [
															2573
														],
														"declarations": [
															{
																"constant": false,
																"id": 2573,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2657,
																"src": "5404:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2572,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2574,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:13"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:13",
															"nodeType": "YulBlock",
															"src": "5444:291:13",
															"statements": [
																{
																	"nativeSrc": "5513:38:13",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:13"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:13"
																		},
																		"nativeSrc": "5526:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:13",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:13"
																				},
																				"nativeSrc": "5653:20:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:13"
																		},
																		"nativeSrc": "5642:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:13",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:13"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:13"
																		},
																		"nativeSrc": "5700:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2540,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2546,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2546,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2546,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2552,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2552,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2573,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2573,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2573,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2536,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2538,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:13",
																"valueSize": 1
															}
														],
														"id": 2575,
														"nodeType": "InlineAssembly",
														"src": "5435:300:13"
													},
													{
														"assignments": [
															2577
														],
														"declarations": [
															{
																"constant": false,
																"id": 2577,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2657,
																"src": "5939:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2576,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2584,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2578,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2540,
																"src": "5954:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2580,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2540,
																			"src": "5973:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2582,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:13"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:13",
															"nodeType": "YulBlock",
															"src": "6008:362:13",
															"statements": [
																{
																	"nativeSrc": "6073:37:13",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:13"
																		},
																		"nativeSrc": "6088:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:13",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:13"
																		},
																		"nativeSrc": "6186:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:13",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:13"
																						},
																						"nativeSrc": "6333:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:13"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:13"
																				},
																				"nativeSrc": "6329:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:13"
																		},
																		"nativeSrc": "6325:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2540,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2540,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2546,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2546,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2577,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2577,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2577,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2577,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2577,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:13",
																"valueSize": 1
															}
														],
														"id": 2585,
														"nodeType": "InlineAssembly",
														"src": "5999:371:13"
													},
													{
														"expression": {
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2586,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2546,
																"src": "6436:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2587,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2552,
																	"src": "6445:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2588,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2577,
																	"src": "6453:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2591,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:13"
													},
													{
														"assignments": [
															2593
														],
														"declarations": [
															{
																"constant": false,
																"id": 2593,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2657,
																"src": "6775:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2592,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2600,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2595,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2540,
																			"src": "6798:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2597,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:13"
													},
													{
														"expression": {
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2601,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "7031:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2603,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2540,
																		"src": "7046:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2604,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2593,
																		"src": "7060:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2608,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:13"
													},
													{
														"expression": {
															"id": 2615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2609,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "7100:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2611,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2540,
																		"src": "7115:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2612,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2593,
																		"src": "7129:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2616,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:13"
													},
													{
														"expression": {
															"id": 2623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2617,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "7170:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2619,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2540,
																		"src": "7185:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2620,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2593,
																		"src": "7199:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2624,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:13"
													},
													{
														"expression": {
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2625,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "7240:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2627,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2540,
																		"src": "7255:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2628,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2593,
																		"src": "7269:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2632,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:13"
													},
													{
														"expression": {
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2633,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "7310:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2635,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2540,
																		"src": "7325:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2636,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2593,
																		"src": "7339:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2640,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:13"
													},
													{
														"expression": {
															"id": 2647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2641,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "7381:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2643,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2540,
																		"src": "7396:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2644,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2593,
																		"src": "7410:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2648,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:13"
													},
													{
														"expression": {
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2649,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2543,
																"src": "7851:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2650,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2546,
																	"src": "7860:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2651,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2593,
																	"src": "7868:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2654,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:13"
													},
													{
														"expression": {
															"id": 2655,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2543,
															"src": "7896:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2544,
														"id": 2656,
														"nodeType": "Return",
														"src": "7889:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2534,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "3819:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "3830:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "3841:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:13"
									},
									"returnParameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "3885:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:13"
									},
									"scope": 3325,
									"src": "3803:4116:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2701,
										"nodeType": "Block",
										"src": "8161:192:13",
										"statements": [
											{
												"assignments": [
													2675
												],
												"declarations": [
													{
														"constant": false,
														"id": 2675,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2701,
														"src": "8171:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2681,
												"initialValue": {
													"arguments": [
														{
															"id": 2677,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2662,
															"src": "8195:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2678,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2664,
															"src": "8198:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2679,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2666,
															"src": "8201:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2676,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2659,
															2702
														],
														"referencedDeclaration": 2659,
														"src": "8188:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2683,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "8244:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2282",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2282",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2682,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3324,
															"src": "8227:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2282_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2686,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2662,
																	"src": "8264:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2687,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2664,
																	"src": "8267:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2688,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2666,
																	"src": "8270:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2685,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2698,
												"nodeType": "IfStatement",
												"src": "8223:101:13",
												"trueBody": {
													"id": 2697,
													"nodeType": "Block",
													"src": "8288:36:13",
													"statements": [
														{
															"expression": {
																"id": 2695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2693,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2675,
																	"src": "8302:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2696,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2699,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2675,
													"src": "8340:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2673,
												"id": 2700,
												"nodeType": "Return",
												"src": "8333:13:13"
											}
										]
									},
									"documentation": {
										"id": 2660,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "8067:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "8078:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "8089:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "8110:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2282",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2668,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2667,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2282,
														"src": "8110:8:13"
													},
													"referencedDeclaration": 2282,
													"src": "8110:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2282",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:13"
									},
									"returnParameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "8152:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:13"
									},
									"scope": 3325,
									"src": "8051:302:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2813,
										"nodeType": "Block",
										"src": "8644:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2710,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2705,
														"src": "8658:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2716,
												"nodeType": "IfStatement",
												"src": "8654:45:13",
												"trueBody": {
													"id": 2715,
													"nodeType": "Block",
													"src": "8666:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2709,
															"id": 2714,
															"nodeType": "Return",
															"src": "8680:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2718
												],
												"declarations": [
													{
														"constant": false,
														"id": 2718,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2813,
														"src": "9378:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2717,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2727,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2721,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2705,
																			"src": "9406:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2720,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2981,
																			3016
																		],
																		"referencedDeclaration": 2981,
																		"src": "9401:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2725,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:13"
											},
											{
												"id": 2812,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:13",
												"statements": [
													{
														"expression": {
															"id": 2737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2728,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2718,
																"src": "9839:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2729,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2718,
																				"src": "9849:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2730,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2705,
																					"src": "9858:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2731,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2718,
																					"src": "9862:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2734,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2738,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:13"
													},
													{
														"expression": {
															"id": 2748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2739,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2718,
																"src": "9888:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2740,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2718,
																				"src": "9898:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2741,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2705,
																					"src": "9907:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2742,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2718,
																					"src": "9911:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2745,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2749,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:13"
													},
													{
														"expression": {
															"id": 2759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2750,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2718,
																"src": "9937:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2751,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2718,
																				"src": "9947:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2752,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2705,
																					"src": "9956:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2753,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2718,
																					"src": "9960:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2756,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2760,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:13"
													},
													{
														"expression": {
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2761,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2718,
																"src": "9986:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2762,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2718,
																				"src": "9996:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2763,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2705,
																					"src": "10005:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2764,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2718,
																					"src": "10009:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2767,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2771,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:13"
													},
													{
														"expression": {
															"id": 2781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2772,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2718,
																"src": "10035:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2773,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2718,
																				"src": "10045:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2774,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2705,
																					"src": "10054:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2775,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2718,
																					"src": "10058:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2778,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2782,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:13"
													},
													{
														"expression": {
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2783,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2718,
																"src": "10084:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2784,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2718,
																				"src": "10094:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2787,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2785,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2705,
																					"src": "10103:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2786,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2718,
																					"src": "10107:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2789,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2793,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:13"
													},
													{
														"expression": {
															"id": 2803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2794,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2718,
																"src": "10133:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2795,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2718,
																				"src": "10143:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2796,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2705,
																					"src": "10152:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2797,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2718,
																					"src": "10156:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2800,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2804,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2806,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2718,
																	"src": "10193:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2807,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2705,
																		"src": "10201:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2808,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2718,
																		"src": "10205:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2805,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2476,
																"src": "10189:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2709,
														"id": 2811,
														"nodeType": "Return",
														"src": "10182:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2703,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "8601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:13"
									},
									"returnParameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "8635:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:13"
									},
									"scope": 3325,
									"src": "8587:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2848,
										"nodeType": "Block",
										"src": "10405:164:13",
										"statements": [
											{
												"id": 2847,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:13",
												"statements": [
													{
														"assignments": [
															2826
														],
														"declarations": [
															{
																"constant": false,
																"id": 2826,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2847,
																"src": "10439:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2825,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2830,
														"initialValue": {
															"arguments": [
																{
																	"id": 2828,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2817,
																	"src": "10461:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2827,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2814,
																	2849
																],
																"referencedDeclaration": 2814,
																"src": "10456:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2831,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2826,
																"src": "10484:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2833,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2820,
																						"src": "10511:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2282",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2282",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2832,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3324,
																					"src": "10494:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2282_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2837,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2835,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2826,
																						"src": "10524:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2836,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2826,
																						"src": "10533:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2838,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2817,
																					"src": "10542:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2844,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2824,
														"id": 2846,
														"nodeType": "Return",
														"src": "10477:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2815,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "10343:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "10354:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2282",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2819,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2818,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2282,
														"src": "10354:8:13"
													},
													"referencedDeclaration": 2282,
													"src": "10354:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2282",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:13"
									},
									"returnParameters": {
										"id": 2824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "10396:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:13"
									},
									"scope": 3325,
									"src": "10329:240:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2980,
										"nodeType": "Block",
										"src": "10760:922:13",
										"statements": [
											{
												"assignments": [
													2858
												],
												"declarations": [
													{
														"constant": false,
														"id": 2858,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2980,
														"src": "10770:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2857,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2860,
												"initialValue": {
													"hexValue": "30",
													"id": 2859,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:13"
											},
											{
												"id": 2977,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2861,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2852,
																	"src": "10826:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2875,
														"nodeType": "IfStatement",
														"src": "10822:99:13",
														"trueBody": {
															"id": 2874,
															"nodeType": "Block",
															"src": "10844:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2866,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2852,
																			"src": "10862:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2869,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:13"
																},
																{
																	"expression": {
																		"id": 2872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2870,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2858,
																			"src": "10893:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2873,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2876,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2852,
																	"src": "10938:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2890,
														"nodeType": "IfStatement",
														"src": "10934:96:13",
														"trueBody": {
															"id": 2889,
															"nodeType": "Block",
															"src": "10955:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2881,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2852,
																			"src": "10973:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2884,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:13"
																},
																{
																	"expression": {
																		"id": 2887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2885,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2858,
																			"src": "11003:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2888,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2891,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2852,
																	"src": "11047:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2905,
														"nodeType": "IfStatement",
														"src": "11043:96:13",
														"trueBody": {
															"id": 2904,
															"nodeType": "Block",
															"src": "11064:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2896,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2852,
																			"src": "11082:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2899,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:13"
																},
																{
																	"expression": {
																		"id": 2902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2900,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2858,
																			"src": "11112:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2903,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2906,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2852,
																	"src": "11156:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2920,
														"nodeType": "IfStatement",
														"src": "11152:96:13",
														"trueBody": {
															"id": 2919,
															"nodeType": "Block",
															"src": "11173:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2911,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2852,
																			"src": "11191:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2914,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:13"
																},
																{
																	"expression": {
																		"id": 2917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2915,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2858,
																			"src": "11221:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2918,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2921,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2852,
																	"src": "11265:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2935,
														"nodeType": "IfStatement",
														"src": "11261:93:13",
														"trueBody": {
															"id": 2934,
															"nodeType": "Block",
															"src": "11281:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2926,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2852,
																			"src": "11299:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2929,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:13"
																},
																{
																	"expression": {
																		"id": 2932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2930,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2858,
																			"src": "11328:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2933,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2936,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2852,
																	"src": "11371:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2950,
														"nodeType": "IfStatement",
														"src": "11367:93:13",
														"trueBody": {
															"id": 2949,
															"nodeType": "Block",
															"src": "11387:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2941,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2852,
																			"src": "11405:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2944,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:13"
																},
																{
																	"expression": {
																		"id": 2947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2945,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2858,
																			"src": "11434:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2948,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2951,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2852,
																	"src": "11477:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2965,
														"nodeType": "IfStatement",
														"src": "11473:93:13",
														"trueBody": {
															"id": 2964,
															"nodeType": "Block",
															"src": "11493:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2956,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2852,
																			"src": "11511:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2959,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:13"
																},
																{
																	"expression": {
																		"id": 2962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2960,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2858,
																			"src": "11540:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2963,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2966,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2852,
																	"src": "11583:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2976,
														"nodeType": "IfStatement",
														"src": "11579:64:13",
														"trueBody": {
															"id": 2975,
															"nodeType": "Block",
															"src": "11599:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2971,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2858,
																			"src": "11617:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2974,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2978,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2858,
													"src": "11669:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2856,
												"id": 2979,
												"nodeType": "Return",
												"src": "11662:13:13"
											}
										]
									},
									"documentation": {
										"id": 2850,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:13",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "10713:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:13"
									},
									"returnParameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "10751:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:13"
									},
									"scope": 3325,
									"src": "10699:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3015,
										"nodeType": "Block",
										"src": "11915:168:13",
										"statements": [
											{
												"id": 3014,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:13",
												"statements": [
													{
														"assignments": [
															2993
														],
														"declarations": [
															{
																"constant": false,
																"id": 2993,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3014,
																"src": "11949:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2992,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2997,
														"initialValue": {
															"arguments": [
																{
																	"id": 2995,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2984,
																	"src": "11971:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2994,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2981,
																	3016
																],
																"referencedDeclaration": 2981,
																"src": "11966:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2998,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2993,
																"src": "11998:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3000,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2987,
																						"src": "12025:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2282",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2282",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2999,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3324,
																					"src": "12008:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2282_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3001,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3006,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3004,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3002,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3003,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2993,
																						"src": "12043:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3005,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2984,
																					"src": "12052:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3011,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2991,
														"id": 3013,
														"nodeType": "Return",
														"src": "11991:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2982,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3016,
												"src": "11849:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3016,
												"src": "11864:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2282",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2986,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2985,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2282,
														"src": "11864:8:13"
													},
													"referencedDeclaration": 2282,
													"src": "11864:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2282",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:13"
									},
									"returnParameters": {
										"id": 2991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3016,
												"src": "11906:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:13"
									},
									"scope": 3325,
									"src": "11835:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3144,
										"nodeType": "Block",
										"src": "12276:854:13",
										"statements": [
											{
												"assignments": [
													3025
												],
												"declarations": [
													{
														"constant": false,
														"id": 3025,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3144,
														"src": "12286:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3024,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3027,
												"initialValue": {
													"hexValue": "30",
													"id": 3026,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:13"
											},
											{
												"id": 3141,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3028,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3019,
																"src": "12342:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3044,
														"nodeType": "IfStatement",
														"src": "12338:103:13",
														"trueBody": {
															"id": 3043,
															"nodeType": "Block",
															"src": "12361:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 3037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3033,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "12379:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3038,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:13"
																},
																{
																	"expression": {
																		"id": 3041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3039,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "12414:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3042,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3045,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3019,
																"src": "12458:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3061,
														"nodeType": "IfStatement",
														"src": "12454:103:13",
														"trueBody": {
															"id": 3060,
															"nodeType": "Block",
															"src": "12477:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 3054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3050,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "12495:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3055,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:13"
																},
																{
																	"expression": {
																		"id": 3058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3056,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "12530:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3059,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3062,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3019,
																"src": "12574:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3078,
														"nodeType": "IfStatement",
														"src": "12570:103:13",
														"trueBody": {
															"id": 3077,
															"nodeType": "Block",
															"src": "12593:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 3071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3067,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "12611:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3072,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:13"
																},
																{
																	"expression": {
																		"id": 3075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3073,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "12646:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3076,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3079,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3019,
																"src": "12690:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3095,
														"nodeType": "IfStatement",
														"src": "12686:100:13",
														"trueBody": {
															"id": 3094,
															"nodeType": "Block",
															"src": "12708:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 3088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3084,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "12726:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3089,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:13"
																},
																{
																	"expression": {
																		"id": 3092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3090,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "12760:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3093,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3096,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3019,
																"src": "12803:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3112,
														"nodeType": "IfStatement",
														"src": "12799:100:13",
														"trueBody": {
															"id": 3111,
															"nodeType": "Block",
															"src": "12821:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 3105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3101,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "12839:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3106,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:13"
																},
																{
																	"expression": {
																		"id": 3109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3107,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "12873:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3110,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3113,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3019,
																"src": "12916:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3129,
														"nodeType": "IfStatement",
														"src": "12912:100:13",
														"trueBody": {
															"id": 3128,
															"nodeType": "Block",
															"src": "12934:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 3122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3118,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "12952:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3123,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:13"
																},
																{
																	"expression": {
																		"id": 3126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3124,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "12986:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3127,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3019,
																"src": "13029:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3140,
														"nodeType": "IfStatement",
														"src": "13025:66:13",
														"trueBody": {
															"id": 3139,
															"nodeType": "Block",
															"src": "13047:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3135,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "13065:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3138,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3142,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3025,
													"src": "13117:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3023,
												"id": 3143,
												"nodeType": "Return",
												"src": "13110:13:13"
											}
										]
									},
									"documentation": {
										"id": 3017,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:13",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3019,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "12229:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:13"
									},
									"returnParameters": {
										"id": 3023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "12267:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:13"
									},
									"scope": 3325,
									"src": "12214:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3179,
										"nodeType": "Block",
										"src": "13365:170:13",
										"statements": [
											{
												"id": 3178,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:13",
												"statements": [
													{
														"assignments": [
															3157
														],
														"declarations": [
															{
																"constant": false,
																"id": 3157,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3178,
																"src": "13399:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3156,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3161,
														"initialValue": {
															"arguments": [
																{
																	"id": 3159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3148,
																	"src": "13422:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3158,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3145,
																	3180
																],
																"referencedDeclaration": 3145,
																"src": "13416:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3162,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3157,
																"src": "13449:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3164,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3151,
																						"src": "13476:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2282",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2282",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3163,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3324,
																					"src": "13459:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2282_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3168,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3167,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3157,
																						"src": "13495:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3169,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3148,
																					"src": "13504:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3175,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3155,
														"id": 3177,
														"nodeType": "Return",
														"src": "13442:76:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3146,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3148,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "13299:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "13314:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2282",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3149,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2282,
														"src": "13314:8:13"
													},
													"referencedDeclaration": 2282,
													"src": "13314:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2282",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:13"
									},
									"returnParameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "13356:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:13"
									},
									"scope": 3325,
									"src": "13284:251:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3266,
										"nodeType": "Block",
										"src": "13855:600:13",
										"statements": [
											{
												"assignments": [
													3189
												],
												"declarations": [
													{
														"constant": false,
														"id": 3189,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3266,
														"src": "13865:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3191,
												"initialValue": {
													"hexValue": "30",
													"id": 3190,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:13"
											},
											{
												"id": 3263,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3192,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3183,
																	"src": "13921:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3206,
														"nodeType": "IfStatement",
														"src": "13917:98:13",
														"trueBody": {
															"id": 3205,
															"nodeType": "Block",
															"src": "13939:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 3199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3197,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3183,
																			"src": "13957:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3200,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:13"
																},
																{
																	"expression": {
																		"id": 3203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3201,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3189,
																			"src": "13988:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3204,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3207,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3183,
																	"src": "14032:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3221,
														"nodeType": "IfStatement",
														"src": "14028:95:13",
														"trueBody": {
															"id": 3220,
															"nodeType": "Block",
															"src": "14049:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3212,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3183,
																			"src": "14067:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3215,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:13"
																},
																{
																	"expression": {
																		"id": 3218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3216,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3189,
																			"src": "14097:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3219,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3222,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3183,
																	"src": "14140:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3236,
														"nodeType": "IfStatement",
														"src": "14136:95:13",
														"trueBody": {
															"id": 3235,
															"nodeType": "Block",
															"src": "14157:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3227,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3183,
																			"src": "14175:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3230,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:13"
																},
																{
																	"expression": {
																		"id": 3233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3231,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3189,
																			"src": "14205:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3234,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3237,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3183,
																	"src": "14248:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3251,
														"nodeType": "IfStatement",
														"src": "14244:95:13",
														"trueBody": {
															"id": 3250,
															"nodeType": "Block",
															"src": "14265:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3242,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3183,
																			"src": "14283:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3245,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:13"
																},
																{
																	"expression": {
																		"id": 3248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3246,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3189,
																			"src": "14313:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3249,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3252,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3183,
																	"src": "14356:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3262,
														"nodeType": "IfStatement",
														"src": "14352:64:13",
														"trueBody": {
															"id": 3261,
															"nodeType": "Block",
															"src": "14372:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3257,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3189,
																			"src": "14390:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3260,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3264,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3189,
													"src": "14442:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3187,
												"id": 3265,
												"nodeType": "Return",
												"src": "14435:13:13"
											}
										]
									},
									"documentation": {
										"id": 3181,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:13",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3183,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3267,
												"src": "13808:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:13"
									},
									"returnParameters": {
										"id": 3187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3267,
												"src": "13846:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:13"
									},
									"scope": 3325,
									"src": "13792:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3304,
										"nodeType": "Block",
										"src": "14692:177:13",
										"statements": [
											{
												"id": 3303,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:13",
												"statements": [
													{
														"assignments": [
															3279
														],
														"declarations": [
															{
																"constant": false,
																"id": 3279,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3303,
																"src": "14726:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3278,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3283,
														"initialValue": {
															"arguments": [
																{
																	"id": 3281,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3270,
																	"src": "14750:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3280,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3267,
																	3305
																],
																"referencedDeclaration": 3267,
																"src": "14743:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3284,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3279,
																"src": "14777:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3286,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3273,
																						"src": "14804:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2282",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2282",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3285,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3324,
																					"src": "14787:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2282_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3293,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3288,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3291,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3289,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3279,
																									"src": "14823:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3290,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3292,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3294,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3270,
																					"src": "14838:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3300,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3277,
														"id": 3302,
														"nodeType": "Return",
														"src": "14770:82:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3268,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3270,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3305,
												"src": "14626:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3273,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3305,
												"src": "14641:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2282",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3271,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2282,
														"src": "14641:8:13"
													},
													"referencedDeclaration": 2282,
													"src": "14641:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2282",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:13"
									},
									"returnParameters": {
										"id": 3277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3305,
												"src": "14683:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:13"
									},
									"scope": 3325,
									"src": "14610:259:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3323,
										"nodeType": "Block",
										"src": "15067:48:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3316,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3309,
																	"src": "15090:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2282",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2282",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3314,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3313,
												"id": 3322,
												"nodeType": "Return",
												"src": "15077:31:13"
											}
										]
									},
									"documentation": {
										"id": 3306,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:13",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3309,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3324,
												"src": "15019:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2282",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3308,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3307,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2282,
														"src": "15019:8:13"
													},
													"referencedDeclaration": 2282,
													"src": "15019:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2282",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:13"
									},
									"returnParameters": {
										"id": 3313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3324,
												"src": "15061:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:13"
									},
									"scope": 3325,
									"src": "14993:122:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3326,
							"src": "203:14914:13",
							"usedErrors": [
								2277
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3430
						]
					},
					"id": 3431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3328,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3430,
							"linearizedBaseContracts": [
								3430
							],
							"name": "SignedMath",
							"nameLocation": "224:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3345,
										"nodeType": "Block",
										"src": "376:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3338,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "393:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3339,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3333,
															"src": "397:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3342,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3333,
														"src": "405:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:14",
													"trueExpression": {
														"id": 3341,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3331,
														"src": "401:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3337,
												"id": 3344,
												"nodeType": "Return",
												"src": "386:20:14"
											}
										]
									},
									"documentation": {
										"id": 3329,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3331,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3346,
												"src": "325:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3330,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3333,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3346,
												"src": "335:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3332,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:14"
									},
									"returnParameters": {
										"id": 3337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3346,
												"src": "368:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3335,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:14"
									},
									"scope": 3430,
									"src": "312:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3363,
										"nodeType": "Block",
										"src": "555:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3356,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3349,
															"src": "572:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3357,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3351,
															"src": "576:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3360,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3351,
														"src": "584:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:14",
													"trueExpression": {
														"id": 3359,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3349,
														"src": "580:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3355,
												"id": 3362,
												"nodeType": "Return",
												"src": "565:20:14"
											}
										]
									},
									"documentation": {
										"id": 3347,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3349,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "504:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3348,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3351,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "514:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3350,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:14"
									},
									"returnParameters": {
										"id": 3355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "547:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3353,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:14"
									},
									"scope": 3430,
									"src": "491:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3407,
										"nodeType": "Block",
										"src": "797:162:14",
										"statements": [
											{
												"assignments": [
													3375
												],
												"declarations": [
													{
														"constant": false,
														"id": 3375,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3407,
														"src": "859:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3374,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3388,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3376,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3367,
																	"src": "871:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3377,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3369,
																	"src": "875:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3379,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3380,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3367,
																				"src": "882:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3381,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3369,
																				"src": "886:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3383,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3386,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3389,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3375,
														"src": "911:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3394,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3375,
																						"src": "931:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3393,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3392,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3390,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3399,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3367,
																				"src": "945:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3400,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3369,
																				"src": "949:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3402,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3404,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3373,
												"id": 3406,
												"nodeType": "Return",
												"src": "904:48:14"
											}
										]
									},
									"documentation": {
										"id": 3365,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3367,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "746:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3366,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3369,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "756:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3368,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:14"
									},
									"returnParameters": {
										"id": 3373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "789:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3371,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:14"
									},
									"scope": 3430,
									"src": "729:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3428,
										"nodeType": "Block",
										"src": "1103:158:14",
										"statements": [
											{
												"id": 3427,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3418,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3411,
																			"src": "1228:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:14",
																		"subExpression": {
																			"id": 3422,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3411,
																			"src": "1242:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:14",
																	"trueExpression": {
																		"id": 3421,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3411,
																		"src": "1237:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3416,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3415,
														"id": 3426,
														"nodeType": "Return",
														"src": "1213:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3409,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3411,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3429,
												"src": "1061:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3410,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:14"
									},
									"returnParameters": {
										"id": 3415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3429,
												"src": "1094:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:14"
									},
									"scope": 3430,
									"src": "1048:213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3431,
							"src": "216:1047:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:14"
				},
				"id": 14
			},
			"contracts/BananaNFT.sol": {
				"ast": {
					"absolutePath": "contracts/BananaNFT.sol",
					"exportedSymbols": {
						"BananaNFT": [
							3764
						],
						"ERC721": [
							1371
						],
						"ERC721Enumerable": [
							1890
						],
						"IERC20": [
							362
						],
						"Ownable": [
							147
						]
					},
					"id": 3765,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3432,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3765,
							"sourceUnit": 363,
							"src": "62:70:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3433,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 362,
										"src": "70:6:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3765,
							"sourceUnit": 1372,
							"src": "134:71:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3435,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1371,
										"src": "142:6:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"id": 3438,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3765,
							"sourceUnit": 1891,
							"src": "207:102:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3437,
										"name": "ERC721Enumerable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1890,
										"src": "215:16:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3440,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3765,
							"sourceUnit": 148,
							"src": "311:67:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3439,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "319:7:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3441,
										"name": "ERC721Enumerable",
										"nameLocations": [
											"404:16:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1890,
										"src": "404:16:15"
									},
									"id": 3442,
									"nodeType": "InheritanceSpecifier",
									"src": "404:16:15"
								},
								{
									"baseName": {
										"id": 3443,
										"name": "Ownable",
										"nameLocations": [
											"422:7:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "422:7:15"
									},
									"id": 3444,
									"nodeType": "InheritanceSpecifier",
									"src": "422:7:15"
								}
							],
							"canonicalName": "BananaNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3764,
							"linearizedBaseContracts": [
								3764,
								147,
								1890,
								1922,
								1371,
								237,
								1950,
								1488,
								2259,
								2271,
								1980
							],
							"name": "BananaNFT",
							"nameLocation": "391:9:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3446,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "455:15:15",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "439:31:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3445,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "439:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 3449,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "493:5:15",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "479:19:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$362",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 3448,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3447,
											"name": "IERC20",
											"nameLocations": [
												"479:6:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 362,
											"src": "479:6:15"
										},
										"referencedDeclaration": 362,
										"src": "479:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$362",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6817c76c",
									"id": 3452,
									"mutability": "mutable",
									"name": "mintPrice",
									"nameLocation": "520:9:15",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "505:37:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3450,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "505:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3031",
										"id": 3451,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "532:10:15",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"value": "0.01"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e726e6b",
									"id": 3454,
									"mutability": "mutable",
									"name": "mintInterval",
									"nameLocation": "564:12:15",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "549:27:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3453,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "549:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "232e623e",
									"id": 3456,
									"mutability": "mutable",
									"name": "endWhitelistMintTime",
									"nameLocation": "598:20:15",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "583:35:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3455,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "583:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7080d6fc",
									"id": 3458,
									"mutability": "mutable",
									"name": "_isSaleActive",
									"nameLocation": "637:13:15",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "625:25:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 3457,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "625:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0bb78ec1",
									"id": 3462,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "701:10:15",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "659:52:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 3461,
										"keyName": "tokenId",
										"keyNameLocation": "675:7:15",
										"keyType": {
											"id": 3459,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "667:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "659:34:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3460,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "686:6:15",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3466,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "743:9:15",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "718:34:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3465,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3463,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "726:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "718:24:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3464,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "737:4:15",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "6aa71d18",
									"id": 3470,
									"mutability": "mutable",
									"name": "lastMintTime",
									"nameLocation": "794:12:15",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "759:47:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3469,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3467,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "767:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "759:27:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3468,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "778:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe",
									"id": 3476,
									"name": "Minted",
									"nameLocation": "821:6:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3472,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "844:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3476,
												"src": "828:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3474,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "858:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3476,
												"src": "850:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:39:15"
									},
									"src": "815:52:15"
								},
								{
									"body": {
										"id": 3509,
										"nodeType": "Block",
										"src": "1034:141:15",
										"statements": [
											{
												"expression": {
													"id": 3496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3494,
														"name": "mintInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3454,
														"src": "1045:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3495,
														"name": "_mintInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3478,
														"src": "1060:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1045:28:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3497,
												"nodeType": "ExpressionStatement",
												"src": "1045:28:15"
											},
											{
												"expression": {
													"id": 3500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3498,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3449,
														"src": "1084:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$362",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3499,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3481,
														"src": "1092:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$362",
															"typeString": "contract IERC20"
														}
													},
													"src": "1084:14:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$362",
														"typeString": "contract IERC20"
													}
												},
												"id": 3501,
												"nodeType": "ExpressionStatement",
												"src": "1084:14:15"
											},
											{
												"expression": {
													"id": 3507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3502,
														"name": "endWhitelistMintTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3456,
														"src": "1109:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3503,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1132:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1138:9:15",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1132:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 3505,
															"name": "whitelistMintTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3483,
															"src": "1150:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1132:35:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1109:58:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3508,
												"nodeType": "ExpressionStatement",
												"src": "1109:58:15"
											}
										]
									},
									"id": 3510,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "42616e616e614e4654",
													"id": 3486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "993:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_02a41919d5774304ebe4f37b4f48430650ef6bd630d41b5aa38bef71a1412e05",
														"typeString": "literal_string \"BananaNFT\""
													},
													"value": "BananaNFT"
												},
												{
													"hexValue": "424e4654",
													"id": 3487,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1006:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9e6745b3cfc67f270bc8e59f2a9eb2eade3f9ba1f67e62d12af610af4cc76070",
														"typeString": "literal_string \"BNFT\""
													},
													"value": "BNFT"
												}
											],
											"id": 3488,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3485,
												"name": "ERC721",
												"nameLocations": [
													"986:6:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1371,
												"src": "986:6:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "986:27:15"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 3490,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1022:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1026:6:15",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1022:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3492,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3489,
												"name": "Ownable",
												"nameLocations": [
													"1014:7:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1014:7:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1014:19:15"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3478,
												"mutability": "mutable",
												"name": "_mintInterval",
												"nameLocation": "905:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 3510,
												"src": "897:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3481,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "936:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3510,
												"src": "929:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$362",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 3480,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3479,
														"name": "IERC20",
														"nameLocations": [
															"929:6:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 362,
														"src": "929:6:15"
													},
													"referencedDeclaration": 362,
													"src": "929:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$362",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3483,
												"mutability": "mutable",
												"name": "whitelistMintTime",
												"nameLocation": "961:17:15",
												"nodeType": "VariableDeclaration",
												"scope": 3510,
												"src": "953:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:99:15"
									},
									"returnParameters": {
										"id": 3493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1034:0:15"
									},
									"scope": 3764,
									"src": "875:300:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										558
									],
									"body": {
										"id": 3530,
										"nodeType": "Block",
										"src": "1279:124:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3519,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3512,
															"src": "1304:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3518,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "1290:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 3520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1290:22:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3521,
												"nodeType": "ExpressionStatement",
												"src": "1290:22:15"
											},
											{
												"assignments": [
													3523
												],
												"declarations": [
													{
														"constant": false,
														"id": 3523,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1337:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 3530,
														"src": "1323:23:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 3522,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1323:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3527,
												"initialValue": {
													"baseExpression": {
														"id": 3524,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3462,
														"src": "1349:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 3526,
													"indexExpression": {
														"id": 3525,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3512,
														"src": "1360:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1349:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1323:45:15"
											},
											{
												"expression": {
													"id": 3528,
													"name": "_tokenURI",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3523,
													"src": "1386:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3517,
												"id": 3529,
												"nodeType": "Return",
												"src": "1379:16:15"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1192:8:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3514,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1246:8:15"
									},
									"parameters": {
										"id": 3513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1219:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3531,
												"src": "1211:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:33:15"
									},
									"returnParameters": {
										"id": 3517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3531,
												"src": "1264:13:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1264:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1263:15:15"
									},
									"scope": 3764,
									"src": "1183:220:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3577,
										"nodeType": "Block",
										"src": "1484:352:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3539,
															"name": "_isSaleActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3458,
															"src": "1503:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206973206e6f7420616374697665",
															"id": 3540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1518:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ea3d59c64f65d2cbfee983191fdda536e8ebff816db04c792e2170d3375ac3a",
																"typeString": "literal_string \"Sale is not active\""
															},
															"value": "Sale is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ea3d59c64f65d2cbfee983191fdda536e8ebff816db04c792e2170d3375ac3a",
																"typeString": "literal_string \"Sale is not active\""
															}
														],
														"id": 3538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1495:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1495:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3542,
												"nodeType": "ExpressionStatement",
												"src": "1495:44:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3544,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1558:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1562:5:15",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1558:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3546,
																"name": "mintPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "1571:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1558:22:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f7272656374204554482076616c7565",
															"id": 3548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1582:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f228330aaeab6837b31939dc3fb4d4d65288ff159222a88fcaf0fe99680d9aa8",
																"typeString": "literal_string \"Incorrect ETH value\""
															},
															"value": "Incorrect ETH value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f228330aaeab6837b31939dc3fb4d4d65288ff159222a88fcaf0fe99680d9aa8",
																"typeString": "literal_string \"Incorrect ETH value\""
															}
														],
														"id": 3543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1550:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1550:54:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3550,
												"nodeType": "ExpressionStatement",
												"src": "1550:54:15"
											},
											{
												"expression": {
													"id": 3552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": true,
													"src": "1617:17:15",
													"subExpression": {
														"id": 3551,
														"name": "_tokenIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3446,
														"src": "1619:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3553,
												"nodeType": "ExpressionStatement",
												"src": "1617:17:15"
											},
											{
												"assignments": [
													3555
												],
												"declarations": [
													{
														"constant": false,
														"id": 3555,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1653:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 3577,
														"src": "1645:15:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3554,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1645:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3557,
												"initialValue": {
													"id": 3556,
													"name": "_tokenIdCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3446,
													"src": "1663:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1645:33:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3559,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1699:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1703:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1699:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3561,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3555,
															"src": "1711:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3558,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															993,
															1019
														],
														"referencedDeclaration": 993,
														"src": "1689:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1689:30:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3563,
												"nodeType": "ExpressionStatement",
												"src": "1689:30:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3565,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3555,
															"src": "1743:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3566,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3533,
															"src": "1752:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3564,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3701,
														"src": "1730:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1730:26:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3568,
												"nodeType": "ExpressionStatement",
												"src": "1730:26:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3570,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1781:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1785:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1781:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3572,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3555,
															"src": "1793:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3569,
														"name": "Minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3476,
														"src": "1774:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:27:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3574,
												"nodeType": "EmitStatement",
												"src": "1769:32:15"
											},
											{
												"expression": {
													"id": 3575,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3555,
													"src": "1821:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3537,
												"id": 3576,
												"nodeType": "Return",
												"src": "1814:14:15"
											}
										]
									},
									"functionSelector": "537efe31",
									"id": 3578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "payToMint",
									"nameLocation": "1420:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3533,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "1444:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3578,
												"src": "1430:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3532,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1430:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1429:19:15"
									},
									"returnParameters": {
										"id": 3537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3578,
												"src": "1475:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:9:15"
									},
									"scope": 3764,
									"src": "1411:425:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3605,
										"nodeType": "Block",
										"src": "1910:183:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 3583,
															"name": "lastMintTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3470,
															"src": "1925:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3586,
														"indexExpression": {
															"expression": {
																"id": 3584,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1938:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1942:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1938:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1925:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1953:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1925:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3603,
													"nodeType": "Block",
													"src": "2005:81:15",
													"statements": [
														{
															"expression": {
																"id": 3601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3594,
																	"name": "nextMintTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3581,
																	"src": "2020:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 3595,
																			"name": "lastMintTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3470,
																			"src": "2035:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 3598,
																		"indexExpression": {
																			"expression": {
																				"id": 3596,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2048:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2052:6:15",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2048:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2035:24:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 3599,
																		"name": "mintInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3454,
																		"src": "2062:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2035:39:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2020:54:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3602,
															"nodeType": "ExpressionStatement",
															"src": "2020:54:15"
														}
													]
												},
												"id": 3604,
												"nodeType": "IfStatement",
												"src": "1921:165:15",
												"trueBody": {
													"id": 3593,
													"nodeType": "Block",
													"src": "1956:43:15",
													"statements": [
														{
															"expression": {
																"id": 3591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3589,
																	"name": "nextMintTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3581,
																	"src": "1971:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 3590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1986:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1971:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3592,
															"nodeType": "ExpressionStatement",
															"src": "1971:16:15"
														}
													]
												}
											}
										]
									},
									"functionSelector": "06dbc131",
									"id": 3606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "judgeMint",
									"nameLocation": "1853:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1862:2:15"
									},
									"returnParameters": {
										"id": 3582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3581,
												"mutability": "mutable",
												"name": "nextMintTime",
												"nameLocation": "1896:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3606,
												"src": "1888:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:22:15"
									},
									"scope": 3764,
									"src": "1844:249:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3674,
										"nodeType": "Block",
										"src": "2161:567:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3614,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2194:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2200:9:15",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2194:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3616,
																		"name": "lastMintTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3470,
																		"src": "2213:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3619,
																	"indexExpression": {
																		"expression": {
																			"id": 3617,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2226:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2230:6:15",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2226:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2213:24:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 3620,
																	"name": "mintInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3454,
																	"src": "2240:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2213:39:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2194:58:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207265616368206d696e742074696d65",
															"id": 3623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2267:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1099d1c7032e5298c84f4c6b860f4ab2795bab6ef1d36ad66089e1852a88ee1",
																"typeString": "literal_string \"Not reach mint time\""
															},
															"value": "Not reach mint time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1099d1c7032e5298c84f4c6b860f4ab2795bab6ef1d36ad66089e1852a88ee1",
																"typeString": "literal_string \"Not reach mint time\""
															}
														],
														"id": 3613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2172:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2172:127:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3625,
												"nodeType": "ExpressionStatement",
												"src": "2172:127:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3626,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2314:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2320:9:15",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2314:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3628,
														"name": "endWhitelistMintTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3456,
														"src": "2332:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2314:38:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3639,
												"nodeType": "IfStatement",
												"src": "2310:134:15",
												"trueBody": {
													"id": 3638,
													"nodeType": "Block",
													"src": "2354:90:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3631,
																			"name": "whitelist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3466,
																			"src": "2377:9:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 3634,
																		"indexExpression": {
																			"expression": {
																				"id": 3632,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2387:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2391:6:15",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2387:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2377:21:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4f6e6c792077686974656c69737420757365722063616e206d696e74",
																		"id": 3635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2400:30:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_79449f1ff9b8ee509d5ecc9044233c86b19b5620be95a941a12c60ec9839df1c",
																			"typeString": "literal_string \"Only whitelist user can mint\""
																		},
																		"value": "Only whitelist user can mint"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_79449f1ff9b8ee509d5ecc9044233c86b19b5620be95a941a12c60ec9839df1c",
																			"typeString": "literal_string \"Only whitelist user can mint\""
																		}
																	],
																	"id": 3630,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2369:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2369:62:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3637,
															"nodeType": "ExpressionStatement",
															"src": "2369:62:15"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": true,
													"src": "2456:17:15",
													"subExpression": {
														"id": 3640,
														"name": "_tokenIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3446,
														"src": "2458:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3642,
												"nodeType": "ExpressionStatement",
												"src": "2456:17:15"
											},
											{
												"assignments": [
													3644
												],
												"declarations": [
													{
														"constant": false,
														"id": 3644,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "2492:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 3674,
														"src": "2484:15:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2484:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3646,
												"initialValue": {
													"id": 3645,
													"name": "_tokenIdCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3446,
													"src": "2502:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2484:33:15"
											},
											{
												"expression": {
													"id": 3653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3647,
															"name": "lastMintTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3470,
															"src": "2528:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3650,
														"indexExpression": {
															"expression": {
																"id": 3648,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2541:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2545:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2541:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2528:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3651,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2555:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2561:9:15",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2555:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2528:42:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3654,
												"nodeType": "ExpressionStatement",
												"src": "2528:42:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3656,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2591:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2595:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2591:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3658,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3644,
															"src": "2603:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3655,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															993,
															1019
														],
														"referencedDeclaration": 993,
														"src": "2581:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:30:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3660,
												"nodeType": "ExpressionStatement",
												"src": "2581:30:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3662,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3644,
															"src": "2635:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3663,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3608,
															"src": "2644:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3661,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3701,
														"src": "2622:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2622:26:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3665,
												"nodeType": "ExpressionStatement",
												"src": "2622:26:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3667,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2673:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2677:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2673:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3669,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3644,
															"src": "2685:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3666,
														"name": "Minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3476,
														"src": "2666:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2666:27:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3671,
												"nodeType": "EmitStatement",
												"src": "2661:32:15"
											},
											{
												"expression": {
													"id": 3672,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3644,
													"src": "2713:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3612,
												"id": 3673,
												"nodeType": "Return",
												"src": "2706:14:15"
											}
										]
									},
									"functionSelector": "d85d3d27",
									"id": 3675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2110:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3608,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "2129:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "2115:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2115:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:19:15"
									},
									"returnParameters": {
										"id": 3612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "2152:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2152:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2151:9:15"
									},
									"scope": 3764,
									"src": "2101:627:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3686,
										"nodeType": "Block",
										"src": "2783:41:15",
										"statements": [
											{
												"expression": {
													"id": 3684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3680,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3466,
															"src": "2794:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3682,
														"indexExpression": {
															"id": 3681,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3677,
															"src": "2804:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2794:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2812:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2794:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3685,
												"nodeType": "ExpressionStatement",
												"src": "2794:22:15"
											}
										]
									},
									"functionSelector": "3004defe",
									"id": 3687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addToWhitelsit",
									"nameLocation": "2745:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3677,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2768:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3687,
												"src": "2760:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2760:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2759:14:15"
									},
									"returnParameters": {
										"id": 3679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2783:0:15"
									},
									"scope": 3764,
									"src": "2736:88:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3700,
										"nodeType": "Block",
										"src": "2938:50:15",
										"statements": [
											{
												"expression": {
													"id": 3698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3694,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3462,
															"src": "2949:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 3696,
														"indexExpression": {
															"id": 3695,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3689,
															"src": "2960:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2949:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3697,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3691,
														"src": "2971:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2949:31:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3699,
												"nodeType": "ExpressionStatement",
												"src": "2949:31:15"
											}
										]
									},
									"id": 3701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "2841:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3689,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2872:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3701,
												"src": "2864:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2864:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3691,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "2904:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3701,
												"src": "2890:23:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3690,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2890:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2853:67:15"
									},
									"returnParameters": {
										"id": 3693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2938:0:15"
									},
									"scope": 3764,
									"src": "2832:156:15",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3712,
										"nodeType": "Block",
										"src": "3063:47:15",
										"statements": [
											{
												"expression": {
													"id": 3710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3708,
														"name": "mintInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3454,
														"src": "3074:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3709,
														"name": "_mintInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3703,
														"src": "3089:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3074:28:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3711,
												"nodeType": "ExpressionStatement",
												"src": "3074:28:15"
											}
										]
									},
									"functionSelector": "cada2a18",
									"id": 3713,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3706,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3705,
												"name": "onlyOwner",
												"nameLocations": [
													"3053:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3053:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "3053:9:15"
										}
									],
									"name": "setMintInterval",
									"nameLocation": "3005:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3703,
												"mutability": "mutable",
												"name": "_mintInterval",
												"nameLocation": "3029:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 3713,
												"src": "3021:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3021:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3020:23:15"
									},
									"returnParameters": {
										"id": 3707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3063:0:15"
									},
									"scope": 3764,
									"src": "2996:114:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3723,
										"nodeType": "Block",
										"src": "3163:49:15",
										"statements": [
											{
												"expression": {
													"id": 3721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3718,
														"name": "_isSaleActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3458,
														"src": "3174:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3190:14:15",
														"subExpression": {
															"id": 3719,
															"name": "_isSaleActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3458,
															"src": "3191:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3174:30:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3722,
												"nodeType": "ExpressionStatement",
												"src": "3174:30:15"
											}
										]
									},
									"functionSelector": "de8b51e1",
									"id": 3724,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3716,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3715,
												"name": "onlyOwner",
												"nameLocations": [
													"3153:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3153:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "3153:9:15"
										}
									],
									"name": "flipSaleActive",
									"nameLocation": "3127:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3141:2:15"
									},
									"returnParameters": {
										"id": 3717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:0:15"
									},
									"scope": 3764,
									"src": "3118:94:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3735,
										"nodeType": "Block",
										"src": "3281:41:15",
										"statements": [
											{
												"expression": {
													"id": 3733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3731,
														"name": "mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3452,
														"src": "3292:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3732,
														"name": "_mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3726,
														"src": "3304:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3292:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3734,
												"nodeType": "ExpressionStatement",
												"src": "3292:22:15"
											}
										]
									},
									"functionSelector": "f4a0a528",
									"id": 3736,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3729,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3728,
												"name": "onlyOwner",
												"nameLocations": [
													"3271:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3271:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "3271:9:15"
										}
									],
									"name": "setMintPrice",
									"nameLocation": "3229:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3726,
												"mutability": "mutable",
												"name": "_mintPrice",
												"nameLocation": "3250:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3736,
												"src": "3242:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3242:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3241:20:15"
									},
									"returnParameters": {
										"id": 3730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3281:0:15"
									},
									"scope": 3764,
									"src": "3220:102:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3743,
										"nodeType": "Block",
										"src": "3386:41:15",
										"statements": [
											{
												"expression": {
													"id": 3741,
													"name": "_tokenIdCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3446,
													"src": "3404:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3740,
												"id": 3742,
												"nodeType": "Return",
												"src": "3397:22:15"
											}
										]
									},
									"functionSelector": "009a9b7b",
									"id": 3744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "currentTokenId",
									"nameLocation": "3339:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3353:2:15"
									},
									"returnParameters": {
										"id": 3740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3744,
												"src": "3377:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3377:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3376:9:15"
									},
									"scope": 3764,
									"src": "3330:97:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3762,
										"nodeType": "Block",
										"src": "3474:67:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3757,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3519:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_BananaNFT_$3764",
																			"typeString": "contract BananaNFT"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_BananaNFT_$3764",
																			"typeString": "contract BananaNFT"
																		}
																	],
																	"id": 3756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3511:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3755,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3511:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 3758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3511:13:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3525:7:15",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3511:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3751,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "3493:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3493:7:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3750,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3485:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3749,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3485:8:15",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3485:16:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3502:8:15",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3485:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3485:48:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3761,
												"nodeType": "ExpressionStatement",
												"src": "3485:48:15"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 3763,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3747,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3746,
												"name": "onlyOwner",
												"nameLocations": [
													"3464:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3464:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "3464:9:15"
										}
									],
									"name": "withdraw",
									"nameLocation": "3444:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3452:2:15"
									},
									"returnParameters": {
										"id": 3748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3474:0:15"
									},
									"scope": 3764,
									"src": "3435:106:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3765,
							"src": "382:3162:15",
							"usedErrors": [
								13,
								18,
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236,
								1543,
								1546
							],
							"usedEvents": [
								24,
								1387,
								1396,
								1405,
								3476
							]
						}
					],
					"src": "35:3511:15"
				},
				"id": 15
			}
		}
	}
}
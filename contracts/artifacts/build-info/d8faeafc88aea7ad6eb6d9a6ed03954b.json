{
	"id": "d8faeafc88aea7ad6eb6d9a6ed03954b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BananaToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.26;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {IUniswapV2Router02} from \"./interfaces/IUniswapV2Router02.sol\";\r\nimport {IUniswapV2Pair} from \"./interfaces/IUniswapV2Pair.sol\";\r\nimport {IUniswapV2Factory} from \"./interfaces/IUniswapV2Factory.sol\";\r\n\r\ncontract BananaToken is ERC20, Ownable {\r\n    //BSC: 0x10ED43C718714eb63d5aA57B78B54704E256024E\r\n    //MA: 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\r\n    //BSC testnet: 0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\r\n    address public constant DEAD = address(0xdead);\r\n    address public constant UNISWAP_V2_ROUTER =\r\n        0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3;\r\n\r\n    uint256 public taxRate = 5;\r\n    IUniswapV2Router02 public immutable uniswapV2Router;\r\n    address public uniswapV2Pair;\r\n    address private immutable marketingWallet;\r\n    bool private swapping;\r\n    uint256 private launchBlock;\r\n\r\n    mapping(address => bool) private _isExcludedFromFees;\r\n\r\n    event ExcludeFromFees(address indexed account, bool isExcluded);\r\n\r\n    constructor(\r\n        address _marketingWallet\r\n    ) ERC20(\"BananaToken\", \"BANA\") Ownable(msg.sender) {\r\n        marketingWallet = _marketingWallet;\r\n        launchBlock = block.number;\r\n        uniswapV2Router = IUniswapV2Router02(UNISWAP_V2_ROUTER);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(\r\n            address(this),\r\n            uniswapV2Router.WETH()\r\n        );\r\n        _approve(address(this), address(DEAD), type(uint256).max);\r\n        _isExcludedFromFees[owner()] = true;\r\n        _isExcludedFromFees[DEAD] = true;\r\n        _isExcludedFromFees[address(this)] = true;\r\n\r\n        _mint(msg.sender, 21e27);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function sendETH(address payable recipient, uint256 amount) internal {\r\n        require(\r\n            address(this).balance >= amount,\r\n            \"Address: insufficient balance\"\r\n        );\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(\r\n            success,\r\n            \"Address: unable to send value, recipient may have reverted\"\r\n        );\r\n    }\r\n\r\n    function transfer(\r\n        address to,\r\n        uint256 value\r\n    ) public override returns (bool) {\r\n        if (\r\n            (!_isExcludedFromFees[msg.sender] && !_isExcludedFromFees[to]) &&\r\n            (msg.sender == uniswapV2Pair || to == uniswapV2Pair)\r\n        ) {\r\n            _transferWithTax(msg.sender, to, value);\r\n        } else {\r\n            super.transfer(to, value);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) public override returns (bool) {\r\n        if (\r\n            (!_isExcludedFromFees[from] && !_isExcludedFromFees[to]) &&\r\n            (msg.sender == uniswapV2Pair || to == uniswapV2Pair)\r\n        ) {\r\n            _spendAllowance(from, msg.sender, value);\r\n            _transferWithTax(from, to, value);\r\n        } else {\r\n            super.transferFrom(from, to, value);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function _transferWithTax(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) private {\r\n        uint256 taxAmount = (amount * taxRate) / 100;\r\n        uint256 transferAmount = amount - taxAmount;\r\n        super._transfer(from, marketingWallet, taxAmount);\r\n        if (block.number <= launchBlock + 5000) {\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n\r\n            bool canSwap = contractTokenBalance > 0;\r\n\r\n            if (canSwap && !swapping && from != uniswapV2Pair) {\r\n                swapping = true;\r\n\r\n                address[] memory path = new address[](2);\r\n                path[0] = address(this);\r\n                path[1] = uniswapV2Router.WETH();\r\n\r\n                uniswapV2Router\r\n                    .swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                        contractTokenBalance,\r\n                        0, // accept any amount of ETH\r\n                        path,\r\n                        address(this),\r\n                        block.timestamp\r\n                    );\r\n\r\n                uint256 newBalance = address(this).balance;\r\n\r\n                if (newBalance > 0) {\r\n                    sendETH(payable(marketingWallet), newBalance);\r\n                }\r\n\r\n                swapping = false;\r\n            }\r\n        }\r\n        super._transfer(from, to, transferAmount);\r\n    }\r\n\r\n    function isExcludedFromFees(address account) public view returns (bool) {\r\n        return _isExcludedFromFees[account];\r\n    }\r\n\r\n    function setTaxRate(uint256 _taxRate) external onlyOwner {\r\n        require(_taxRate < 20, \"Invalid taxRate\");\r\n        taxRate = _taxRate;\r\n    }\r\n\r\n    function excludeFromFees(\r\n        address account,\r\n        bool excluded\r\n    ) external onlyOwner {\r\n        _isExcludedFromFees[account] = excluded;\r\n        emit ExcludeFromFees(account, excluded);\r\n    }\r\n}\r\n"
			},
			"contracts/interfaces/IUniswapV2Factory.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.26;\r\n\r\ninterface IUniswapV2Factory {\r\n    event PairCreated(\r\n        address indexed token0,\r\n        address indexed token1,\r\n        address pair,\r\n        uint256\r\n    );\r\n\r\n    function feeTo() external view returns (address);\r\n\r\n    function feeToSetter() external view returns (address);\r\n\r\n    function getPair(address tokenA, address tokenB)\r\n        external\r\n        view\r\n        returns (address pair);\r\n\r\n    function allPairs(uint256) external view returns (address pair);\r\n\r\n    function allPairsLength() external view returns (uint256);\r\n\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n\r\n    function setFeeTo(address) external;\r\n\r\n    function setFeeToSetter(address) external;\r\n}\r\n"
			},
			"contracts/interfaces/IUniswapV2Pair.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.26;\r\n\r\ninterface IUniswapV2Pair {\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    function name() external pure returns (string memory);\r\n\r\n    function symbol() external pure returns (string memory);\r\n\r\n    function decimals() external pure returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\r\n\r\n    event Swap(\r\n        address indexed sender,\r\n        uint256 amount0In,\r\n        uint256 amount1In,\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\r\n\r\n    function factory() external view returns (address);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function getReserves()\r\n        external\r\n        view\r\n        returns (\r\n            uint112 reserve0,\r\n            uint112 reserve1,\r\n            uint32 blockTimestampLast\r\n        );\r\n\r\n    function price0CumulativeLast() external view returns (uint256);\r\n\r\n    function price1CumulativeLast() external view returns (uint256);\r\n\r\n    function kLast() external view returns (uint256);\r\n\r\n    function mint(address to) external returns (uint256 liquidity);\r\n\r\n    function swap(\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address to,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    function skim(address to) external;\r\n\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}\r\n"
			},
			"contracts/interfaces/IUniswapV2Router02.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.26;\r\n\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity);\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BananaToken.sol": {
				"BananaToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_marketingWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isExcluded",
									"type": "bool"
								}
							],
							"name": "ExcludeFromFees",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEAD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNISWAP_V2_ROUTER",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "excluded",
									"type": "bool"
								}
							],
							"name": "excludeFromFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcludedFromFees",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_taxRate",
									"type": "uint256"
								}
							],
							"name": "setTaxRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Pair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BananaToken.sol\":410:5091  contract BananaToken is ERC20, Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/BananaToken.sol\":810:811  5 */\n  0x05\n    /* \"contracts/BananaToken.sol\":785:811  uint256 public taxRate = 5 */\n  0x06\n  sstore\n    /* \"contracts/BananaToken.sol\":1156:1819  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/BananaToken.sol\":1247:1257  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xa9, 0x2130b730b730aa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x42414e41)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3096:3147   */\n  mstore\n    /* \"#utility.yul\":3069:3087   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BananaToken.sol\":1270:1304  marketingWallet = _marketingWallet */\n  dup2\n  and\n  0xa0\n  mstore\n    /* \"contracts/BananaToken.sol\":1329:1341  block.number */\n  number\n    /* \"contracts/BananaToken.sol\":1315:1326  launchBlock */\n  0x08\n    /* \"contracts/BananaToken.sol\":1315:1341  launchBlock = block.number */\n  sstore\n    /* \"contracts/BananaToken.sol\":734:776  0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3 */\n  0x9ac64cc6e4415144c455bd8e4837fea55603e5c3\n    /* \"contracts/BananaToken.sol\":1352:1407  uniswapV2Router = IUniswapV2Router02(UNISWAP_V2_ROUTER) */\n  0x80\n  dup2\n  swap1\n  mstore\n    /* \"contracts/BananaToken.sol\":1452:1477  uniswapV2Router.factory() */\n  0x40\n  dup1\n  mload\n  shl(0xe0, 0xc45a0155)\n  dup2\n  mstore\n  swap1\n  mload\n    /* \"contracts/BananaToken.sol\":1452:1475  uniswapV2Router.factory */\n  0xc45a0155\n  swap2\n    /* \"contracts/BananaToken.sol\":1452:1477  uniswapV2Router.factory() */\n  0x04\n  dup1\n  dup3\n  add\n  swap3\n  0x20\n  swap3\n  swap1\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"contracts/BananaToken.sol\":734:776  0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3 */\n  dup7\n    /* \"contracts/BananaToken.sol\":1452:1477  uniswapV2Router.factory() */\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_19\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_19:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_20\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_20:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BananaToken.sol\":1434:1489  IUniswapV2Factory(uniswapV2Router.factory()).createPair */\n  and\n  0xc9c65396\n    /* \"contracts/BananaToken.sol\":1512:1516  this */\n  address\n    /* \"contracts/BananaToken.sol\":1532:1547  uniswapV2Router */\n  mload(0x80)\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BananaToken.sol\":1532:1552  uniswapV2Router.WETH */\n  and\n  0xad5c4648\n    /* \"contracts/BananaToken.sol\":1532:1554  uniswapV2Router.WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_22\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_22:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_23\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_23:\n    /* \"contracts/BananaToken.sol\":1434:1565  IUniswapV2Factory(uniswapV2Router.factory()).createPair(... */\n  mload(0x40)\n  not(sub(shl(0xe0, 0x01), 0x01))\n  0xe0\n  dup6\n  swap1\n  shl\n  and\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3350:3382   */\n  swap3\n  dup4\n  and\n    /* \"contracts/BananaToken.sol\":1434:1565  IUniswapV2Factory(uniswapV2Router.factory()).createPair(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3332:3383   */\n  mstore\n    /* \"#utility.yul\":3419:3451   */\n  swap2\n  and\n    /* \"#utility.yul\":3399:3417   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3392:3452   */\n  mstore\n    /* \"#utility.yul\":3305:3323   */\n  0x44\n  add\n    /* \"contracts/BananaToken.sol\":1434:1565  IUniswapV2Factory(uniswapV2Router.factory()).createPair(... */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_27\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_27:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_28\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_28:\n    /* \"contracts/BananaToken.sol\":1418:1431  uniswapV2Pair */\n  0x07\n    /* \"contracts/BananaToken.sol\":1418:1565  uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/BananaToken.sol\":1576:1633  _approve(address(this), address(DEAD), type(uint256).max) */\n  tag_29\n    /* \"contracts/BananaToken.sol\":1593:1597  this */\n  address\n    /* \"contracts/BananaToken.sol\":667:673  0xdead */\n  0xdead\n  not(0x00)\n    /* \"contracts/BananaToken.sol\":1576:1584  _approve */\n  tag_30\n    /* \"contracts/BananaToken.sol\":1576:1633  _approve(address(this), address(DEAD), type(uint256).max) */\n  jump\t// in\ntag_29:\n    /* \"contracts/BananaToken.sol\":1675:1679  true */\n  0x01\n    /* \"contracts/BananaToken.sol\":1644:1663  _isExcludedFromFees */\n  0x09\n    /* \"contracts/BananaToken.sol\":1644:1672  _isExcludedFromFees[owner()] */\n  0x00\n    /* \"contracts/BananaToken.sol\":1664:1671  owner() */\n  tag_31\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n  jump\n    /* \"contracts/BananaToken.sol\":1664:1671  owner() */\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BananaToken.sol\":1644:1672  _isExcludedFromFees[owner()] */\n  and\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  add\n  swap3\n  swap1\n  swap3\n  mstore\n  0x40\n  swap1\n  dup2\n  add\n  0x00\n  swap1\n  dup2\n  keccak256\n    /* \"contracts/BananaToken.sol\":1644:1679  _isExcludedFromFees[owner()] = true */\n  dup1\n  sload\n  swap5\n  iszero\n  iszero\n  not(0xff)\n  swap6\n  dup7\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/BananaToken.sol\":1690:1709  _isExcludedFromFees */\n  0x09\n    /* \"contracts/BananaToken.sol\":1690:1715  _isExcludedFromFees[DEAD] */\n  swap1\n  swap3\n  mstore\n  0x960b1051749987b45b5679007fff577a1c2f763ec21c15a6c5eb193075003785\n    /* \"contracts/BananaToken.sol\":1690:1722  _isExcludedFromFees[DEAD] = true */\n  dup1\n  sload\n  dup5\n  and\n    /* \"contracts/BananaToken.sol\":1644:1679  _isExcludedFromFees[owner()] = true */\n  0x01\n    /* \"contracts/BananaToken.sol\":1690:1722  _isExcludedFromFees[DEAD] = true */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/BananaToken.sol\":1761:1765  this */\n  address\n    /* \"contracts/BananaToken.sol\":1733:1767  _isExcludedFromFees[address(this)] */\n  dup4\n  mstore\n  swap2\n  keccak256\n    /* \"contracts/BananaToken.sol\":1733:1774  _isExcludedFromFees[address(this)] = true */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/BananaToken.sol\":1787:1811  _mint(msg.sender, 21e27) */\n  tag_33\n    /* \"contracts/BananaToken.sol\":1793:1803  msg.sender */\n  caller\n    /* \"contracts/BananaToken.sol\":1805:1810  21e27 */\n  0x43dacaf91c1a84ff08000000\n    /* \"contracts/BananaToken.sol\":1787:1792  _mint */\n  tag_34\n    /* \"contracts/BananaToken.sol\":1787:1811  _mint(msg.sender, 21e27) */\n  jump\t// in\ntag_33:\n    /* \"contracts/BananaToken.sol\":1156:1819  constructor(... */\n  pop\n    /* \"contracts/BananaToken.sol\":410:5091  contract BananaToken is ERC20, Ownable {... */\n  jump(tag_70)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n  tag_38\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n  tag_39\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n  jump\t// in\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_34:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3096:3147   */\n  mstore\n    /* \"#utility.yul\":3069:3087   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":2950:3153   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_44\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  tag_45\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  jump\t// in\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n  tag_47\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xe602df05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3096:3147   */\n  mstore\n    /* \"#utility.yul\":3069:3087   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n  tag_13\n    /* \"#utility.yul\":2950:3153   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\ntag_47:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n  mload(0x40)\n  shl(0xe1, 0x4a1406b1)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3096:3147   */\n  mstore\n    /* \"#utility.yul\":3069:3087   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n  tag_13\n    /* \"#utility.yul\":2950:3153   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\ntag_49:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n  dup1\n  dup6\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n  swap4\n  dup8\n  and\n  dup4\n  mstore\n  swap3\n  swap1\n  mstore\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n  dup3\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n  dup1\n  iszero\n  tag_51\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n  and\n  0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n  mload(0x40)\n  tag_52\n  swap2\n    /* \"#utility.yul\":3609:3634   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3597:3599   */\n  0x20\n    /* \"#utility.yul\":3582:3600   */\n  add\n  swap1\n    /* \"#utility.yul\":3463:3640   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\ntag_52:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\ntag_51:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_45:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_55\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_56\n  swap2\n  swap1\n  tag_57\n  jump\t// in\ntag_56:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_58\n  swap1\n  pop\n  jump\ntag_55:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_59\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4092:4124   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4074:4125   */\n  mstore\n    /* \"#utility.yul\":4141:4159   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":4134:4168   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":4184:4202   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":4177:4211   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4047:4065   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_13\n    /* \"#utility.yul\":3872:4217   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_59:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_58:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_62\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_63)\ntag_62:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_63:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_64\n  swap2\n    /* \"#utility.yul\":3609:3634   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3597:3599   */\n  0x20\n    /* \"#utility.yul\":3582:3600   */\n  add\n  swap1\n    /* \"#utility.yul\":3463:3640   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\ntag_64:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_72:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_73\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_73:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_65:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_66:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_76:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_77:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1470   */\ntag_68:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1464   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1090:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1088   */\n  0x00\n    /* \"#utility.yul\":1080:1096   */\n  mstore\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1131:1132   */\n  0x00\n    /* \"#utility.yul\":1121:1139   */\n  keccak256\n    /* \"#utility.yul\":1204:1206   */\n  0x1f\n    /* \"#utility.yul\":1192:1202   */\n  dup5\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1185:1186   */\n  0x05\n    /* \"#utility.yul\":1181:1208   */\n  shr\n    /* \"#utility.yul\":1175:1179   */\n  dup2\n    /* \"#utility.yul\":1171:1209   */\n  add\n    /* \"#utility.yul\":1240:1244   */\n  0x20\n    /* \"#utility.yul\":1228:1238   */\n  dup6\n    /* \"#utility.yul\":1225:1245   */\n  lt\n    /* \"#utility.yul\":1222:1269   */\n  iszero\n  tag_81\n  jumpi\n  pop\n    /* \"#utility.yul\":1263:1267   */\n  dup1\n    /* \"#utility.yul\":1222:1269   */\ntag_81:\n    /* \"#utility.yul\":1318:1320   */\n  0x1f\n    /* \"#utility.yul\":1313:1316   */\n  dup5\n    /* \"#utility.yul\":1309:1321   */\n  add\n    /* \"#utility.yul\":1306:1307   */\n  0x05\n    /* \"#utility.yul\":1302:1322   */\n  shr\n    /* \"#utility.yul\":1296:1300   */\n  dup3\n    /* \"#utility.yul\":1292:1323   */\n  add\n    /* \"#utility.yul\":1282:1323   */\n  swap2\n  pop\n    /* \"#utility.yul\":1373:1454   */\ntag_82:\n    /* \"#utility.yul\":1391:1393   */\n  dup2\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1394   */\n  lt\n    /* \"#utility.yul\":1373:1454   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1436:1452   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n    /* \"#utility.yul\":1373:1454   */\n  jump(tag_82)\ntag_84:\n    /* \"#utility.yul\":1377:1380   */\n  pop\n  pop\n    /* \"#utility.yul\":952:1470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:2945   */\ntag_9:\n    /* \"#utility.yul\":1766:1776   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1788:1818   */\n  dup2\n  gt\n    /* \"#utility.yul\":1785:1841   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1821:1839   */\n  tag_88\n  tag_65\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1850:1947   */\n  tag_89\n    /* \"#utility.yul\":1940:1946   */\n  dup2\n    /* \"#utility.yul\":1900:1938   */\n  tag_90\n    /* \"#utility.yul\":1932:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1937   */\n  sload\n    /* \"#utility.yul\":1900:1938   */\n  tag_66\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1894:1898   */\n  dup5\n    /* \"#utility.yul\":1850:1947   */\n  tag_68\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":2027:2029   */\n  0x1f\n    /* \"#utility.yul\":2016:2030   */\n  dup3\n  gt\n    /* \"#utility.yul\":2044:2045   */\n  0x01\n    /* \"#utility.yul\":2039:2688   */\n  dup2\n  eq\n  tag_92\n  jumpi\n    /* \"#utility.yul\":2732:2733   */\n  0x00\n    /* \"#utility.yul\":2749:2755   */\n  dup4\n    /* \"#utility.yul\":2746:2835   */\n  iszero\n  tag_93\n  jumpi\n  pop\n    /* \"#utility.yul\":2801:2820   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2795:2821   */\n  mload\n    /* \"#utility.yul\":2746:2835   */\ntag_93:\n  not(0x00)\n    /* \"#utility.yul\":1603:1604   */\n  0x03\n    /* \"#utility.yul\":1599:1610   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1595:1619   */\n  shr\n    /* \"#utility.yul\":1591:1620   */\n  not\n    /* \"#utility.yul\":1581:1621   */\n  and\n    /* \"#utility.yul\":1627:1628   */\n  0x01\n    /* \"#utility.yul\":1623:1634   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1578:1635   */\n  or\n    /* \"#utility.yul\":2848:2929   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2009:2939   */\n  jump(tag_84)\n    /* \"#utility.yul\":2039:2688   */\ntag_92:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2075:2095   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2193:2415   */\ntag_96:\n    /* \"#utility.yul\":2207:2214   */\n  dup3\n    /* \"#utility.yul\":2204:2205   */\n  dup2\n    /* \"#utility.yul\":2201:2215   */\n  lt\n    /* \"#utility.yul\":2193:2415   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n    /* \"#utility.yul\":2268:2310   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2396:2400   */\n  0x20\n    /* \"#utility.yul\":2381:2401   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2349:2350   */\n  0x01\n    /* \"#utility.yul\":2337:2351   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2223:2235   */\n  add\n    /* \"#utility.yul\":2193:2415   */\n  jump(tag_96)\ntag_98:\n    /* \"#utility.yul\":2197:2200   */\n  pop\n    /* \"#utility.yul\":2443:2449   */\n  dup5\n    /* \"#utility.yul\":2434:2441   */\n  dup3\n    /* \"#utility.yul\":2431:2450   */\n  lt\n    /* \"#utility.yul\":2428:2629   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":2504:2523   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2498:2524   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2587:2588   */\n  0x03\n    /* \"#utility.yul\":2583:2597   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2599:2602   */\n  0xf8\n    /* \"#utility.yul\":2579:2603   */\n  and\n    /* \"#utility.yul\":2575:2612   */\n  shr\n    /* \"#utility.yul\":2571:2613   */\n  not\n    /* \"#utility.yul\":2556:2614   */\n  and\n    /* \"#utility.yul\":2541:2615   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2428:2629   */\ntag_99:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2675:2676   */\n  0x01\n    /* \"#utility.yul\":2659:2673   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2655:2677   */\n  add\n    /* \"#utility.yul\":2642:2678   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1646:2945   */\n  jump\t// out\n    /* \"#utility.yul\":3645:3867   */\ntag_57:\n    /* \"#utility.yul\":3710:3719   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3731:3741   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3728:3861   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":3783:3793   */\n  0x4e487b71\n    /* \"#utility.yul\":3778:3781   */\n  0xe0\n    /* \"#utility.yul\":3774:3794   */\n  shl\n    /* \"#utility.yul\":3771:3772   */\n  0x00\n    /* \"#utility.yul\":3764:3795   */\n  mstore\n    /* \"#utility.yul\":3818:3822   */\n  0x11\n    /* \"#utility.yul\":3815:3816   */\n  0x04\n    /* \"#utility.yul\":3808:3823   */\n  mstore\n    /* \"#utility.yul\":3846:3850   */\n  0x24\n    /* \"#utility.yul\":3843:3844   */\n  0x00\n    /* \"#utility.yul\":3836:3851   */\n  revert\n    /* \"#utility.yul\":3728:3861   */\ntag_104:\n    /* \"#utility.yul\":3645:3867   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3872:4217   */\ntag_70:\n    /* \"contracts/BananaToken.sol\":410:5091  contract BananaToken is ERC20, Ownable {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x87bd18b67247df6baa7533339c49063efb5f43390eb1bcf9e95a3aa2cdb49408\")\n  0x00\n  assignImmutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/BananaToken.sol\":410:5091  contract BananaToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc0246668\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc6d69a30\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x771a3a1d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa82ed9ec\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x23b872dd\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x49bd5a5e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4fbee193\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x03fd2a45\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1694505e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BananaToken.sol\":628:674  address public constant DEAD = address(0xdead) */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n        /* \"contracts/BananaToken.sol\":667:673  0xdead */\n      0xdead\n        /* \"contracts/BananaToken.sol\":628:674  address public constant DEAD = address(0xdead) */\n      dup2\n      jump\n    tag_29:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/BananaToken.sol\":628:674  address public constant DEAD = address(0xdead) */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":1427:1441   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1420:1442   */\n      iszero\n        /* \"#utility.yul\":1402:1443   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1390:1392   */\n      0x20\n        /* \"#utility.yul\":1375:1393   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_31\n        /* \"#utility.yul\":1262:1449   */\n      jump\n        /* \"contracts/BananaToken.sol\":818:869  IUniswapV2Router02 public immutable uniswapV2Router */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_29\n      immutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_51:\n      mload(0x40)\n        /* \"#utility.yul\":1835:1860   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1823:1825   */\n      0x20\n        /* \"#utility.yul\":1808:1826   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_31\n        /* \"#utility.yul\":1689:1866   */\n      jump\n        /* \"contracts/BananaToken.sol\":2695:3201  function transferFrom(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_39\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":2526:2562   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2514:2516   */\n      0x20\n        /* \"#utility.yul\":2499:2517   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_31\n        /* \"#utility.yul\":2384:2568   */\n      jump\n        /* \"contracts/BananaToken.sol\":876:904  address public uniswapV2Pair */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      sload(0x07)\n      tag_29\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/BananaToken.sol\":4591:4717  function isExcludedFromFees(address account) public view returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_39\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BananaToken.sol\":4681:4709  _isExcludedFromFees[account] */\n      and\n        /* \"contracts/BananaToken.sol\":4657:4661  bool */\n      0x00\n        /* \"contracts/BananaToken.sol\":4681:4709  _isExcludedFromFees[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BananaToken.sol\":4681:4700  _isExcludedFromFees */\n      0x09\n        /* \"contracts/BananaToken.sol\":4681:4709  _isExcludedFromFees[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/BananaToken.sol\":4591:4717  function isExcludedFromFees(address account) public view returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_51\n      tag_78\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/BananaToken.sol\":785:811  uint256 public taxRate = 5 */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_51\n      sload(0x06)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_29)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_34\n      tag_94\n      jump\t// in\n        /* \"contracts/BananaToken.sol\":681:776  address public constant UNISWAP_V2_ROUTER =... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_29\n        /* \"contracts/BananaToken.sol\":734:776  0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3 */\n      0x9ac64cc6e4415144c455bd8e4837fea55603e5c3\n        /* \"contracts/BananaToken.sol\":681:776  address public constant UNISWAP_V2_ROUTER =... */\n      dup2\n      jump\n        /* \"contracts/BananaToken.sol\":2261:2687  function transfer(... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_39\n      tag_102\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"contracts/BananaToken.sol\":4879:5088  function excludeFromFees(... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_82\n      tag_107\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n        /* \"contracts/BananaToken.sol\":4725:4871  function setTaxRate(uint256 _taxRate) external onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_82\n      tag_112\n      calldatasize\n      0x04\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_51\n      tag_117\n      calldatasize\n      0x04\n      tag_118\n      jump\t// in\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_82\n      tag_123\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_127\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_135\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_132:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BananaToken.sol\":2695:3201  function transferFrom(... */\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BananaToken.sol\":2854:2879  _isExcludedFromFees[from] */\n      dup4\n      and\n        /* \"contracts/BananaToken.sol\":2817:2821  bool */\n      0x00\n        /* \"contracts/BananaToken.sol\":2854:2879  _isExcludedFromFees[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BananaToken.sol\":2854:2873  _isExcludedFromFees */\n      0x09\n        /* \"contracts/BananaToken.sol\":2854:2879  _isExcludedFromFees[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/BananaToken.sol\":2853:2879  !_isExcludedFromFees[from] */\n      iszero\n        /* \"contracts/BananaToken.sol\":2853:2907  !_isExcludedFromFees[from] && !_isExcludedFromFees[to] */\n      dup1\n      iszero\n      tag_139\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BananaToken.sol\":2884:2907  _isExcludedFromFees[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BananaToken.sol\":2884:2903  _isExcludedFromFees */\n      0x09\n        /* \"contracts/BananaToken.sol\":2884:2907  _isExcludedFromFees[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/BananaToken.sol\":2883:2907  !_isExcludedFromFees[to] */\n      iszero\n        /* \"contracts/BananaToken.sol\":2853:2907  !_isExcludedFromFees[from] && !_isExcludedFromFees[to] */\n    tag_139:\n        /* \"contracts/BananaToken.sol\":2852:2977  (!_isExcludedFromFees[from] && !_isExcludedFromFees[to]) &&... */\n      dup1\n      iszero\n      tag_141\n      jumpi\n      pop\n        /* \"contracts/BananaToken.sol\":2940:2953  uniswapV2Pair */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"contracts/BananaToken.sol\":2926:2936  msg.sender */\n      caller\n        /* \"contracts/BananaToken.sol\":2926:2953  msg.sender == uniswapV2Pair */\n      eq\n      dup1\n        /* \"contracts/BananaToken.sol\":2926:2976  msg.sender == uniswapV2Pair || to == uniswapV2Pair */\n      tag_141\n      jumpi\n      pop\n        /* \"contracts/BananaToken.sol\":2963:2976  uniswapV2Pair */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BananaToken.sol\":2957:2976  to == uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/BananaToken.sol\":2963:2976  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/BananaToken.sol\":2957:2976  to == uniswapV2Pair */\n      eq\n        /* \"contracts/BananaToken.sol\":2926:2976  msg.sender == uniswapV2Pair || to == uniswapV2Pair */\n    tag_141:\n        /* \"contracts/BananaToken.sol\":2834:3172  if (... */\n      iszero\n      tag_142\n      jumpi\n        /* \"contracts/BananaToken.sol\":3004:3044  _spendAllowance(from, msg.sender, value) */\n      tag_143\n        /* \"contracts/BananaToken.sol\":3020:3024  from */\n      dup5\n        /* \"contracts/BananaToken.sol\":3026:3036  msg.sender */\n      caller\n        /* \"contracts/BananaToken.sol\":3038:3043  value */\n      dup5\n        /* \"contracts/BananaToken.sol\":3004:3019  _spendAllowance */\n      tag_144\n        /* \"contracts/BananaToken.sol\":3004:3044  _spendAllowance(from, msg.sender, value) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/BananaToken.sol\":3059:3092  _transferWithTax(from, to, value) */\n      tag_145\n        /* \"contracts/BananaToken.sol\":3076:3080  from */\n      dup5\n        /* \"contracts/BananaToken.sol\":3082:3084  to */\n      dup5\n        /* \"contracts/BananaToken.sol\":3086:3091  value */\n      dup5\n        /* \"contracts/BananaToken.sol\":3059:3075  _transferWithTax */\n      tag_146\n        /* \"contracts/BananaToken.sol\":3059:3092  _transferWithTax(from, to, value) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/BananaToken.sol\":2834:3172  if (... */\n      jump(tag_147)\n    tag_142:\n        /* \"contracts/BananaToken.sol\":3125:3160  super.transferFrom(from, to, value) */\n      tag_148\n        /* \"contracts/BananaToken.sol\":3144:3148  from */\n      dup5\n        /* \"contracts/BananaToken.sol\":3150:3152  to */\n      dup5\n        /* \"contracts/BananaToken.sol\":3154:3159  value */\n      dup5\n        /* \"contracts/BananaToken.sol\":3125:3143  super.transferFrom */\n      tag_149\n        /* \"contracts/BananaToken.sol\":3125:3160  super.transferFrom(from, to, value) */\n      jump\t// in\n    tag_148:\n      pop\n        /* \"contracts/BananaToken.sol\":2834:3172  if (... */\n    tag_147:\n      pop\n        /* \"contracts/BananaToken.sol\":3189:3193  true */\n      0x01\n        /* \"contracts/BananaToken.sol\":2695:3201  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n        /* \"contracts/BananaToken.sol\":2261:2687  function transfer(... */\n    tag_103:\n        /* \"contracts/BananaToken.sol\":2413:2423  msg.sender */\n      caller\n        /* \"contracts/BananaToken.sol\":2356:2360  bool */\n      0x00\n        /* \"contracts/BananaToken.sol\":2393:2424  _isExcludedFromFees[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BananaToken.sol\":2393:2412  _isExcludedFromFees */\n      0x09\n        /* \"contracts/BananaToken.sol\":2393:2424  _isExcludedFromFees[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/BananaToken.sol\":2392:2424  !_isExcludedFromFees[msg.sender] */\n      iszero\n        /* \"contracts/BananaToken.sol\":2392:2452  !_isExcludedFromFees[msg.sender] && !_isExcludedFromFees[to] */\n      dup1\n      iszero\n      tag_167\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BananaToken.sol\":2429:2452  _isExcludedFromFees[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BananaToken.sol\":2429:2448  _isExcludedFromFees */\n      0x09\n        /* \"contracts/BananaToken.sol\":2429:2452  _isExcludedFromFees[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/BananaToken.sol\":2428:2452  !_isExcludedFromFees[to] */\n      iszero\n        /* \"contracts/BananaToken.sol\":2392:2452  !_isExcludedFromFees[msg.sender] && !_isExcludedFromFees[to] */\n    tag_167:\n        /* \"contracts/BananaToken.sol\":2391:2522  (!_isExcludedFromFees[msg.sender] && !_isExcludedFromFees[to]) &&... */\n      dup1\n      iszero\n      tag_169\n      jumpi\n      pop\n        /* \"contracts/BananaToken.sol\":2485:2498  uniswapV2Pair */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"contracts/BananaToken.sol\":2471:2481  msg.sender */\n      caller\n        /* \"contracts/BananaToken.sol\":2471:2498  msg.sender == uniswapV2Pair */\n      eq\n      dup1\n        /* \"contracts/BananaToken.sol\":2471:2521  msg.sender == uniswapV2Pair || to == uniswapV2Pair */\n      tag_169\n      jumpi\n      pop\n        /* \"contracts/BananaToken.sol\":2508:2521  uniswapV2Pair */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BananaToken.sol\":2502:2521  to == uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/BananaToken.sol\":2508:2521  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/BananaToken.sol\":2502:2521  to == uniswapV2Pair */\n      eq\n        /* \"contracts/BananaToken.sol\":2471:2521  msg.sender == uniswapV2Pair || to == uniswapV2Pair */\n    tag_169:\n        /* \"contracts/BananaToken.sol\":2373:2658  if (... */\n      iszero\n      tag_170\n      jumpi\n        /* \"contracts/BananaToken.sol\":2549:2588  _transferWithTax(msg.sender, to, value) */\n      tag_171\n        /* \"contracts/BananaToken.sol\":2566:2576  msg.sender */\n      caller\n        /* \"contracts/BananaToken.sol\":2578:2580  to */\n      dup5\n        /* \"contracts/BananaToken.sol\":2582:2587  value */\n      dup5\n        /* \"contracts/BananaToken.sol\":2549:2565  _transferWithTax */\n      tag_146\n        /* \"contracts/BananaToken.sol\":2549:2588  _transferWithTax(msg.sender, to, value) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/BananaToken.sol\":2373:2658  if (... */\n      jump(tag_172)\n    tag_170:\n        /* \"contracts/BananaToken.sol\":2621:2646  super.transfer(to, value) */\n      tag_173\n        /* \"contracts/BananaToken.sol\":2636:2638  to */\n      dup4\n        /* \"contracts/BananaToken.sol\":2640:2645  value */\n      dup4\n        /* \"contracts/BananaToken.sol\":2621:2635  super.transfer */\n      tag_174\n        /* \"contracts/BananaToken.sol\":2621:2646  super.transfer(to, value) */\n      jump\t// in\n    tag_173:\n      pop\n        /* \"contracts/BananaToken.sol\":2373:2658  if (... */\n    tag_172:\n      pop\n        /* \"contracts/BananaToken.sol\":2675:2679  true */\n      0x01\n        /* \"contracts/BananaToken.sol\":2261:2687  function transfer(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BananaToken.sol\":4879:5088  function excludeFromFees(... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BananaToken.sol\":4991:5019  _isExcludedFromFees[account] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BananaToken.sol\":4991:5010  _isExcludedFromFees */\n      0x09\n        /* \"contracts/BananaToken.sol\":4991:5019  _isExcludedFromFees[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/BananaToken.sol\":4991:5030  _isExcludedFromFees[account] = excluded */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup6\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/BananaToken.sol\":5046:5080  ExcludeFromFees(account, excluded) */\n      swap2\n      mload\n        /* \"#utility.yul\":1402:1443   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/BananaToken.sol\":5046:5080  ExcludeFromFees(account, excluded) */\n      0x9d8f7706ea1113d1a167b526eca956215946dd36cc7df39eb16180222d8b5df7\n      swap2\n        /* \"#utility.yul\":1375:1393   */\n      add\n        /* \"contracts/BananaToken.sol\":5046:5080  ExcludeFromFees(account, excluded) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/BananaToken.sol\":4879:5088  function excludeFromFees(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BananaToken.sol\":4725:4871  function setTaxRate(uint256 _taxRate) external onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_180:\n        /* \"contracts/BananaToken.sol\":4812:4814  20 */\n      0x14\n        /* \"contracts/BananaToken.sol\":4801:4809  _taxRate */\n      dup2\n        /* \"contracts/BananaToken.sol\":4801:4814  _taxRate < 20 */\n      lt\n        /* \"contracts/BananaToken.sol\":4793:4834  require(_taxRate < 20, \"Invalid taxRate\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4457:4459   */\n      0x20\n        /* \"contracts/BananaToken.sol\":4793:4834  require(_taxRate < 20, \"Invalid taxRate\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4439:4460   */\n      mstore\n        /* \"#utility.yul\":4496:4498   */\n      0x0f\n        /* \"#utility.yul\":4476:4494   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4469:4499   */\n      mstore\n      shl(0x88, 0x496e76616c69642074617852617465)\n        /* \"#utility.yul\":4515:4533   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4508:4553   */\n      mstore\n        /* \"#utility.yul\":4570:4588   */\n      0x64\n      add\n        /* \"contracts/BananaToken.sol\":4793:4834  require(_taxRate < 20, \"Invalid taxRate\") */\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/BananaToken.sol\":4845:4852  taxRate */\n      0x06\n        /* \"contracts/BananaToken.sol\":4845:4863  taxRate = _taxRate */\n      sstore\n        /* \"contracts/BananaToken.sol\":4725:4871  function setTaxRate(uint256 _taxRate) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_183\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4819:4851   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4801:4852   */\n      mstore\n        /* \"#utility.yul\":4868:4886   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4861:4895   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4911:4929   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4904:4938   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4774:4792   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_183\n        /* \"#utility.yul\":4599:4944   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BananaToken.sol\":3209:4583  function _transferWithTax(... */\n    tag_146:\n        /* \"contracts/BananaToken.sol\":3330:3347  uint256 taxAmount */\n      0x00\n        /* \"contracts/BananaToken.sol\":3371:3374  100 */\n      0x64\n        /* \"contracts/BananaToken.sol\":3360:3367  taxRate */\n      sload(0x06)\n        /* \"contracts/BananaToken.sol\":3351:3357  amount */\n      dup4\n        /* \"contracts/BananaToken.sol\":3351:3367  amount * taxRate */\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"contracts/BananaToken.sol\":3350:3374  (amount * taxRate) / 100 */\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"contracts/BananaToken.sol\":3330:3374  uint256 taxAmount = (amount * taxRate) / 100 */\n      swap1\n      pop\n        /* \"contracts/BananaToken.sol\":3385:3407  uint256 transferAmount */\n      0x00\n        /* \"contracts/BananaToken.sol\":3410:3428  amount - taxAmount */\n      tag_208\n        /* \"contracts/BananaToken.sol\":3330:3374  uint256 taxAmount = (amount * taxRate) / 100 */\n      dup3\n        /* \"contracts/BananaToken.sol\":3410:3416  amount */\n      dup5\n        /* \"contracts/BananaToken.sol\":3410:3428  amount - taxAmount */\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"contracts/BananaToken.sol\":3385:3428  uint256 transferAmount = amount - taxAmount */\n      swap1\n      pop\n        /* \"contracts/BananaToken.sol\":3439:3488  super._transfer(from, marketingWallet, taxAmount) */\n      tag_210\n        /* \"contracts/BananaToken.sol\":3455:3459  from */\n      dup6\n        /* \"contracts/BananaToken.sol\":3461:3476  marketingWallet */\n      immutable(\"0x87bd18b67247df6baa7533339c49063efb5f43390eb1bcf9e95a3aa2cdb49408\")\n        /* \"contracts/BananaToken.sol\":3478:3487  taxAmount */\n      dup5\n        /* \"contracts/BananaToken.sol\":3439:3454  super._transfer */\n      tag_211\n        /* \"contracts/BananaToken.sol\":3439:3488  super._transfer(from, marketingWallet, taxAmount) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/BananaToken.sol\":3519:3530  launchBlock */\n      sload(0x08)\n        /* \"contracts/BananaToken.sol\":3519:3537  launchBlock + 5000 */\n      tag_212\n      swap1\n        /* \"contracts/BananaToken.sol\":3533:3537  5000 */\n      0x1388\n        /* \"contracts/BananaToken.sol\":3519:3537  launchBlock + 5000 */\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"contracts/BananaToken.sol\":3503:3515  block.number */\n      number\n        /* \"contracts/BananaToken.sol\":3503:3537  block.number <= launchBlock + 5000 */\n      gt\n        /* \"contracts/BananaToken.sol\":3499:4524  if (block.number <= launchBlock + 5000) {... */\n      tag_214\n      jumpi\n        /* \"contracts/BananaToken.sol\":3603:3607  this */\n      address\n        /* \"contracts/BananaToken.sol\":3554:3582  uint256 contractTokenBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/BananaToken.sol\":3641:3665  contractTokenBalance > 0 */\n      dup1\n      iszero\n      dup1\n      iszero\n      swap1\n      dup2\n      swap1\n        /* \"contracts/BananaToken.sol\":3686:3706  canSwap && !swapping */\n      tag_216\n      jumpi\n      pop\n        /* \"contracts/BananaToken.sol\":3698:3706  swapping */\n      sload(0x07)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BananaToken.sol\":3697:3706  !swapping */\n      iszero\n        /* \"contracts/BananaToken.sol\":3686:3706  canSwap && !swapping */\n    tag_216:\n        /* \"contracts/BananaToken.sol\":3686:3731  canSwap && !swapping && from != uniswapV2Pair */\n      dup1\n      iszero\n      tag_217\n      jumpi\n      pop\n        /* \"contracts/BananaToken.sol\":3718:3731  uniswapV2Pair */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BananaToken.sol\":3710:3731  from != uniswapV2Pair */\n      dup9\n      dup2\n      and\n        /* \"contracts/BananaToken.sol\":3718:3731  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/BananaToken.sol\":3710:3731  from != uniswapV2Pair */\n      eq\n      iszero\n        /* \"contracts/BananaToken.sol\":3686:3731  canSwap && !swapping && from != uniswapV2Pair */\n    tag_217:\n        /* \"contracts/BananaToken.sol\":3682:4513  if (canSwap && !swapping && from != uniswapV2Pair) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"contracts/BananaToken.sol\":3752:3760  swapping */\n      0x07\n        /* \"contracts/BananaToken.sol\":3752:3767  swapping = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"contracts/BananaToken.sol\":3812:3828  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/BananaToken.sol\":3826:3827  2 */\n      0x02\n        /* \"contracts/BananaToken.sol\":3812:3828  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n      0x00\n      swap3\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/BananaToken.sol\":3788:3828  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/BananaToken.sol\":3865:3869  this */\n      address\n        /* \"contracts/BananaToken.sol\":3847:3851  path */\n      dup2\n        /* \"contracts/BananaToken.sol\":3852:3853  0 */\n      0x00\n        /* \"contracts/BananaToken.sol\":3847:3854  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_224\n      jumpi\n      tag_224\n      tag_225\n      jump\t// in\n    tag_224:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/BananaToken.sol\":3847:3870  path[0] = address(this) */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/BananaToken.sol\":3899:3914  uniswapV2Router */\n      immutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BananaToken.sol\":3899:3919  uniswapV2Router.WETH */\n      and\n      0xad5c4648\n        /* \"contracts/BananaToken.sol\":3899:3921  uniswapV2Router.WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_227\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"contracts/BananaToken.sol\":3889:3893  path */\n      dup2\n        /* \"contracts/BananaToken.sol\":3894:3895  1 */\n      0x01\n        /* \"contracts/BananaToken.sol\":3889:3896  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_231\n      jumpi\n      tag_231\n      tag_225\n      jump\t// in\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BananaToken.sol\":3889:3921  path[1] = uniswapV2Router.WETH() */\n      swap3\n      dup4\n      and\n        /* \"contracts/BananaToken.sol\":3889:3896  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/BananaToken.sol\":3889:3921  path[1] = uniswapV2Router.WETH() */\n      mstore\n        /* \"contracts/BananaToken.sol\":3942:4269  uniswapV2Router... */\n      mload(0x40)\n      shl(0xe0, 0x791ac947)\n      dup2\n      mstore\n        /* \"contracts/BananaToken.sol\":3942:3957  uniswapV2Router */\n      immutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n        /* \"contracts/BananaToken.sol\":3942:4030  uniswapV2Router... */\n      swap1\n      swap2\n      and\n      swap1\n      0x791ac947\n      swap1\n        /* \"contracts/BananaToken.sol\":3942:4269  uniswapV2Router... */\n      tag_232\n      swap1\n        /* \"contracts/BananaToken.sol\":4057:4077  contractTokenBalance */\n      dup7\n      swap1\n        /* \"contracts/BananaToken.sol\":4104:4105  0 */\n      0x00\n      swap1\n        /* \"contracts/BananaToken.sol\":4160:4164  path */\n      dup7\n      swap1\n        /* \"contracts/BananaToken.sol\":4199:4203  this */\n      address\n      swap1\n        /* \"contracts/BananaToken.sol\":4231:4246  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/BananaToken.sol\":3942:4269  uniswapV2Router... */\n      0x04\n      add\n      tag_233\n      jump\t// in\n    tag_232:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_236:\n      pop\n        /* \"contracts/BananaToken.sol\":4311:4332  address(this).balance */\n      selfbalance\n      swap3\n      pop\n      pop\n        /* \"contracts/BananaToken.sol\":4357:4371  newBalance > 0 */\n      dup2\n      iszero\n      swap1\n      pop\n        /* \"contracts/BananaToken.sol\":4353:4461  if (newBalance > 0) {... */\n      tag_238\n      jumpi\n        /* \"contracts/BananaToken.sol\":4396:4441  sendETH(payable(marketingWallet), newBalance) */\n      tag_238\n        /* \"contracts/BananaToken.sol\":4412:4427  marketingWallet */\n      immutable(\"0x87bd18b67247df6baa7533339c49063efb5f43390eb1bcf9e95a3aa2cdb49408\")\n        /* \"contracts/BananaToken.sol\":4430:4440  newBalance */\n      dup3\n        /* \"contracts/BananaToken.sol\":4396:4403  sendETH */\n      tag_239\n        /* \"contracts/BananaToken.sol\":4396:4441  sendETH(payable(marketingWallet), newBalance) */\n      jump\t// in\n    tag_238:\n      pop\n      pop\n        /* \"contracts/BananaToken.sol\":4481:4489  swapping */\n      0x07\n        /* \"contracts/BananaToken.sol\":4481:4497  swapping = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"contracts/BananaToken.sol\":3682:4513  if (canSwap && !swapping && from != uniswapV2Pair) {... */\n    tag_218:\n        /* \"contracts/BananaToken.sol\":3539:4524  {... */\n      pop\n      pop\n        /* \"contracts/BananaToken.sol\":3499:4524  if (block.number <= launchBlock + 5000) {... */\n    tag_214:\n        /* \"contracts/BananaToken.sol\":4534:4575  super._transfer(from, to, transferAmount) */\n      tag_240\n        /* \"contracts/BananaToken.sol\":4550:4554  from */\n      dup6\n        /* \"contracts/BananaToken.sol\":4556:4558  to */\n      dup6\n        /* \"contracts/BananaToken.sol\":4560:4574  transferAmount */\n      dup4\n        /* \"contracts/BananaToken.sol\":4534:4549  super._transfer */\n      tag_211\n        /* \"contracts/BananaToken.sol\":4534:4575  super._transfer(from, to, transferAmount) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/BananaToken.sol\":3319:4583  {... */\n      pop\n      pop\n        /* \"contracts/BananaToken.sol\":3209:4583  function _transferWithTax(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_244:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_183\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_135\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_183\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_183\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_261\n      swap2\n        /* \"#utility.yul\":1835:1860   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1823:1825   */\n      0x20\n        /* \"#utility.yul\":1808:1826   */\n      add\n      swap1\n        /* \"#utility.yul\":1689:1866   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_183\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_263:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_183\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"contracts/BananaToken.sol\":1864:2253  function sendETH(address payable recipient, uint256 amount) internal {... */\n    tag_239:\n        /* \"contracts/BananaToken.sol\":1991:1997  amount */\n      dup1\n        /* \"contracts/BananaToken.sol\":1966:1987  address(this).balance */\n      selfbalance\n        /* \"contracts/BananaToken.sol\":1966:1997  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"contracts/BananaToken.sol\":1944:2054  require(... */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7425:7427   */\n      0x20\n        /* \"contracts/BananaToken.sol\":1944:2054  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7407:7428   */\n      mstore\n        /* \"#utility.yul\":7464:7466   */\n      0x1d\n        /* \"#utility.yul\":7444:7462   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7437:7467   */\n      mstore\n        /* \"#utility.yul\":7503:7534   */\n      0x416464726573733a20696e73756666696369656e742062616c616e6365000000\n        /* \"#utility.yul\":7483:7501   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7476:7535   */\n      mstore\n        /* \"#utility.yul\":7552:7570   */\n      0x64\n      add\n        /* \"contracts/BananaToken.sol\":1944:2054  require(... */\n      tag_183\n        /* \"#utility.yul\":7223:7576   */\n      jump\n        /* \"contracts/BananaToken.sol\":1944:2054  require(... */\n    tag_270:\n        /* \"contracts/BananaToken.sol\":2068:2080  bool success */\n      0x00\n        /* \"contracts/BananaToken.sol\":2086:2095  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BananaToken.sol\":2086:2100  recipient.call */\n      and\n        /* \"contracts/BananaToken.sol\":2108:2114  amount */\n      dup3\n        /* \"contracts/BananaToken.sol\":2086:2119  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_277\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_276)\n    tag_277:\n      0x60\n      swap2\n      pop\n    tag_276:\n      pop\n        /* \"contracts/BananaToken.sol\":2067:2119  (bool success, ) = recipient.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/BananaToken.sol\":2152:2159  success */\n      dup1\n        /* \"contracts/BananaToken.sol\":2130:2245  require(... */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7993:7995   */\n      0x20\n        /* \"contracts/BananaToken.sol\":2130:2245  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7975:7996   */\n      mstore\n        /* \"#utility.yul\":8032:8034   */\n      0x3a\n        /* \"#utility.yul\":8012:8030   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8005:8035   */\n      mstore\n        /* \"#utility.yul\":8071:8105   */\n      0x416464726573733a20756e61626c6520746f2073656e642076616c75652c2072\n        /* \"#utility.yul\":8051:8069   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8044:8106   */\n      mstore\n        /* \"#utility.yul\":8142:8170   */\n      0x6563697069656e74206d61792068617665207265766572746564000000000000\n        /* \"#utility.yul\":8122:8140   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8115:8171   */\n      mstore\n        /* \"#utility.yul\":8188:8207   */\n      0x84\n      add\n        /* \"contracts/BananaToken.sol\":2130:2245  require(... */\n      tag_183\n        /* \"#utility.yul\":7791:8213   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_268:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_283\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_283:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_284\n      swap1\n      pop\n      jump\n    tag_282:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4819:4851   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4801:4852   */\n      mstore\n        /* \"#utility.yul\":4868:4886   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4861:4895   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4911:4929   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4904:4938   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4774:4792   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_183\n        /* \"#utility.yul\":4599:4944   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_285:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_288)\n    tag_287:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_289\n      swap2\n        /* \"#utility.yul\":1835:1860   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1823:1825   */\n      0x20\n        /* \"#utility.yul\":1808:1826   */\n      add\n      swap1\n        /* \"#utility.yul\":1689:1866   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:749   */\n    tag_37:\n        /* \"#utility.yul\":371:373   */\n      0x20\n        /* \"#utility.yul\":360:369   */\n      dup2\n        /* \"#utility.yul\":353:374   */\n      mstore\n        /* \"#utility.yul\":334:338   */\n      0x00\n        /* \"#utility.yul\":403:409   */\n      dup3\n        /* \"#utility.yul\":397:410   */\n      mload\n        /* \"#utility.yul\":446:452   */\n      dup1\n        /* \"#utility.yul\":441:443   */\n      0x20\n        /* \"#utility.yul\":430:439   */\n      dup5\n        /* \"#utility.yul\":426:444   */\n      add\n        /* \"#utility.yul\":419:453   */\n      mstore\n        /* \"#utility.yul\":471:472   */\n      0x00\n        /* \"#utility.yul\":481:621   */\n    tag_295:\n        /* \"#utility.yul\":495:501   */\n      dup2\n        /* \"#utility.yul\":492:493   */\n      dup2\n        /* \"#utility.yul\":489:502   */\n      lt\n        /* \"#utility.yul\":481:621   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":606:608   */\n      0x20\n        /* \"#utility.yul\":590:604   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":586:609   */\n      dup2\n      add\n        /* \"#utility.yul\":580:610   */\n      mload\n        /* \"#utility.yul\":575:577   */\n      0x40\n        /* \"#utility.yul\":556:573   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":552:578   */\n      add\n        /* \"#utility.yul\":545:611   */\n      mstore\n        /* \"#utility.yul\":510:520   */\n      add\n        /* \"#utility.yul\":481:621   */\n      jump(tag_295)\n    tag_297:\n        /* \"#utility.yul\":485:488   */\n      pop\n        /* \"#utility.yul\":670:671   */\n      0x00\n        /* \"#utility.yul\":665:667   */\n      0x40\n        /* \"#utility.yul\":656:662   */\n      dup3\n        /* \"#utility.yul\":645:654   */\n      dup6\n        /* \"#utility.yul\":641:663   */\n      add\n        /* \"#utility.yul\":637:668   */\n      add\n        /* \"#utility.yul\":630:672   */\n      mstore\n        /* \"#utility.yul\":740:742   */\n      0x40\n        /* \"#utility.yul\":733:735   */\n      0x1f\n        /* \"#utility.yul\":729:736   */\n      not\n        /* \"#utility.yul\":724:726   */\n      0x1f\n        /* \"#utility.yul\":716:722   */\n      dup4\n        /* \"#utility.yul\":712:727   */\n      add\n        /* \"#utility.yul\":708:737   */\n      and\n        /* \"#utility.yul\":697:706   */\n      dup5\n        /* \"#utility.yul\":693:738   */\n      add\n        /* \"#utility.yul\":689:743   */\n      add\n        /* \"#utility.yul\":681:743   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":222:749   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":754:885   */\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":829:860   */\n      dup2\n      and\n        /* \"#utility.yul\":819:861   */\n      dup2\n      eq\n        /* \"#utility.yul\":809:879   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":875:876   */\n      0x00\n        /* \"#utility.yul\":872:873   */\n      dup1\n        /* \"#utility.yul\":865:877   */\n      revert\n        /* \"#utility.yul\":890:1257   */\n    tag_41:\n        /* \"#utility.yul\":958:964   */\n      0x00\n        /* \"#utility.yul\":966:972   */\n      dup1\n        /* \"#utility.yul\":1019:1021   */\n      0x40\n        /* \"#utility.yul\":1007:1016   */\n      dup4\n        /* \"#utility.yul\":998:1005   */\n      dup6\n        /* \"#utility.yul\":994:1017   */\n      sub\n        /* \"#utility.yul\":990:1022   */\n      slt\n        /* \"#utility.yul\":987:1039   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":1035:1036   */\n      0x00\n        /* \"#utility.yul\":1032:1033   */\n      dup1\n        /* \"#utility.yul\":1025:1037   */\n      revert\n        /* \"#utility.yul\":987:1039   */\n    tag_301:\n        /* \"#utility.yul\":1074:1083   */\n      dup3\n        /* \"#utility.yul\":1061:1084   */\n      calldataload\n        /* \"#utility.yul\":1093:1124   */\n      tag_302\n        /* \"#utility.yul\":1118:1123   */\n      dup2\n        /* \"#utility.yul\":1093:1124   */\n      tag_290\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":1143:1148   */\n      swap5\n        /* \"#utility.yul\":1221:1223   */\n      0x20\n        /* \"#utility.yul\":1206:1224   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1193:1225   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":890:1257   */\n      jump\t// out\n        /* \"#utility.yul\":1871:2379   */\n    tag_58:\n        /* \"#utility.yul\":1948:1954   */\n      0x00\n        /* \"#utility.yul\":1956:1962   */\n      dup1\n        /* \"#utility.yul\":1964:1970   */\n      0x00\n        /* \"#utility.yul\":2017:2019   */\n      0x60\n        /* \"#utility.yul\":2005:2014   */\n      dup5\n        /* \"#utility.yul\":1996:2003   */\n      dup7\n        /* \"#utility.yul\":1992:2015   */\n      sub\n        /* \"#utility.yul\":1988:2020   */\n      slt\n        /* \"#utility.yul\":1985:2037   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":2033:2034   */\n      0x00\n        /* \"#utility.yul\":2030:2031   */\n      dup1\n        /* \"#utility.yul\":2023:2035   */\n      revert\n        /* \"#utility.yul\":1985:2037   */\n    tag_307:\n        /* \"#utility.yul\":2072:2081   */\n      dup4\n        /* \"#utility.yul\":2059:2082   */\n      calldataload\n        /* \"#utility.yul\":2091:2122   */\n      tag_308\n        /* \"#utility.yul\":2116:2121   */\n      dup2\n        /* \"#utility.yul\":2091:2122   */\n      tag_290\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2141:2146   */\n      swap3\n      pop\n        /* \"#utility.yul\":2198:2200   */\n      0x20\n        /* \"#utility.yul\":2183:2201   */\n      dup5\n      add\n        /* \"#utility.yul\":2170:2202   */\n      calldataload\n        /* \"#utility.yul\":2211:2244   */\n      tag_309\n        /* \"#utility.yul\":2170:2202   */\n      dup2\n        /* \"#utility.yul\":2211:2244   */\n      tag_290\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1871:2379   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2263:2270   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2343:2345   */\n      0x40\n        /* \"#utility.yul\":2328:2346   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2315:2347   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1871:2379   */\n      jump\t// out\n        /* \"#utility.yul\":2573:2820   */\n    tag_73:\n        /* \"#utility.yul\":2632:2638   */\n      0x00\n        /* \"#utility.yul\":2685:2687   */\n      0x20\n        /* \"#utility.yul\":2673:2682   */\n      dup3\n        /* \"#utility.yul\":2664:2671   */\n      dup5\n        /* \"#utility.yul\":2660:2683   */\n      sub\n        /* \"#utility.yul\":2656:2688   */\n      slt\n        /* \"#utility.yul\":2653:2705   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":2701:2702   */\n      0x00\n        /* \"#utility.yul\":2698:2699   */\n      dup1\n        /* \"#utility.yul\":2691:2703   */\n      revert\n        /* \"#utility.yul\":2653:2705   */\n    tag_312:\n        /* \"#utility.yul\":2740:2749   */\n      dup2\n        /* \"#utility.yul\":2727:2750   */\n      calldataload\n        /* \"#utility.yul\":2759:2790   */\n      tag_313\n        /* \"#utility.yul\":2784:2789   */\n      dup2\n        /* \"#utility.yul\":2759:2790   */\n      tag_290\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2809:2814   */\n      swap4\n        /* \"#utility.yul\":2573:2820   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2825:3241   */\n    tag_108:\n        /* \"#utility.yul\":2890:2896   */\n      0x00\n        /* \"#utility.yul\":2898:2904   */\n      dup1\n        /* \"#utility.yul\":2951:2953   */\n      0x40\n        /* \"#utility.yul\":2939:2948   */\n      dup4\n        /* \"#utility.yul\":2930:2937   */\n      dup6\n        /* \"#utility.yul\":2926:2949   */\n      sub\n        /* \"#utility.yul\":2922:2954   */\n      slt\n        /* \"#utility.yul\":2919:2971   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":2967:2968   */\n      0x00\n        /* \"#utility.yul\":2964:2965   */\n      dup1\n        /* \"#utility.yul\":2957:2969   */\n      revert\n        /* \"#utility.yul\":2919:2971   */\n    tag_315:\n        /* \"#utility.yul\":3006:3015   */\n      dup3\n        /* \"#utility.yul\":2993:3016   */\n      calldataload\n        /* \"#utility.yul\":3025:3056   */\n      tag_316\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3025:3056   */\n      tag_290\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3075:3080   */\n      swap2\n      pop\n        /* \"#utility.yul\":3132:3134   */\n      0x20\n        /* \"#utility.yul\":3117:3135   */\n      dup4\n      add\n        /* \"#utility.yul\":3104:3136   */\n      calldataload\n        /* \"#utility.yul\":3174:3189   */\n      dup1\n      iszero\n        /* \"#utility.yul\":3167:3190   */\n      iszero\n        /* \"#utility.yul\":3155:3191   */\n      dup2\n      eq\n        /* \"#utility.yul\":3145:3209   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":3205:3206   */\n      0x00\n        /* \"#utility.yul\":3202:3203   */\n      dup1\n        /* \"#utility.yul\":3195:3207   */\n      revert\n        /* \"#utility.yul\":3145:3209   */\n    tag_317:\n        /* \"#utility.yul\":3228:3235   */\n      dup1\n        /* \"#utility.yul\":3218:3235   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2825:3241   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3246:3472   */\n    tag_113:\n        /* \"#utility.yul\":3305:3311   */\n      0x00\n        /* \"#utility.yul\":3358:3360   */\n      0x20\n        /* \"#utility.yul\":3346:3355   */\n      dup3\n        /* \"#utility.yul\":3337:3344   */\n      dup5\n        /* \"#utility.yul\":3333:3356   */\n      sub\n        /* \"#utility.yul\":3329:3361   */\n      slt\n        /* \"#utility.yul\":3326:3378   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":3374:3375   */\n      0x00\n        /* \"#utility.yul\":3371:3372   */\n      dup1\n        /* \"#utility.yul\":3364:3376   */\n      revert\n        /* \"#utility.yul\":3326:3378   */\n    tag_319:\n      pop\n        /* \"#utility.yul\":3419:3442   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3246:3472   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3477:3865   */\n    tag_118:\n        /* \"#utility.yul\":3545:3551   */\n      0x00\n        /* \"#utility.yul\":3553:3559   */\n      dup1\n        /* \"#utility.yul\":3606:3608   */\n      0x40\n        /* \"#utility.yul\":3594:3603   */\n      dup4\n        /* \"#utility.yul\":3585:3592   */\n      dup6\n        /* \"#utility.yul\":3581:3604   */\n      sub\n        /* \"#utility.yul\":3577:3609   */\n      slt\n        /* \"#utility.yul\":3574:3626   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":3622:3623   */\n      0x00\n        /* \"#utility.yul\":3619:3620   */\n      dup1\n        /* \"#utility.yul\":3612:3624   */\n      revert\n        /* \"#utility.yul\":3574:3626   */\n    tag_321:\n        /* \"#utility.yul\":3661:3670   */\n      dup3\n        /* \"#utility.yul\":3648:3671   */\n      calldataload\n        /* \"#utility.yul\":3680:3711   */\n      tag_322\n        /* \"#utility.yul\":3705:3710   */\n      dup2\n        /* \"#utility.yul\":3680:3711   */\n      tag_290\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3730:3735   */\n      swap2\n      pop\n        /* \"#utility.yul\":3787:3789   */\n      0x20\n        /* \"#utility.yul\":3772:3790   */\n      dup4\n      add\n        /* \"#utility.yul\":3759:3791   */\n      calldataload\n        /* \"#utility.yul\":3800:3833   */\n      tag_317\n        /* \"#utility.yul\":3759:3791   */\n      dup2\n        /* \"#utility.yul\":3800:3833   */\n      tag_290\n      jump\t// in\n        /* \"#utility.yul\":3870:4250   */\n    tag_127:\n        /* \"#utility.yul\":3949:3950   */\n      0x01\n        /* \"#utility.yul\":3945:3957   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3992:4004   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4013:4074   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":4067:4071   */\n      0x7f\n        /* \"#utility.yul\":4059:4065   */\n      dup3\n        /* \"#utility.yul\":4055:4072   */\n      and\n        /* \"#utility.yul\":4045:4072   */\n      swap2\n      pop\n        /* \"#utility.yul\":4013:4074   */\n    tag_325:\n        /* \"#utility.yul\":4120:4122   */\n      0x20\n        /* \"#utility.yul\":4112:4118   */\n      dup3\n        /* \"#utility.yul\":4109:4123   */\n      lt\n        /* \"#utility.yul\":4089:4107   */\n      dup2\n        /* \"#utility.yul\":4086:4124   */\n      sub\n        /* \"#utility.yul\":4083:4244   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":4166:4176   */\n      0x4e487b71\n        /* \"#utility.yul\":4161:4164   */\n      0xe0\n        /* \"#utility.yul\":4157:4177   */\n      shl\n        /* \"#utility.yul\":4154:4155   */\n      0x00\n        /* \"#utility.yul\":4147:4178   */\n      mstore\n        /* \"#utility.yul\":4201:4205   */\n      0x22\n        /* \"#utility.yul\":4198:4199   */\n      0x04\n        /* \"#utility.yul\":4191:4206   */\n      mstore\n        /* \"#utility.yul\":4229:4233   */\n      0x24\n        /* \"#utility.yul\":4226:4227   */\n      0x00\n        /* \"#utility.yul\":4219:4234   */\n      revert\n        /* \"#utility.yul\":4083:4244   */\n    tag_326:\n      pop\n        /* \"#utility.yul\":3870:4250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4949:5076   */\n    tag_291:\n        /* \"#utility.yul\":5010:5020   */\n      0x4e487b71\n        /* \"#utility.yul\":5005:5008   */\n      0xe0\n        /* \"#utility.yul\":5001:5021   */\n      shl\n        /* \"#utility.yul\":4998:4999   */\n      0x00\n        /* \"#utility.yul\":4991:5022   */\n      mstore\n        /* \"#utility.yul\":5041:5045   */\n      0x11\n        /* \"#utility.yul\":5038:5039   */\n      0x04\n        /* \"#utility.yul\":5031:5046   */\n      mstore\n        /* \"#utility.yul\":5065:5069   */\n      0x24\n        /* \"#utility.yul\":5062:5063   */\n      0x00\n        /* \"#utility.yul\":5055:5070   */\n      revert\n        /* \"#utility.yul\":5081:5249   */\n    tag_205:\n        /* \"#utility.yul\":5154:5163   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5185:5194   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5202:5217   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5196:5218   */\n      dup5\n      eq\n        /* \"#utility.yul\":5182:5219   */\n      or\n        /* \"#utility.yul\":5172:5243   */\n      tag_132\n      jumpi\n        /* \"#utility.yul\":5223:5241   */\n      tag_132\n      tag_291\n      jump\t// in\n        /* \"#utility.yul\":5254:5471   */\n    tag_207:\n        /* \"#utility.yul\":5294:5295   */\n      0x00\n        /* \"#utility.yul\":5320:5321   */\n      dup3\n        /* \"#utility.yul\":5310:5442   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":5364:5374   */\n      0x4e487b71\n        /* \"#utility.yul\":5359:5362   */\n      0xe0\n        /* \"#utility.yul\":5355:5375   */\n      shl\n        /* \"#utility.yul\":5352:5353   */\n      0x00\n        /* \"#utility.yul\":5345:5376   */\n      mstore\n        /* \"#utility.yul\":5399:5403   */\n      0x12\n        /* \"#utility.yul\":5396:5397   */\n      0x04\n        /* \"#utility.yul\":5389:5404   */\n      mstore\n        /* \"#utility.yul\":5427:5431   */\n      0x24\n        /* \"#utility.yul\":5424:5425   */\n      0x00\n        /* \"#utility.yul\":5417:5432   */\n      revert\n        /* \"#utility.yul\":5310:5442   */\n    tag_334:\n      pop\n        /* \"#utility.yul\":5456:5465   */\n      div\n      swap1\n        /* \"#utility.yul\":5254:5471   */\n      jump\t// out\n        /* \"#utility.yul\":5476:5604   */\n    tag_209:\n        /* \"#utility.yul\":5543:5552   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5564:5575   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5561:5598   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":5578:5596   */\n      tag_132\n      tag_291\n      jump\t// in\n        /* \"#utility.yul\":5609:5734   */\n    tag_213:\n        /* \"#utility.yul\":5674:5683   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5695:5705   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5692:5728   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":5708:5726   */\n      tag_132\n      tag_291\n      jump\t// in\n        /* \"#utility.yul\":5871:5998   */\n    tag_225:\n        /* \"#utility.yul\":5932:5942   */\n      0x4e487b71\n        /* \"#utility.yul\":5927:5930   */\n      0xe0\n        /* \"#utility.yul\":5923:5943   */\n      shl\n        /* \"#utility.yul\":5920:5921   */\n      0x00\n        /* \"#utility.yul\":5913:5944   */\n      mstore\n        /* \"#utility.yul\":5963:5967   */\n      0x32\n        /* \"#utility.yul\":5960:5961   */\n      0x04\n        /* \"#utility.yul\":5953:5968   */\n      mstore\n        /* \"#utility.yul\":5987:5991   */\n      0x24\n        /* \"#utility.yul\":5984:5985   */\n      0x00\n        /* \"#utility.yul\":5977:5992   */\n      revert\n        /* \"#utility.yul\":6003:6254   */\n    tag_229:\n        /* \"#utility.yul\":6073:6079   */\n      0x00\n        /* \"#utility.yul\":6126:6128   */\n      0x20\n        /* \"#utility.yul\":6114:6123   */\n      dup3\n        /* \"#utility.yul\":6105:6112   */\n      dup5\n        /* \"#utility.yul\":6101:6124   */\n      sub\n        /* \"#utility.yul\":6097:6129   */\n      slt\n        /* \"#utility.yul\":6094:6146   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":6142:6143   */\n      0x00\n        /* \"#utility.yul\":6139:6140   */\n      dup1\n        /* \"#utility.yul\":6132:6144   */\n      revert\n        /* \"#utility.yul\":6094:6146   */\n    tag_344:\n        /* \"#utility.yul\":6174:6183   */\n      dup2\n        /* \"#utility.yul\":6168:6184   */\n      mload\n        /* \"#utility.yul\":6193:6224   */\n      tag_313\n        /* \"#utility.yul\":6218:6223   */\n      dup2\n        /* \"#utility.yul\":6193:6224   */\n      tag_290\n      jump\t// in\n        /* \"#utility.yul\":6259:7218   */\n    tag_233:\n        /* \"#utility.yul\":6521:6525   */\n      0x00\n        /* \"#utility.yul\":6569:6572   */\n      0xa0\n        /* \"#utility.yul\":6558:6567   */\n      dup3\n        /* \"#utility.yul\":6554:6573   */\n      add\n        /* \"#utility.yul\":6600:6606   */\n      dup8\n        /* \"#utility.yul\":6589:6598   */\n      dup4\n        /* \"#utility.yul\":6582:6607   */\n      mstore\n        /* \"#utility.yul\":6643:6649   */\n      dup7\n        /* \"#utility.yul\":6638:6640   */\n      0x20\n        /* \"#utility.yul\":6627:6636   */\n      dup5\n        /* \"#utility.yul\":6623:6641   */\n      add\n        /* \"#utility.yul\":6616:6650   */\n      mstore\n        /* \"#utility.yul\":6686:6689   */\n      0xa0\n        /* \"#utility.yul\":6681:6683   */\n      0x40\n        /* \"#utility.yul\":6670:6679   */\n      dup5\n        /* \"#utility.yul\":6666:6684   */\n      add\n        /* \"#utility.yul\":6659:6690   */\n      mstore\n        /* \"#utility.yul\":6710:6716   */\n      dup1\n        /* \"#utility.yul\":6745:6751   */\n      dup7\n        /* \"#utility.yul\":6739:6752   */\n      mload\n        /* \"#utility.yul\":6776:6782   */\n      dup1\n        /* \"#utility.yul\":6768:6774   */\n      dup4\n        /* \"#utility.yul\":6761:6783   */\n      mstore\n        /* \"#utility.yul\":6814:6817   */\n      0xc0\n        /* \"#utility.yul\":6803:6812   */\n      dup6\n        /* \"#utility.yul\":6799:6818   */\n      add\n        /* \"#utility.yul\":6792:6818   */\n      swap2\n      pop\n        /* \"#utility.yul\":6853:6855   */\n      0x20\n        /* \"#utility.yul\":6845:6851   */\n      dup9\n        /* \"#utility.yul\":6841:6856   */\n      add\n        /* \"#utility.yul\":6827:6856   */\n      swap3\n      pop\n        /* \"#utility.yul\":6874:6875   */\n      0x00\n        /* \"#utility.yul\":6884:7079   */\n    tag_347:\n        /* \"#utility.yul\":6898:6904   */\n      dup2\n        /* \"#utility.yul\":6895:6896   */\n      dup2\n        /* \"#utility.yul\":6892:6905   */\n      lt\n        /* \"#utility.yul\":6884:7079   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":6963:6976   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6959:6998   */\n      and\n        /* \"#utility.yul\":6947:6999   */\n      dup4\n      mstore\n        /* \"#utility.yul\":7028:7030   */\n      0x20\n        /* \"#utility.yul\":7054:7069   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":7019:7031   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":6995:6996   */\n      0x01\n        /* \"#utility.yul\":6913:6922   */\n      add\n        /* \"#utility.yul\":6884:7079   */\n      jump(tag_347)\n    tag_349:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7135:7167   */\n      swap6\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":7130:7132   */\n      0x60\n        /* \"#utility.yul\":7115:7133   */\n      dup5\n      add\n        /* \"#utility.yul\":7108:7168   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":7199:7202   */\n      0x80\n        /* \"#utility.yul\":7184:7203   */\n      add\n        /* \"#utility.yul\":7177:7212   */\n      mstore\n        /* \"#utility.yul\":7096:7099   */\n      swap4\n        /* \"#utility.yul\":6259:7218   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b212ce07202bcf6ea3146e4a83775f1d4ee32086f642f076ee90afd024ea043e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1072": {
									"entryPoint": null,
									"id": 1072,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 847,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 921,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 865,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 766,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1132,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1547,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4219:10",
										"nodeType": "YulBlock",
										"src": "0:4219:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:10",
													"nodeType": "YulBlock",
													"src": "95:209:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:10",
																"nodeType": "YulBlock",
																"src": "141:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:10",
																					"nodeType": "YulLiteral",
																					"src": "150:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:10",
																					"nodeType": "YulLiteral",
																					"src": "153:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:10"
																			},
																			"nativeSrc": "143:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:10"
																		},
																		"nativeSrc": "143:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:10"
																		},
																		"nativeSrc": "112:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:10",
																		"nodeType": "YulLiteral",
																		"src": "137:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:10"
																},
																"nativeSrc": "108:32:10",
																"nodeType": "YulFunctionCall",
																"src": "108:32:10"
															},
															"nativeSrc": "105:52:10",
															"nodeType": "YulIf",
															"src": "105:52:10"
														},
														{
															"nativeSrc": "166:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:10"
																},
																"nativeSrc": "179:16:10",
																"nodeType": "YulFunctionCall",
																"src": "179:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:10",
																	"nodeType": "YulTypedName",
																	"src": "170:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:10",
																"nodeType": "YulBlock",
																"src": "258:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:10",
																					"nodeType": "YulLiteral",
																					"src": "267:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:10",
																					"nodeType": "YulLiteral",
																					"src": "270:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:10"
																			},
																			"nativeSrc": "260:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:10"
																		},
																		"nativeSrc": "260:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:10",
																										"nodeType": "YulLiteral",
																										"src": "243:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:10",
																										"nodeType": "YulLiteral",
																										"src": "248:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:10"
																								},
																								"nativeSrc": "239:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:10",
																								"nodeType": "YulLiteral",
																								"src": "252:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:10"
																						},
																						"nativeSrc": "235:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:10"
																				},
																				"nativeSrc": "224:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:10"
																		},
																		"nativeSrc": "214:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:10"
																},
																"nativeSrc": "207:50:10",
																"nodeType": "YulFunctionCall",
																"src": "207:50:10"
															},
															"nativeSrc": "204:70:10",
															"nodeType": "YulIf",
															"src": "204:70:10"
														},
														{
															"nativeSrc": "283:15:10",
															"nodeType": "YulAssignment",
															"src": "283:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:10",
																"nodeType": "YulIdentifier",
																"src": "293:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:10",
														"nodeType": "YulTypedName",
														"src": "61:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:10",
														"nodeType": "YulTypedName",
														"src": "72:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:10",
														"nodeType": "YulTypedName",
														"src": "84:6:10",
														"type": ""
													}
												],
												"src": "14:290:10"
											},
											{
												"body": {
													"nativeSrc": "341:95:10",
													"nodeType": "YulBlock",
													"src": "341:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:10",
																		"nodeType": "YulLiteral",
																		"src": "358:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:10",
																				"nodeType": "YulLiteral",
																				"src": "365:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:10",
																				"nodeType": "YulLiteral",
																				"src": "370:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:10"
																		},
																		"nativeSrc": "361:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:10"
																},
																"nativeSrc": "351:31:10",
																"nodeType": "YulFunctionCall",
																"src": "351:31:10"
															},
															"nativeSrc": "351:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:10",
																		"nodeType": "YulLiteral",
																		"src": "398:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:10",
																		"nodeType": "YulLiteral",
																		"src": "401:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:10"
																},
																"nativeSrc": "391:15:10",
																"nodeType": "YulFunctionCall",
																"src": "391:15:10"
															},
															"nativeSrc": "391:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:10",
																		"nodeType": "YulLiteral",
																		"src": "422:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:10",
																		"nodeType": "YulLiteral",
																		"src": "425:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:10"
																},
																"nativeSrc": "415:15:10",
																"nodeType": "YulFunctionCall",
																"src": "415:15:10"
															},
															"nativeSrc": "415:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:10"
											},
											{
												"body": {
													"nativeSrc": "496:325:10",
													"nodeType": "YulBlock",
													"src": "496:325:10",
													"statements": [
														{
															"nativeSrc": "506:22:10",
															"nodeType": "YulAssignment",
															"src": "506:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:10",
																		"nodeType": "YulLiteral",
																		"src": "520:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:10"
																},
																"nativeSrc": "516:12:10",
																"nodeType": "YulFunctionCall",
																"src": "516:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:10"
																}
															]
														},
														{
															"nativeSrc": "537:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:10",
																		"nodeType": "YulLiteral",
																		"src": "573:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:10"
																},
																"nativeSrc": "563:12:10",
																"nodeType": "YulFunctionCall",
																"src": "563:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:10",
																	"nodeType": "YulTypedName",
																	"src": "541:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:10",
																"nodeType": "YulBlock",
																"src": "614:31:10",
																"statements": [
																	{
																		"nativeSrc": "616:27:10",
																		"nodeType": "YulAssignment",
																		"src": "616:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:10",
																					"nodeType": "YulLiteral",
																					"src": "638:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:10"
																			},
																			"nativeSrc": "626:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:10"
																},
																"nativeSrc": "587:26:10",
																"nodeType": "YulFunctionCall",
																"src": "587:26:10"
															},
															"nativeSrc": "584:61:10",
															"nodeType": "YulIf",
															"src": "584:61:10"
														},
														{
															"body": {
																"nativeSrc": "704:111:10",
																"nodeType": "YulBlock",
																"src": "704:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:10",
																					"nodeType": "YulLiteral",
																					"src": "725:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:10",
																							"nodeType": "YulLiteral",
																							"src": "732:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:10",
																							"nodeType": "YulLiteral",
																							"src": "737:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:10"
																					},
																					"nativeSrc": "728:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:10"
																			},
																			"nativeSrc": "718:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:10"
																		},
																		"nativeSrc": "718:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:10",
																					"nodeType": "YulLiteral",
																					"src": "769:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:10",
																					"nodeType": "YulLiteral",
																					"src": "772:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:10"
																			},
																			"nativeSrc": "762:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:10"
																		},
																		"nativeSrc": "762:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:10",
																					"nodeType": "YulLiteral",
																					"src": "797:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:10",
																					"nodeType": "YulLiteral",
																					"src": "800:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:10"
																			},
																			"nativeSrc": "790:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:10"
																		},
																		"nativeSrc": "790:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:10",
																				"nodeType": "YulLiteral",
																				"src": "691:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:10"
																		},
																		"nativeSrc": "680:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:10"
																},
																"nativeSrc": "657:38:10",
																"nodeType": "YulFunctionCall",
																"src": "657:38:10"
															},
															"nativeSrc": "654:161:10",
															"nodeType": "YulIf",
															"src": "654:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:10",
														"nodeType": "YulTypedName",
														"src": "476:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:10",
														"nodeType": "YulTypedName",
														"src": "485:6:10",
														"type": ""
													}
												],
												"src": "441:380:10"
											},
											{
												"body": {
													"nativeSrc": "882:65:10",
													"nodeType": "YulBlock",
													"src": "882:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:10",
																		"nodeType": "YulLiteral",
																		"src": "899:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:10"
																},
																"nativeSrc": "892:14:10",
																"nodeType": "YulFunctionCall",
																"src": "892:14:10"
															},
															"nativeSrc": "892:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:10"
														},
														{
															"nativeSrc": "915:26:10",
															"nodeType": "YulAssignment",
															"src": "915:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:10",
																		"nodeType": "YulLiteral",
																		"src": "933:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:10",
																		"nodeType": "YulLiteral",
																		"src": "936:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:10"
																},
																"nativeSrc": "923:18:10",
																"nodeType": "YulFunctionCall",
																"src": "923:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:10",
														"nodeType": "YulTypedName",
														"src": "865:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:10",
														"nodeType": "YulTypedName",
														"src": "873:4:10",
														"type": ""
													}
												],
												"src": "826:121:10"
											},
											{
												"body": {
													"nativeSrc": "1033:437:10",
													"nodeType": "YulBlock",
													"src": "1033:437:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:398:10",
																"nodeType": "YulBlock",
																"src": "1066:398:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1087:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1087:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1090:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "1090:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1080:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:10"
																			},
																			"nativeSrc": "1080:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1080:16:10"
																		},
																		"nativeSrc": "1080:16:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1080:16:10"
																	},
																	{
																		"nativeSrc": "1109:30:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1109:30:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:10",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1121:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:10"
																			},
																			"nativeSrc": "1121:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1121:18:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1113:4:10",
																				"nodeType": "YulTypedName",
																				"src": "1113:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1152:57:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1152:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1175:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "1175:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1185:1:10",
																							"nodeType": "YulLiteral",
																							"src": "1185:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1192:10:10",
																									"nodeType": "YulIdentifier",
																									"src": "1192:10:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1204:2:10",
																									"nodeType": "YulLiteral",
																									"src": "1204:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1188:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "1188:3:10"
																							},
																							"nativeSrc": "1188:19:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1188:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1181:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:10"
																					},
																					"nativeSrc": "1181:27:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1181:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1171:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:10"
																			},
																			"nativeSrc": "1171:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1156:11:10",
																				"nodeType": "YulTypedName",
																				"src": "1156:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1246:23:10",
																			"nodeType": "YulBlock",
																			"src": "1246:23:10",
																			"statements": [
																				{
																					"nativeSrc": "1248:19:10",
																					"nodeType": "YulAssignment",
																					"src": "1248:19:10",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1263:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "1263:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1248:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "1248:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1228:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "1228:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:4:10",
																					"nodeType": "YulLiteral",
																					"src": "1240:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1225:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "1225:2:10"
																			},
																			"nativeSrc": "1225:20:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:20:10"
																		},
																		"nativeSrc": "1222:47:10",
																		"nodeType": "YulIf",
																		"src": "1222:47:10"
																	},
																	{
																		"nativeSrc": "1282:41:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1296:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "1296:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1306:1:10",
																							"nodeType": "YulLiteral",
																							"src": "1306:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1313:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1313:3:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1318:2:10",
																									"nodeType": "YulLiteral",
																									"src": "1318:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1309:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "1309:3:10"
																							},
																							"nativeSrc": "1309:12:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1309:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1302:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:10"
																					},
																					"nativeSrc": "1302:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1302:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1292:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1292:3:10"
																			},
																			"nativeSrc": "1292:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:31:10"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1286:2:10",
																				"nodeType": "YulTypedName",
																				"src": "1286:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1336:24:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1349:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "1349:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1340:5:10",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1434:20:10",
																			"nodeType": "YulBlock",
																			"src": "1434:20:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1443:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1450:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1450:1:10",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1436:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:10"
																						},
																						"nativeSrc": "1436:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1436:16:10"
																					},
																					"nativeSrc": "1436:16:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:16:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1384:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "1384:5:10"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1391:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "1391:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1381:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "1381:2:10"
																			},
																			"nativeSrc": "1381:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1381:13:10"
																		},
																		"nativeSrc": "1373:81:10",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1395:26:10",
																			"nodeType": "YulBlock",
																			"src": "1395:26:10",
																			"statements": [
																				{
																					"nativeSrc": "1397:22:10",
																					"nodeType": "YulAssignment",
																					"src": "1397:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1410:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "1410:5:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1417:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1417:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1406:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1406:3:10"
																						},
																						"nativeSrc": "1406:13:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1406:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1397:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "1397:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1377:3:10",
																			"nodeType": "YulBlock",
																			"src": "1377:3:10",
																			"statements": []
																		},
																		"src": "1373:81:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:10"
																},
																"nativeSrc": "1046:11:10",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:10"
															},
															"nativeSrc": "1043:421:10",
															"nodeType": "YulIf",
															"src": "1043:421:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:518:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:10",
														"nodeType": "YulTypedName",
														"src": "1005:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:10",
														"nodeType": "YulTypedName",
														"src": "1012:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:10",
														"nodeType": "YulTypedName",
														"src": "1017:10:10",
														"type": ""
													}
												],
												"src": "952:518:10"
											},
											{
												"body": {
													"nativeSrc": "1560:81:10",
													"nodeType": "YulBlock",
													"src": "1560:81:10",
													"statements": [
														{
															"nativeSrc": "1570:65:10",
															"nodeType": "YulAssignment",
															"src": "1570:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1585:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1585:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1603:1:10",
																										"nodeType": "YulLiteral",
																										"src": "1603:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1606:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "1606:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1599:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1599:3:10"
																								},
																								"nativeSrc": "1599:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "1599:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1616:1:10",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1612:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1612:3:10"
																								},
																								"nativeSrc": "1612:6:10",
																								"nodeType": "YulFunctionCall",
																								"src": "1612:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1595:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:10"
																						},
																						"nativeSrc": "1595:24:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1595:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1591:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:10"
																				},
																				"nativeSrc": "1591:29:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:10"
																		},
																		"nativeSrc": "1581:40:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1627:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1627:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1630:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1623:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:10"
																		},
																		"nativeSrc": "1623:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1578:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:10"
																},
																"nativeSrc": "1578:57:10",
																"nodeType": "YulFunctionCall",
																"src": "1578:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1570:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1475:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1537:4:10",
														"nodeType": "YulTypedName",
														"src": "1537:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1543:3:10",
														"nodeType": "YulTypedName",
														"src": "1543:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1551:4:10",
														"nodeType": "YulTypedName",
														"src": "1551:4:10",
														"type": ""
													}
												],
												"src": "1475:166:10"
											},
											{
												"body": {
													"nativeSrc": "1742:1203:10",
													"nodeType": "YulBlock",
													"src": "1742:1203:10",
													"statements": [
														{
															"nativeSrc": "1752:24:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1752:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1772:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1766:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:10"
																},
																"nativeSrc": "1766:10:10",
																"nodeType": "YulFunctionCall",
																"src": "1766:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1756:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1756:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:10",
																"nodeType": "YulBlock",
																"src": "1819:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:10"
																			},
																			"nativeSrc": "1821:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:10"
																		},
																		"nativeSrc": "1821:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1791:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:10",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:10",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:10"
																				},
																				"nativeSrc": "1803:10:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:10"
																		},
																		"nativeSrc": "1799:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1788:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:10"
																},
																"nativeSrc": "1788:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1788:30:10"
															},
															"nativeSrc": "1785:56:10",
															"nodeType": "YulIf",
															"src": "1785:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1894:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1894:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1932:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "1932:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1926:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "1926:5:10"
																				},
																				"nativeSrc": "1926:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1926:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1900:25:10",
																			"nodeType": "YulIdentifier",
																			"src": "1900:25:10"
																		},
																		"nativeSrc": "1900:38:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:38:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1940:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1850:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1850:43:10"
																},
																"nativeSrc": "1850:97:10",
																"nodeType": "YulFunctionCall",
																"src": "1850:97:10"
															},
															"nativeSrc": "1850:97:10",
															"nodeType": "YulExpressionStatement",
															"src": "1850:97:10"
														},
														{
															"nativeSrc": "1956:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1973:1:10",
																"nodeType": "YulLiteral",
																"src": "1973:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1960:9:10",
																	"nodeType": "YulTypedName",
																	"src": "1960:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1983:17:10",
															"nodeType": "YulAssignment",
															"src": "1983:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1996:4:10",
																"nodeType": "YulLiteral",
																"src": "1996:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1983:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1983:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2046:642:10",
																		"nodeType": "YulBlock",
																		"src": "2046:642:10",
																		"statements": [
																			{
																				"nativeSrc": "2060:35:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2060:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2079:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "2079:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2091:2:10",
																									"nodeType": "YulLiteral",
																									"src": "2091:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2087:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "2087:3:10"
																							},
																							"nativeSrc": "2087:7:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2087:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2075:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2075:3:10"
																					},
																					"nativeSrc": "2075:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2075:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2064:7:10",
																						"nodeType": "YulTypedName",
																						"src": "2064:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2108:49:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2108:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2152:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "2152:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2122:29:10",
																						"nodeType": "YulIdentifier",
																						"src": "2122:29:10"
																					},
																					"nativeSrc": "2122:35:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2122:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2112:6:10",
																						"nodeType": "YulTypedName",
																						"src": "2112:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2170:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2170:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2179:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2179:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2174:1:10",
																						"nodeType": "YulTypedName",
																						"src": "2174:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2250:165:10",
																					"nodeType": "YulBlock",
																					"src": "2250:165:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2275:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "2275:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2293:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "2293:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2298:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "2298:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2289:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "2289:3:10"
																												},
																												"nativeSrc": "2289:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "2289:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2283:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "2283:5:10"
																										},
																										"nativeSrc": "2283:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "2283:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2268:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2268:6:10"
																								},
																								"nativeSrc": "2268:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2268:42:10"
																							},
																							"nativeSrc": "2268:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "2268:42:10"
																						},
																						{
																							"nativeSrc": "2327:24:10",
																							"nodeType": "YulAssignment",
																							"src": "2327:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2341:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "2341:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2349:1:10",
																										"nodeType": "YulLiteral",
																										"src": "2349:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2337:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2337:3:10"
																								},
																								"nativeSrc": "2337:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2337:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2327:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2327:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2368:33:10",
																							"nodeType": "YulAssignment",
																							"src": "2368:33:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2385:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "2385:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2396:4:10",
																										"nodeType": "YulLiteral",
																										"src": "2396:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2381:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2381:3:10"
																								},
																								"nativeSrc": "2381:20:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2381:20:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2368:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "2368:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2204:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "2204:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2207:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "2207:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2201:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "2201:2:10"
																					},
																					"nativeSrc": "2201:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2201:14:10"
																				},
																				"nativeSrc": "2193:222:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2216:21:10",
																					"nodeType": "YulBlock",
																					"src": "2216:21:10",
																					"statements": [
																						{
																							"nativeSrc": "2218:17:10",
																							"nodeType": "YulAssignment",
																							"src": "2218:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2227:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "2227:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2230:4:10",
																										"nodeType": "YulLiteral",
																										"src": "2230:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2223:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2223:3:10"
																								},
																								"nativeSrc": "2223:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2223:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2218:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "2218:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2197:3:10",
																					"nodeType": "YulBlock",
																					"src": "2197:3:10",
																					"statements": []
																				},
																				"src": "2193:222:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "2463:166:10",
																					"nodeType": "YulBlock",
																					"src": "2463:166:10",
																					"statements": [
																						{
																							"nativeSrc": "2481:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2481:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2508:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "2508:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2513:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "2513:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2504:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "2504:3:10"
																										},
																										"nativeSrc": "2504:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "2504:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2498:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2498:5:10"
																								},
																								"nativeSrc": "2498:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2498:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2485:9:10",
																									"nodeType": "YulTypedName",
																									"src": "2485:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2548:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "2548:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2560:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "2560:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2587:1:10",
																																				"nodeType": "YulLiteral",
																																				"src": "2587:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2590:6:10",
																																				"nodeType": "YulIdentifier",
																																				"src": "2590:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2583:3:10",
																																			"nodeType": "YulIdentifier",
																																			"src": "2583:3:10"
																																		},
																																		"nativeSrc": "2583:14:10",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2583:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2599:3:10",
																																		"nodeType": "YulLiteral",
																																		"src": "2599:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2579:3:10",
																																	"nodeType": "YulIdentifier",
																																	"src": "2579:3:10"
																																},
																																"nativeSrc": "2579:24:10",
																																"nodeType": "YulFunctionCall",
																																"src": "2579:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2609:1:10",
																																		"nodeType": "YulLiteral",
																																		"src": "2609:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2605:3:10",
																																	"nodeType": "YulIdentifier",
																																	"src": "2605:3:10"
																																},
																																"nativeSrc": "2605:6:10",
																																"nodeType": "YulFunctionCall",
																																"src": "2605:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2575:3:10",
																															"nodeType": "YulIdentifier",
																															"src": "2575:3:10"
																														},
																														"nativeSrc": "2575:37:10",
																														"nodeType": "YulFunctionCall",
																														"src": "2575:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2571:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "2571:3:10"
																												},
																												"nativeSrc": "2571:42:10",
																												"nodeType": "YulFunctionCall",
																												"src": "2571:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2556:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "2556:3:10"
																										},
																										"nativeSrc": "2556:58:10",
																										"nodeType": "YulFunctionCall",
																										"src": "2556:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2541:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2541:6:10"
																								},
																								"nativeSrc": "2541:74:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2541:74:10"
																							},
																							"nativeSrc": "2541:74:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "2541:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2434:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "2434:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2443:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "2443:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2431:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "2431:2:10"
																					},
																					"nativeSrc": "2431:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2431:19:10"
																				},
																				"nativeSrc": "2428:201:10",
																				"nodeType": "YulIf",
																				"src": "2428:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2649:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "2649:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2663:1:10",
																											"nodeType": "YulLiteral",
																											"src": "2663:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2666:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "2666:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2659:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "2659:3:10"
																									},
																									"nativeSrc": "2659:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "2659:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2675:1:10",
																									"nodeType": "YulLiteral",
																									"src": "2675:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2655:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "2655:3:10"
																							},
																							"nativeSrc": "2655:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2655:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2642:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2642:6:10"
																					},
																					"nativeSrc": "2642:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2642:36:10"
																				},
																				"nativeSrc": "2642:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "2642:36:10"
																			}
																		]
																	},
																	"nativeSrc": "2039:649:10",
																	"nodeType": "YulCase",
																	"src": "2039:649:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2044:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2044:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2705:234:10",
																		"nodeType": "YulBlock",
																		"src": "2705:234:10",
																		"statements": [
																			{
																				"nativeSrc": "2719:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2719:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2732:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2732:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2723:5:10",
																						"nodeType": "YulTypedName",
																						"src": "2723:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2768:67:10",
																					"nodeType": "YulBlock",
																					"src": "2768:67:10",
																					"statements": [
																						{
																							"nativeSrc": "2786:35:10",
																							"nodeType": "YulAssignment",
																							"src": "2786:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2805:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "2805:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2810:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "2810:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2801:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "2801:3:10"
																										},
																										"nativeSrc": "2801:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "2801:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2795:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2795:5:10"
																								},
																								"nativeSrc": "2795:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2795:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2786:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2786:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2749:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2749:6:10"
																				},
																				"nativeSrc": "2746:89:10",
																				"nodeType": "YulIf",
																				"src": "2746:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2855:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "2855:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2914:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2914:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2921:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2921:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2861:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "2861:52:10"
																							},
																							"nativeSrc": "2861:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2861:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2848:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2848:6:10"
																					},
																					"nativeSrc": "2848:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2848:81:10"
																				},
																				"nativeSrc": "2848:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "2848:81:10"
																			}
																		]
																	},
																	"nativeSrc": "2697:242:10",
																	"nodeType": "YulCase",
																	"src": "2697:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2019:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2019:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2027:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2027:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2016:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2016:2:10"
																},
																"nativeSrc": "2016:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2016:14:10"
															},
															"nativeSrc": "2009:930:10",
															"nodeType": "YulSwitch",
															"src": "2009:930:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1646:1299:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1727:4:10",
														"nodeType": "YulTypedName",
														"src": "1727:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1733:3:10",
														"nodeType": "YulTypedName",
														"src": "1733:3:10",
														"type": ""
													}
												],
												"src": "1646:1299:10"
											},
											{
												"body": {
													"nativeSrc": "3051:102:10",
													"nodeType": "YulBlock",
													"src": "3051:102:10",
													"statements": [
														{
															"nativeSrc": "3061:26:10",
															"nodeType": "YulAssignment",
															"src": "3061:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3073:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3073:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3084:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3084:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3069:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3069:3:10"
																},
																"nativeSrc": "3069:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3069:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3061:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3061:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3103:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3103:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3118:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3118:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3134:3:10",
																								"nodeType": "YulLiteral",
																								"src": "3134:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3139:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3139:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3130:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3130:3:10"
																						},
																						"nativeSrc": "3130:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3130:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3143:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3143:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3126:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3126:3:10"
																				},
																				"nativeSrc": "3126:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3126:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3114:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3114:3:10"
																		},
																		"nativeSrc": "3114:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3114:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3096:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3096:6:10"
																},
																"nativeSrc": "3096:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3096:51:10"
															},
															"nativeSrc": "3096:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3096:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2950:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3020:9:10",
														"nodeType": "YulTypedName",
														"src": "3020:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3031:6:10",
														"nodeType": "YulTypedName",
														"src": "3031:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3042:4:10",
														"nodeType": "YulTypedName",
														"src": "3042:4:10",
														"type": ""
													}
												],
												"src": "2950:203:10"
											},
											{
												"body": {
													"nativeSrc": "3287:171:10",
													"nodeType": "YulBlock",
													"src": "3287:171:10",
													"statements": [
														{
															"nativeSrc": "3297:26:10",
															"nodeType": "YulAssignment",
															"src": "3297:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3309:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3309:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3320:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3320:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3305:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3305:3:10"
																},
																"nativeSrc": "3305:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3305:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3297:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3297:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3339:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3339:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3354:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3354:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3370:3:10",
																								"nodeType": "YulLiteral",
																								"src": "3370:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3375:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3375:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3366:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3366:3:10"
																						},
																						"nativeSrc": "3366:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3366:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3379:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3379:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3362:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3362:3:10"
																				},
																				"nativeSrc": "3362:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3362:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3350:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3350:3:10"
																		},
																		"nativeSrc": "3350:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3350:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3332:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3332:6:10"
																},
																"nativeSrc": "3332:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3332:51:10"
															},
															"nativeSrc": "3332:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3332:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3403:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3403:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3414:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3414:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3399:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3399:3:10"
																		},
																		"nativeSrc": "3399:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3399:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3423:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3423:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3439:3:10",
																								"nodeType": "YulLiteral",
																								"src": "3439:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3444:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3444:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3435:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3435:3:10"
																						},
																						"nativeSrc": "3435:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3435:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3448:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3448:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3431:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3431:3:10"
																				},
																				"nativeSrc": "3431:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3431:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3419:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3419:3:10"
																		},
																		"nativeSrc": "3419:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3419:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3392:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3392:6:10"
																},
																"nativeSrc": "3392:60:10",
																"nodeType": "YulFunctionCall",
																"src": "3392:60:10"
															},
															"nativeSrc": "3392:60:10",
															"nodeType": "YulExpressionStatement",
															"src": "3392:60:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "3158:300:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3248:9:10",
														"nodeType": "YulTypedName",
														"src": "3248:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3259:6:10",
														"nodeType": "YulTypedName",
														"src": "3259:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3267:6:10",
														"nodeType": "YulTypedName",
														"src": "3267:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3278:4:10",
														"nodeType": "YulTypedName",
														"src": "3278:4:10",
														"type": ""
													}
												],
												"src": "3158:300:10"
											},
											{
												"body": {
													"nativeSrc": "3564:76:10",
													"nodeType": "YulBlock",
													"src": "3564:76:10",
													"statements": [
														{
															"nativeSrc": "3574:26:10",
															"nodeType": "YulAssignment",
															"src": "3574:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3586:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3586:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3597:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3597:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3582:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3582:3:10"
																},
																"nativeSrc": "3582:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3582:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3574:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3574:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3616:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3616:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3627:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3627:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:10"
																},
																"nativeSrc": "3609:25:10",
																"nodeType": "YulFunctionCall",
																"src": "3609:25:10"
															},
															"nativeSrc": "3609:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "3609:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:10",
														"nodeType": "YulTypedName",
														"src": "3533:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3544:6:10",
														"nodeType": "YulTypedName",
														"src": "3544:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3555:4:10",
														"nodeType": "YulTypedName",
														"src": "3555:4:10",
														"type": ""
													}
												],
												"src": "3463:177:10"
											},
											{
												"body": {
													"nativeSrc": "3693:174:10",
													"nodeType": "YulBlock",
													"src": "3693:174:10",
													"statements": [
														{
															"nativeSrc": "3703:16:10",
															"nodeType": "YulAssignment",
															"src": "3703:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3714:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3714:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3717:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3717:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3710:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3710:3:10"
																},
																"nativeSrc": "3710:9:10",
																"nodeType": "YulFunctionCall",
																"src": "3710:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3703:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3703:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3750:111:10",
																"nodeType": "YulBlock",
																"src": "3750:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3771:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3771:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3778:3:10",
																							"nodeType": "YulLiteral",
																							"src": "3778:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3783:10:10",
																							"nodeType": "YulLiteral",
																							"src": "3783:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3774:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3774:3:10"
																					},
																					"nativeSrc": "3774:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3774:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3764:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3764:6:10"
																			},
																			"nativeSrc": "3764:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3764:31:10"
																		},
																		"nativeSrc": "3764:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3764:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3815:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3815:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3818:4:10",
																					"nodeType": "YulLiteral",
																					"src": "3818:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3808:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3808:6:10"
																			},
																			"nativeSrc": "3808:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3808:15:10"
																		},
																		"nativeSrc": "3808:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3808:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3843:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3843:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3846:4:10",
																					"nodeType": "YulLiteral",
																					"src": "3846:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3836:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3836:6:10"
																			},
																			"nativeSrc": "3836:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3836:15:10"
																		},
																		"nativeSrc": "3836:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3836:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3734:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3734:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3737:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3737:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3731:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3731:2:10"
																},
																"nativeSrc": "3731:10:10",
																"nodeType": "YulFunctionCall",
																"src": "3731:10:10"
															},
															"nativeSrc": "3728:133:10",
															"nodeType": "YulIf",
															"src": "3728:133:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3645:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3676:1:10",
														"nodeType": "YulTypedName",
														"src": "3676:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3679:1:10",
														"nodeType": "YulTypedName",
														"src": "3679:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3685:3:10",
														"nodeType": "YulTypedName",
														"src": "3685:3:10",
														"type": ""
													}
												],
												"src": "3645:222:10"
											},
											{
												"body": {
													"nativeSrc": "4029:188:10",
													"nodeType": "YulBlock",
													"src": "4029:188:10",
													"statements": [
														{
															"nativeSrc": "4039:26:10",
															"nodeType": "YulAssignment",
															"src": "4039:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4051:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4051:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4062:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4062:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4047:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4047:3:10"
																},
																"nativeSrc": "4047:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4047:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4039:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4039:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4081:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4081:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4096:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4096:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4112:3:10",
																								"nodeType": "YulLiteral",
																								"src": "4112:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4117:1:10",
																								"nodeType": "YulLiteral",
																								"src": "4117:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4108:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4108:3:10"
																						},
																						"nativeSrc": "4108:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "4108:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4121:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4121:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4104:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4104:3:10"
																				},
																				"nativeSrc": "4104:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4104:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4092:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4092:3:10"
																		},
																		"nativeSrc": "4092:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4092:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4074:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4074:6:10"
																},
																"nativeSrc": "4074:51:10",
																"nodeType": "YulFunctionCall",
																"src": "4074:51:10"
															},
															"nativeSrc": "4074:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "4074:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4145:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4145:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4156:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4156:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4141:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4141:3:10"
																		},
																		"nativeSrc": "4141:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4141:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4161:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4161:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4134:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4134:6:10"
																},
																"nativeSrc": "4134:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4134:34:10"
															},
															"nativeSrc": "4134:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4134:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4188:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4188:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4199:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4199:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4184:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4184:3:10"
																		},
																		"nativeSrc": "4184:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4184:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4204:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4204:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4177:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4177:6:10"
																},
																"nativeSrc": "4177:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4177:34:10"
															},
															"nativeSrc": "4177:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4177:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3872:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3982:9:10",
														"nodeType": "YulTypedName",
														"src": "3982:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3993:6:10",
														"nodeType": "YulTypedName",
														"src": "3993:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4001:6:10",
														"nodeType": "YulTypedName",
														"src": "4001:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4009:6:10",
														"nodeType": "YulTypedName",
														"src": "4009:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4020:4:10",
														"nodeType": "YulTypedName",
														"src": "4020:4:10",
														"type": ""
													}
												],
												"src": "3872:345:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040526005600655348015610014575f80fd5b5060405161188038038061188083398101604081905261003391610592565b336040518060400160405280600b81526020016a2130b730b730aa37b5b2b760a91b8152506040518060400160405280600481526020016342414e4160e01b81525081600390816100849190610656565b5060046100918282610656565b5050506001600160a01b0381166100c257604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100cb816102fe565b506001600160a01b03811660a05243600855739ac64cc6e4415144c455bd8e4837fea55603e5c360808190526040805163c45a015560e01b8152905163c45a0155916004808201926020929091908290030181865afa158015610130573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101549190610592565b6001600160a01b031663c9c65396306080516001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101a1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101c59190610592565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303815f875af115801561020f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102339190610592565b600780546001600160a01b0319166001600160a01b03929092169190911790556102613061dead5f1961034f565b600160095f6102786005546001600160a01b031690565b6001600160a01b0316815260208082019290925260409081015f908120805494151560ff1995861617905560099092527f960b1051749987b45b5679007fff577a1c2f763ec21c15a6c5eb193075003785805484166001908117909155308352912080549092161790556102f8336b43dacaf91c1a84ff08000000610361565b50610735565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b61035c8383836001610399565b505050565b6001600160a01b03821661038a5760405163ec442f0560e01b81525f60048201526024016100b9565b6103955f838361046c565b5050565b6001600160a01b0384166103c25760405163e602df0560e01b81525f60048201526024016100b9565b6001600160a01b0383166103eb57604051634a1406b160e11b81525f60048201526024016100b9565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561046657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161045d91815260200190565b60405180910390a35b50505050565b6001600160a01b038316610496578060025f82825461048b9190610710565b909155506105069050565b6001600160a01b0383165f90815260208190526040902054818110156104e85760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100b9565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661052257600280548290039055610540565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161058591815260200190565b60405180910390a3505050565b5f602082840312156105a2575f80fd5b81516001600160a01b03811681146105b8575f80fd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806105e757607f821691505b60208210810361060557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561035c57805f5260205f20601f840160051c810160208510156106305750805b601f840160051c820191505b8181101561064f575f815560010161063c565b5050505050565b81516001600160401b0381111561066f5761066f6105bf565b6106838161067d84546105d3565b8461060b565b6020601f8211600181146106b5575f831561069e5750848201515b5f19600385901b1c1916600184901b17845561064f565b5f84815260208120601f198516915b828110156106e457878501518255602094850194600190920191016106c4565b508482101561070157868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561072f57634e487b7160e01b5f52601160045260245ffd5b92915050565b60805160a05161111561076b5f395f81816107b401526109cf01525f81816101bc0152818161089f015261095501526111155ff3fe60806040526004361061011e575f3560e01c8063715018a61161009d578063a9059cbb11610062578063a9059cbb14610343578063c024666814610362578063c6d69a3014610381578063dd62ed3e146103a0578063f2fde38b146103e4575f80fd5b8063715018a6146102c0578063771a3a1d146102d65780638da5cb5b146102eb57806395d89b4114610308578063a82ed9ec1461031c575f80fd5b806323b872dd116100e357806323b872dd146101fc578063313ce5671461021b57806349bd5a5e146102365780634fbee1931461025557806370a082311461028c575f80fd5b806303fd2a451461012957806306fdde031461015b578063095ea7b31461017c5780631694505e146101ab57806318160ddd146101de575f80fd5b3661012557005b5f80fd5b348015610134575f80fd5b5061013e61dead81565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610166575f80fd5b5061016f610403565b6040516101529190610e31565b348015610187575f80fd5b5061019b610196366004610e90565b610493565b6040519015158152602001610152565b3480156101b6575f80fd5b5061013e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101e9575f80fd5b506002545b604051908152602001610152565b348015610207575f80fd5b5061019b610216366004610eba565b6104ac565b348015610226575f80fd5b5060405160128152602001610152565b348015610241575f80fd5b5060075461013e906001600160a01b031681565b348015610260575f80fd5b5061019b61026f366004610ef8565b6001600160a01b03165f9081526009602052604090205460ff1690565b348015610297575f80fd5b506101ee6102a6366004610ef8565b6001600160a01b03165f9081526020819052604090205490565b3480156102cb575f80fd5b506102d4610550565b005b3480156102e1575f80fd5b506101ee60065481565b3480156102f6575f80fd5b506005546001600160a01b031661013e565b348015610313575f80fd5b5061016f610563565b348015610327575f80fd5b5061013e739ac64cc6e4415144c455bd8e4837fea55603e5c381565b34801561034e575f80fd5b5061019b61035d366004610e90565b610572565b34801561036d575f80fd5b506102d461037c366004610f1a565b610600565b34801561038c575f80fd5b506102d461039b366004610f55565b610666565b3480156103ab575f80fd5b506101ee6103ba366004610f6c565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b3480156103ef575f80fd5b506102d46103fe366004610ef8565b6106ba565b60606003805461041290610f98565b80601f016020809104026020016040519081016040528092919081815260200182805461043e90610f98565b80156104895780601f1061046057610100808354040283529160200191610489565b820191905f5260205f20905b81548152906001019060200180831161046c57829003601f168201915b5050505050905090565b5f336104a08185856106f7565b60019150505b92915050565b6001600160a01b0383165f9081526009602052604081205460ff161580156104ec57506001600160a01b0383165f9081526009602052604090205460ff16155b801561051957506007546001600160a01b031633148061051957506007546001600160a01b038481169116145b1561053957610529843384610709565b610534848484610784565b610546565b610544848484610a19565b505b5060019392505050565b610558610a3c565b6105615f610a69565b565b60606004805461041290610f98565b335f9081526009602052604081205460ff161580156105a957506001600160a01b0383165f9081526009602052604090205460ff16155b80156105d657506007546001600160a01b03163314806105d657506007546001600160a01b038481169116145b156105eb576105e6338484610784565b6105f7565b6105f58383610aba565b505b50600192915050565b610608610a3c565b6001600160a01b0382165f81815260096020908152604091829020805460ff191685151590811790915591519182527f9d8f7706ea1113d1a167b526eca956215946dd36cc7df39eb16180222d8b5df7910160405180910390a25050565b61066e610a3c565b601481106106b55760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207461785261746560881b60448201526064015b60405180910390fd5b600655565b6106c2610a3c565b6001600160a01b0381166106eb57604051631e4fbdf760e01b81525f60048201526024016106ac565b6106f481610a69565b50565b6107048383836001610ac7565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461077e578181101561077057604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016106ac565b61077e84848484035f610ac7565b50505050565b5f6064600654836107959190610fe4565b61079f9190610ffb565b90505f6107ac828461101a565b90506107d9857f000000000000000000000000000000000000000000000000000000000000000084610b99565b6008546107e89061138861102d565b4311610a0757305f90815260208190526040902054801580159081906108185750600754600160a01b900460ff16155b801561083257506007546001600160a01b03888116911614155b15610a04576007805460ff60a01b1916600160a01b1790556040805160028082526060820183525f9260208301908036833701905050905030815f8151811061087d5761087d611040565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061091d9190611054565b8160018151811061093057610930611040565b6001600160a01b03928316602091820292909201015260405163791ac94760e01b81527f00000000000000000000000000000000000000000000000000000000000000009091169063791ac947906109949086905f9086903090429060040161106f565b5f604051808303815f87803b1580156109ab575f80fd5b505af11580156109bd573d5f803e3d5ffd5b5047925050811590506109f4576109f47f000000000000000000000000000000000000000000000000000000000000000082610bf6565b50506007805460ff60a01b191690555b50505b610a12858583610b99565b5050505050565b5f33610a26858285610709565b610a31858585610b99565b506001949350505050565b6005546001600160a01b031633146105615760405163118cdaa760e01b81523360048201526024016106ac565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f336104a0818585610b99565b6001600160a01b038416610af05760405163e602df0560e01b81525f60048201526024016106ac565b6001600160a01b038316610b1957604051634a1406b160e11b81525f60048201526024016106ac565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561077e57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b8b91815260200190565b60405180910390a350505050565b6001600160a01b038316610bc257604051634b637e8f60e11b81525f60048201526024016106ac565b6001600160a01b038216610beb5760405163ec442f0560e01b81525f60048201526024016106ac565b610704838383610d0b565b80471015610c465760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016106ac565b5f826001600160a01b0316826040515f6040518083038185875af1925050503d805f8114610c8f576040519150601f19603f3d011682016040523d82523d5f602084013e610c94565b606091505b50509050806107045760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016106ac565b6001600160a01b038316610d35578060025f828254610d2a919061102d565b90915550610da59050565b6001600160a01b0383165f9081526020819052604090205481811015610d875760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016106ac565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610dc157600280548290039055610ddf565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e2491815260200190565b60405180910390a3505050565b602081525f82518060208401525f5b81811015610e5d5760208186018101516040868401015201610e40565b505f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146106f4575f80fd5b5f8060408385031215610ea1575f80fd5b8235610eac81610e7c565b946020939093013593505050565b5f805f60608486031215610ecc575f80fd5b8335610ed781610e7c565b92506020840135610ee781610e7c565b929592945050506040919091013590565b5f60208284031215610f08575f80fd5b8135610f1381610e7c565b9392505050565b5f8060408385031215610f2b575f80fd5b8235610f3681610e7c565b915060208301358015158114610f4a575f80fd5b809150509250929050565b5f60208284031215610f65575f80fd5b5035919050565b5f8060408385031215610f7d575f80fd5b8235610f8881610e7c565b91506020830135610f4a81610e7c565b600181811c90821680610fac57607f821691505b602082108103610fca57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176104a6576104a6610fd0565b5f8261101557634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156104a6576104a6610fd0565b808201808211156104a6576104a6610fd0565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215611064575f80fd5b8151610f1381610e7c565b5f60a0820187835286602084015260a0604084015280865180835260c0850191506020880192505f5b818110156110bf5783516001600160a01b0316835260209384019390920191600101611098565b50506001600160a01b03959095166060840152505060800152939250505056fea2646970667358221220b212ce07202bcf6ea3146e4a83775f1d4ee32086f642f076ee90afd024ea043e64736f6c634300081a0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1880 CODESIZE SUB DUP1 PUSH2 0x1880 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x33 SWAP2 PUSH2 0x592 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x2130B730B730AA37B5B2B7 PUSH1 0xA9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x42414E41 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x656 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x91 DUP3 DUP3 PUSH2 0x656 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB DUP2 PUSH2 0x2FE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 MSTORE NUMBER PUSH1 0x8 SSTORE PUSH20 0x9AC64CC6E4415144C455BD8E4837FEA55603E5C3 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0xC45A0155 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x130 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x261 ADDRESS PUSH2 0xDEAD PUSH0 NOT PUSH2 0x34F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x278 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP5 ISZERO ISZERO PUSH1 0xFF NOT SWAP6 DUP7 AND OR SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE PUSH32 0x960B1051749987B45B5679007FFF577A1C2F763EC21C15A6C5EB193075003785 DUP1 SLOAD DUP5 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE ADDRESS DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x2F8 CALLER PUSH12 0x43DACAF91C1A84FF08000000 PUSH2 0x361 JUMP JUMPDEST POP PUSH2 0x735 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x35C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x399 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x395 PUSH0 DUP4 DUP4 PUSH2 0x46C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x466 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x45D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x496 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x710 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x506 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x522 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x585 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x5E7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x605 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x35C JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x630 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x64F JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x63C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x66F JUMPI PUSH2 0x66F PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x683 DUP2 PUSH2 0x67D DUP5 SLOAD PUSH2 0x5D3 JUMP JUMPDEST DUP5 PUSH2 0x60B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x6B5 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x69E JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x64F JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6E4 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x6C4 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x701 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x72F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1115 PUSH2 0x76B PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x7B4 ADD MSTORE PUSH2 0x9CF ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1BC ADD MSTORE DUP2 DUP2 PUSH2 0x89F ADD MSTORE PUSH2 0x955 ADD MSTORE PUSH2 0x1115 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xC0246668 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xC6D69A30 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x771A3A1D EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xA82ED9EC EQ PUSH2 0x31C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x4FBEE193 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD2A45 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x1694505E EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DE JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x125 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x13E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x550 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x563 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH20 0x9AC64CC6E4415144C455BD8E4837FEA55603E5C3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0xF55 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x3FE CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0xF98 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0xF98 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x489 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x460 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x489 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4A0 DUP2 DUP6 DUP6 PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x4EC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x519 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x519 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x539 JUMPI PUSH2 0x529 DUP5 CALLER DUP5 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x534 DUP5 DUP5 DUP5 PUSH2 0x784 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH2 0x544 DUP5 DUP5 DUP5 PUSH2 0xA19 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x558 PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x561 PUSH0 PUSH2 0xA69 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0xF98 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x5A9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x5D6 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x5D6 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5E6 CALLER DUP5 DUP5 PUSH2 0x784 JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x5F5 DUP4 DUP4 PUSH2 0xABA JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x608 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x9D8F7706EA1113D1A167B526ECA956215946DD36CC7DF39EB16180222D8B5DF7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x66E PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x14 DUP2 LT PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642074617852617465 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x6C2 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x6F4 DUP2 PUSH2 0xA69 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x704 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAC7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x77E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x77E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAC7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP4 PUSH2 0x795 SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x79F SWAP2 SWAP1 PUSH2 0xFFB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7AC DUP3 DUP5 PUSH2 0x101A JUMP JUMPDEST SWAP1 POP PUSH2 0x7D9 DUP6 PUSH32 0x0 DUP5 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x7E8 SWAP1 PUSH2 0x1388 PUSH2 0x102D JUMP JUMPDEST NUMBER GT PUSH2 0xA07 JUMPI ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO DUP1 ISZERO SWAP1 DUP2 SWAP1 PUSH2 0x818 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x832 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xA04 JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x87D JUMPI PUSH2 0x87D PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91D SWAP2 SWAP1 PUSH2 0x1054 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x930 JUMPI PUSH2 0x930 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x994 SWAP1 DUP7 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x106F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9BD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP SELFBALANCE SWAP3 POP POP DUP2 ISZERO SWAP1 POP PUSH2 0x9F4 JUMPI PUSH2 0x9F4 PUSH32 0x0 DUP3 PUSH2 0xBF6 JUMP JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMPDEST PUSH2 0xA12 DUP6 DUP6 DUP4 PUSH2 0xB99 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xA26 DUP6 DUP3 DUP6 PUSH2 0x709 JUMP JUMPDEST PUSH2 0xA31 DUP6 DUP6 DUP6 PUSH2 0xB99 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4A0 DUP2 DUP6 DUP6 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xAF0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB19 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x77E JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB8B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBEB JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x704 DUP4 DUP4 DUP4 PUSH2 0xD0B JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x704 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD35 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xDA5 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD87 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDC1 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE24 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE5D JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xE40 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xEAC DUP2 PUSH2 0xE7C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xECC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xED7 DUP2 PUSH2 0xE7C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xEE7 DUP2 PUSH2 0xE7C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF08 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF13 DUP2 PUSH2 0xE7C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF2B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF36 DUP2 PUSH2 0xE7C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF4A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF65 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF7D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF88 DUP2 PUSH2 0xE7C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xF4A DUP2 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFAC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFCA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0xFD0 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1015 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0xFD0 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0xFD0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1064 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF13 DUP2 PUSH2 0xE7C JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE DUP7 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP5 ADD MSTORE DUP1 DUP7 MLOAD DUP1 DUP4 MSTORE PUSH1 0xC0 DUP6 ADD SWAP2 POP PUSH1 0x20 DUP9 ADD SWAP3 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10BF JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1098 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x60 DUP5 ADD MSTORE POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SLT 0xCE SMOD KECCAK256 0x2B 0xCF PUSH15 0xA3146E4A83775F1D4EE32086F642F0 PUSH23 0xEE90AFD024EA043E64736F6C634300081A003300000000 ",
							"sourceMap": "410:4681:6:-:0;;;810:1;785:26;;1156:663;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1247:10;1896:113:2;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3096:51:10;3069:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;1270:34:6;::::2;;::::0;1329:12:::2;1315:11;:26:::0;734:42:::2;1352:55;::::0;;;1452:25:::2;::::0;;-1:-1:-1;;;1452:25:6;;;;:23:::2;::::0;:25:::2;::::0;;::::2;::::0;-1:-1:-1;;1452:25:6;;;;;;;;734:42;1452:25:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1434:55:6::2;;1512:4;1532:15;;-1:-1:-1::0;;;;;1532:20:6::2;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1434:131;::::0;-1:-1:-1;;;;;;1434:131:6::2;::::0;;;;;;-1:-1:-1;;;;;3350:32:10;;;1434:131:6::2;::::0;::::2;3332:51:10::0;3419:32;;3399:18;;;3392:60;3305:18;;1434:131:6::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1418:13;:147:::0;;-1:-1:-1;;;;;;1418:147:6::2;-1:-1:-1::0;;;;;1418:147:6;;;::::2;::::0;;;::::2;::::0;;1576:57:::2;1593:4;667:6;-1:-1:-1::0;;1576:8:6::2;:57::i;:::-;1675:4;1644:19;:28;1664:7;1710:6:0::0;;-1:-1:-1;;;;;1710:6:0;;1638:85;1664:7:6::2;-1:-1:-1::0;;;;;1644:28:6::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;1644:28:6;;;:35;;;::::2;;-1:-1:-1::0;;1644:35:6;;::::2;;::::0;;1690:19:::2;:25:::0;;;;:32;;;::::2;1644:35:::0;1690:32;;::::2;::::0;;;1761:4:::2;1733:34:::0;;;;:41;;;;::::2;;::::0;;1787:24:::2;1793:10;1805:5;1787;:24::i;:::-;1156:663:::0;410:4681;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;7721:208::-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;3096:51:10;3069:18;;7835:32:2;2950:203:10;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;3096:51:10;3069:18;;10103:32:2;2950:203:10;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;3096:51:10;3069:18;;10203:31:2;2950:203:10;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;3609:25:10;;3597:2;3582:18;;3463:177;10333:31:2;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;4092:32:10;;6649:50:2;;;4074:51:10;4141:18;;;4134:34;;;4184:18;;;4177:34;;;4047:18;;6649:50:2;3872:345:10;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;3609::10;;3597:2;3582:18;;3463:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:290:10:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:10;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:10:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:10;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;952:518;;;:::o;1646:1299::-;1766:10;;-1:-1:-1;;;;;1788:30:10;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;1996:4;2027:2;2016:14;;2044:1;2039:649;;;;2732:1;2749:6;2746:89;;;-1:-1:-1;2801:19:10;;;2795:26;2746:89;-1:-1:-1;;1603:1:10;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2848:81;;2009:930;;2039:649;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2075:20:10;;;2193:222;2207:7;2204:1;2201:14;2193:222;;;2289:19;;;2283:26;2268:42;;2396:4;2381:20;;;;2349:1;2337:14;;;;2223:12;2193:222;;;2197:3;2443:6;2434:7;2431:19;2428:201;;;2504:19;;;2498:26;-1:-1:-1;;2587:1:10;2583:14;;;2599:3;2579:24;2575:37;2571:42;2556:58;2541:74;;2428:201;-1:-1:-1;;;;2675:1:10;2659:14;;;2655:22;2642:36;;-1:-1:-1;1646:1299:10:o;3645:222::-;3710:9;;;3731:10;;;3728:133;;;3783:10;3778:3;3774:20;3771:1;3764:31;3818:4;3815:1;3808:15;3846:4;3843:1;3836:15;3728:133;3645:222;;;;:::o;3872:345::-;410:4681:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEAD_955": {
									"entryPoint": null,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UNISWAP_V2_ROUTER_958": {
									"entryPoint": null,
									"id": 958,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1076": {
									"entryPoint": null,
									"id": 1076,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 1783,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2759,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2620,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1801,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2665,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferWithTax_1364": {
									"entryPoint": 1924,
									"id": 1364,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2969,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3339,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1171,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@excludeFromFees_1416": {
									"entryPoint": 1536,
									"id": 1416,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isExcludedFromFees_1376": {
									"entryPoint": null,
									"id": 1376,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 1027,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1360,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sendETH_1109": {
									"entryPoint": 3062,
									"id": 1109,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTaxRate_1395": {
									"entryPoint": 1638,
									"id": 1395,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1379,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxRate_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1219": {
									"entryPoint": 1196,
									"id": 1219,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2585,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1722,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1160": {
									"entryPoint": 1394,
									"id": 1160,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 2746,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniswapV2Pair_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapV2Router_964": {
									"entryPoint": null,
									"id": 964,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 4180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router02_$1776__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f82563bb70a22b157eb14fc3c2b9496aeb100294c9c03d469c6ab75fef2c1d9c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4207,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4160,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8215:10",
										"nodeType": "YulBlock",
										"src": "0:8215:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:10",
													"nodeType": "YulBlock",
													"src": "115:102:10",
													"statements": [
														{
															"nativeSrc": "125:26:10",
															"nodeType": "YulAssignment",
															"src": "125:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:10",
																		"nodeType": "YulLiteral",
																		"src": "148:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:10"
																},
																"nativeSrc": "133:18:10",
																"nodeType": "YulFunctionCall",
																"src": "133:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:10",
																								"nodeType": "YulLiteral",
																								"src": "198:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:10",
																								"nodeType": "YulLiteral",
																								"src": "203:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:10"
																						},
																						"nativeSrc": "194:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:10",
																						"nodeType": "YulLiteral",
																						"src": "207:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:10"
																				},
																				"nativeSrc": "190:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:10"
																		},
																		"nativeSrc": "178:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nativeSrc": "160:51:10",
																"nodeType": "YulFunctionCall",
																"src": "160:51:10"
															},
															"nativeSrc": "160:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:10",
														"nodeType": "YulTypedName",
														"src": "84:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:10",
														"nodeType": "YulTypedName",
														"src": "95:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:10",
														"nodeType": "YulTypedName",
														"src": "106:4:10",
														"type": ""
													}
												],
												"src": "14:203:10"
											},
											{
												"body": {
													"nativeSrc": "343:406:10",
													"nodeType": "YulBlock",
													"src": "343:406:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "360:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "371:2:10",
																		"nodeType": "YulLiteral",
																		"src": "371:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "353:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "353:6:10"
																},
																"nativeSrc": "353:21:10",
																"nodeType": "YulFunctionCall",
																"src": "353:21:10"
															},
															"nativeSrc": "353:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "353:21:10"
														},
														{
															"nativeSrc": "383:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "383:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "403:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "403:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "397:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "397:5:10"
																},
																"nativeSrc": "397:13:10",
																"nodeType": "YulFunctionCall",
																"src": "397:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "387:6:10",
																	"nodeType": "YulTypedName",
																	"src": "387:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "430:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "430:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "441:2:10",
																				"nodeType": "YulLiteral",
																				"src": "441:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "426:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "426:3:10"
																		},
																		"nativeSrc": "426:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "426:18:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "446:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "446:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "419:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:10"
																},
																"nativeSrc": "419:34:10",
																"nodeType": "YulFunctionCall",
																"src": "419:34:10"
															},
															"nativeSrc": "419:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "419:34:10"
														},
														{
															"nativeSrc": "462:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "462:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "471:1:10",
																"nodeType": "YulLiteral",
																"src": "471:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "466:1:10",
																	"nodeType": "YulTypedName",
																	"src": "466:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "531:90:10",
																"nodeType": "YulBlock",
																"src": "531:90:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "560:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "560:9:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "571:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "571:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "556:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "556:3:10"
																							},
																							"nativeSrc": "556:17:10",
																							"nodeType": "YulFunctionCall",
																							"src": "556:17:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "575:2:10",
																							"nodeType": "YulLiteral",
																							"src": "575:2:10",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "552:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "552:3:10"
																					},
																					"nativeSrc": "552:26:10",
																					"nodeType": "YulFunctionCall",
																					"src": "552:26:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "594:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "594:6:10"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "602:1:10",
																											"nodeType": "YulIdentifier",
																											"src": "602:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "590:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "590:3:10"
																									},
																									"nativeSrc": "590:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "590:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "606:2:10",
																									"nodeType": "YulLiteral",
																									"src": "606:2:10",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "586:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "586:3:10"
																							},
																							"nativeSrc": "586:23:10",
																							"nodeType": "YulFunctionCall",
																							"src": "586:23:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "580:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "580:5:10"
																					},
																					"nativeSrc": "580:30:10",
																					"nodeType": "YulFunctionCall",
																					"src": "580:30:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "545:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "545:6:10"
																			},
																			"nativeSrc": "545:66:10",
																			"nodeType": "YulFunctionCall",
																			"src": "545:66:10"
																		},
																		"nativeSrc": "545:66:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "545:66:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "492:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "492:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "495:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "495:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "489:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "489:2:10"
																},
																"nativeSrc": "489:13:10",
																"nodeType": "YulFunctionCall",
																"src": "489:13:10"
															},
															"nativeSrc": "481:140:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "503:19:10",
																"nodeType": "YulBlock",
																"src": "503:19:10",
																"statements": [
																	{
																		"nativeSrc": "505:15:10",
																		"nodeType": "YulAssignment",
																		"src": "505:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "514:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "514:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "517:2:10",
																					"nodeType": "YulLiteral",
																					"src": "517:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "510:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "510:3:10"
																			},
																			"nativeSrc": "510:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "510:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "505:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "505:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "485:3:10",
																"nodeType": "YulBlock",
																"src": "485:3:10",
																"statements": []
															},
															"src": "481:140:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "645:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "645:9:10"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "656:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "656:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "641:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:3:10"
																				},
																				"nativeSrc": "641:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:22:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "665:2:10",
																				"nodeType": "YulLiteral",
																				"src": "665:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "637:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "637:3:10"
																		},
																		"nativeSrc": "637:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "637:31:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "670:1:10",
																		"nodeType": "YulLiteral",
																		"src": "670:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "630:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "630:6:10"
																},
																"nativeSrc": "630:42:10",
																"nodeType": "YulFunctionCall",
																"src": "630:42:10"
															},
															"nativeSrc": "630:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "630:42:10"
														},
														{
															"nativeSrc": "681:62:10",
															"nodeType": "YulAssignment",
															"src": "681:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "697:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "697:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "716:6:10",
																								"nodeType": "YulIdentifier",
																								"src": "716:6:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "724:2:10",
																								"nodeType": "YulLiteral",
																								"src": "724:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "712:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "712:3:10"
																						},
																						"nativeSrc": "712:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "712:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "733:2:10",
																								"nodeType": "YulLiteral",
																								"src": "733:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "729:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "729:3:10"
																						},
																						"nativeSrc": "729:7:10",
																						"nodeType": "YulFunctionCall",
																						"src": "729:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "708:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:10"
																				},
																				"nativeSrc": "708:29:10",
																				"nodeType": "YulFunctionCall",
																				"src": "708:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "693:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "693:3:10"
																		},
																		"nativeSrc": "693:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "693:45:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "740:2:10",
																		"nodeType": "YulLiteral",
																		"src": "740:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "689:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "689:3:10"
																},
																"nativeSrc": "689:54:10",
																"nodeType": "YulFunctionCall",
																"src": "689:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "681:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "681:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "222:527:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "312:9:10",
														"nodeType": "YulTypedName",
														"src": "312:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "323:6:10",
														"nodeType": "YulTypedName",
														"src": "323:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "334:4:10",
														"nodeType": "YulTypedName",
														"src": "334:4:10",
														"type": ""
													}
												],
												"src": "222:527:10"
											},
											{
												"body": {
													"nativeSrc": "799:86:10",
													"nodeType": "YulBlock",
													"src": "799:86:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "863:16:10",
																"nodeType": "YulBlock",
																"src": "863:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "872:1:10",
																					"nodeType": "YulLiteral",
																					"src": "872:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "875:1:10",
																					"nodeType": "YulLiteral",
																					"src": "875:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "865:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "865:6:10"
																			},
																			"nativeSrc": "865:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "865:12:10"
																		},
																		"nativeSrc": "865:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "865:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "822:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "822:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "833:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "833:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "848:3:10",
																										"nodeType": "YulLiteral",
																										"src": "848:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "853:1:10",
																										"nodeType": "YulLiteral",
																										"src": "853:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "844:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "844:3:10"
																								},
																								"nativeSrc": "844:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "844:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "857:1:10",
																								"nodeType": "YulLiteral",
																								"src": "857:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "840:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "840:3:10"
																						},
																						"nativeSrc": "840:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "840:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "829:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "829:3:10"
																				},
																				"nativeSrc": "829:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "829:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "819:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "819:2:10"
																		},
																		"nativeSrc": "819:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "819:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "812:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "812:6:10"
																},
																"nativeSrc": "812:50:10",
																"nodeType": "YulFunctionCall",
																"src": "812:50:10"
															},
															"nativeSrc": "809:70:10",
															"nodeType": "YulIf",
															"src": "809:70:10"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "754:131:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "788:5:10",
														"nodeType": "YulTypedName",
														"src": "788:5:10",
														"type": ""
													}
												],
												"src": "754:131:10"
											},
											{
												"body": {
													"nativeSrc": "977:280:10",
													"nodeType": "YulBlock",
													"src": "977:280:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1023:16:10",
																"nodeType": "YulBlock",
																"src": "1023:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1035:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1035:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1025:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:10"
																			},
																			"nativeSrc": "1025:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1025:12:10"
																		},
																		"nativeSrc": "1025:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "998:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "998:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1007:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1007:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "994:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "994:3:10"
																		},
																		"nativeSrc": "994:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "994:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1019:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1019:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "990:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "990:3:10"
																},
																"nativeSrc": "990:32:10",
																"nodeType": "YulFunctionCall",
																"src": "990:32:10"
															},
															"nativeSrc": "987:52:10",
															"nodeType": "YulIf",
															"src": "987:52:10"
														},
														{
															"nativeSrc": "1048:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1048:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1074:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1074:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1061:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:10"
																},
																"nativeSrc": "1061:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1061:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1052:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1052:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1118:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1118:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1093:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "1093:24:10"
																},
																"nativeSrc": "1093:31:10",
																"nodeType": "YulFunctionCall",
																"src": "1093:31:10"
															},
															"nativeSrc": "1093:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "1093:31:10"
														},
														{
															"nativeSrc": "1133:15:10",
															"nodeType": "YulAssignment",
															"src": "1133:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1143:5:10",
																"nodeType": "YulIdentifier",
																"src": "1143:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1133:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1133:6:10"
																}
															]
														},
														{
															"nativeSrc": "1157:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1157:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1172:1:10",
																"nodeType": "YulLiteral",
																"src": "1172:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1161:7:10",
																	"nodeType": "YulTypedName",
																	"src": "1161:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1182:43:10",
															"nodeType": "YulAssignment",
															"src": "1182:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1210:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1210:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1221:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1221:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1206:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1206:3:10"
																		},
																		"nativeSrc": "1206:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1206:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1193:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1193:12:10"
																},
																"nativeSrc": "1193:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1193:32:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1182:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1182:7:10"
																}
															]
														},
														{
															"nativeSrc": "1234:17:10",
															"nodeType": "YulAssignment",
															"src": "1234:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "1244:7:10",
																"nodeType": "YulIdentifier",
																"src": "1244:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1234:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1234:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "890:367:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "935:9:10",
														"nodeType": "YulTypedName",
														"src": "935:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "946:7:10",
														"nodeType": "YulTypedName",
														"src": "946:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "958:6:10",
														"nodeType": "YulTypedName",
														"src": "958:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "966:6:10",
														"nodeType": "YulTypedName",
														"src": "966:6:10",
														"type": ""
													}
												],
												"src": "890:367:10"
											},
											{
												"body": {
													"nativeSrc": "1357:92:10",
													"nodeType": "YulBlock",
													"src": "1357:92:10",
													"statements": [
														{
															"nativeSrc": "1367:26:10",
															"nodeType": "YulAssignment",
															"src": "1367:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1379:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1379:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1390:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1375:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1375:3:10"
																},
																"nativeSrc": "1375:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1375:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1367:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1367:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1409:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1409:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1434:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1434:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1427:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "1427:6:10"
																				},
																				"nativeSrc": "1427:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1427:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1420:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1420:6:10"
																		},
																		"nativeSrc": "1420:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1420:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1402:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1402:6:10"
																},
																"nativeSrc": "1402:41:10",
																"nodeType": "YulFunctionCall",
																"src": "1402:41:10"
															},
															"nativeSrc": "1402:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "1402:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1262:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1326:9:10",
														"nodeType": "YulTypedName",
														"src": "1326:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1337:6:10",
														"nodeType": "YulTypedName",
														"src": "1337:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1348:4:10",
														"nodeType": "YulTypedName",
														"src": "1348:4:10",
														"type": ""
													}
												],
												"src": "1262:187:10"
											},
											{
												"body": {
													"nativeSrc": "1582:102:10",
													"nodeType": "YulBlock",
													"src": "1582:102:10",
													"statements": [
														{
															"nativeSrc": "1592:26:10",
															"nodeType": "YulAssignment",
															"src": "1592:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1604:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1604:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1615:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1615:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1600:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:10"
																},
																"nativeSrc": "1600:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1600:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1592:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1592:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1634:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1634:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1649:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1649:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1665:3:10",
																								"nodeType": "YulLiteral",
																								"src": "1665:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1670:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1670:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1661:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1661:3:10"
																						},
																						"nativeSrc": "1661:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1661:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1674:1:10",
																						"nodeType": "YulLiteral",
																						"src": "1674:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1657:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1657:3:10"
																				},
																				"nativeSrc": "1657:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1657:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1645:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1645:3:10"
																		},
																		"nativeSrc": "1645:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1645:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1627:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:10"
																},
																"nativeSrc": "1627:51:10",
																"nodeType": "YulFunctionCall",
																"src": "1627:51:10"
															},
															"nativeSrc": "1627:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "1627:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$1776__to_t_address__fromStack_reversed",
												"nativeSrc": "1454:230:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1551:9:10",
														"nodeType": "YulTypedName",
														"src": "1551:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1562:6:10",
														"nodeType": "YulTypedName",
														"src": "1562:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1573:4:10",
														"nodeType": "YulTypedName",
														"src": "1573:4:10",
														"type": ""
													}
												],
												"src": "1454:230:10"
											},
											{
												"body": {
													"nativeSrc": "1790:76:10",
													"nodeType": "YulBlock",
													"src": "1790:76:10",
													"statements": [
														{
															"nativeSrc": "1800:26:10",
															"nodeType": "YulAssignment",
															"src": "1800:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1812:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1812:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1823:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1823:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1808:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1808:3:10"
																},
																"nativeSrc": "1808:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1808:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1800:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1800:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1842:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1842:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1853:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1853:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1835:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1835:6:10"
																},
																"nativeSrc": "1835:25:10",
																"nodeType": "YulFunctionCall",
																"src": "1835:25:10"
															},
															"nativeSrc": "1835:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "1835:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1689:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1759:9:10",
														"nodeType": "YulTypedName",
														"src": "1759:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1770:6:10",
														"nodeType": "YulTypedName",
														"src": "1770:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1781:4:10",
														"nodeType": "YulTypedName",
														"src": "1781:4:10",
														"type": ""
													}
												],
												"src": "1689:177:10"
											},
											{
												"body": {
													"nativeSrc": "1975:404:10",
													"nodeType": "YulBlock",
													"src": "1975:404:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2021:16:10",
																"nodeType": "YulBlock",
																"src": "2021:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2030:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2030:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2033:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2033:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2023:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2023:6:10"
																			},
																			"nativeSrc": "2023:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2023:12:10"
																		},
																		"nativeSrc": "2023:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2023:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1996:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1996:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2005:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2005:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1992:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1992:3:10"
																		},
																		"nativeSrc": "1992:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2017:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2017:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1988:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1988:3:10"
																},
																"nativeSrc": "1988:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1988:32:10"
															},
															"nativeSrc": "1985:52:10",
															"nodeType": "YulIf",
															"src": "1985:52:10"
														},
														{
															"nativeSrc": "2046:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2046:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2072:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2072:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2059:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2059:12:10"
																},
																"nativeSrc": "2059:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2059:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2050:5:10",
																	"nodeType": "YulTypedName",
																	"src": "2050:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2116:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2116:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2091:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "2091:24:10"
																},
																"nativeSrc": "2091:31:10",
																"nodeType": "YulFunctionCall",
																"src": "2091:31:10"
															},
															"nativeSrc": "2091:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "2091:31:10"
														},
														{
															"nativeSrc": "2131:15:10",
															"nodeType": "YulAssignment",
															"src": "2131:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "2141:5:10",
																"nodeType": "YulIdentifier",
																"src": "2141:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2131:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:10"
																}
															]
														},
														{
															"nativeSrc": "2155:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2155:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2187:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2187:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2198:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2198:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2183:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:10"
																		},
																		"nativeSrc": "2183:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2183:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2170:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2170:12:10"
																},
																"nativeSrc": "2170:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2170:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2159:7:10",
																	"nodeType": "YulTypedName",
																	"src": "2159:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2236:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "2236:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2211:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "2211:24:10"
																},
																"nativeSrc": "2211:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2211:33:10"
															},
															"nativeSrc": "2211:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2211:33:10"
														},
														{
															"nativeSrc": "2253:17:10",
															"nodeType": "YulAssignment",
															"src": "2253:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "2263:7:10",
																"nodeType": "YulIdentifier",
																"src": "2263:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2253:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2253:6:10"
																}
															]
														},
														{
															"nativeSrc": "2279:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2279:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2294:1:10",
																"nodeType": "YulLiteral",
																"src": "2294:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2283:7:10",
																	"nodeType": "YulTypedName",
																	"src": "2283:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2304:43:10",
															"nodeType": "YulAssignment",
															"src": "2304:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2332:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2343:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2343:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2328:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2328:3:10"
																		},
																		"nativeSrc": "2328:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2328:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2315:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2315:12:10"
																},
																"nativeSrc": "2315:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2315:32:10"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "2304:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2304:7:10"
																}
															]
														},
														{
															"nativeSrc": "2356:17:10",
															"nodeType": "YulAssignment",
															"src": "2356:17:10",
															"value": {
																"name": "value_2",
																"nativeSrc": "2366:7:10",
																"nodeType": "YulIdentifier",
																"src": "2366:7:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2356:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2356:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1871:508:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1925:9:10",
														"nodeType": "YulTypedName",
														"src": "1925:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1936:7:10",
														"nodeType": "YulTypedName",
														"src": "1936:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1948:6:10",
														"nodeType": "YulTypedName",
														"src": "1948:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1956:6:10",
														"nodeType": "YulTypedName",
														"src": "1956:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1964:6:10",
														"nodeType": "YulTypedName",
														"src": "1964:6:10",
														"type": ""
													}
												],
												"src": "1871:508:10"
											},
											{
												"body": {
													"nativeSrc": "2481:87:10",
													"nodeType": "YulBlock",
													"src": "2481:87:10",
													"statements": [
														{
															"nativeSrc": "2491:26:10",
															"nodeType": "YulAssignment",
															"src": "2491:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2503:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2503:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2514:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2514:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2499:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2499:3:10"
																},
																"nativeSrc": "2499:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2499:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2491:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2491:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2533:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2533:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2548:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2548:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2556:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2556:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2544:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2544:3:10"
																		},
																		"nativeSrc": "2544:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2544:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2526:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2526:6:10"
																},
																"nativeSrc": "2526:36:10",
																"nodeType": "YulFunctionCall",
																"src": "2526:36:10"
															},
															"nativeSrc": "2526:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "2526:36:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2384:184:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2450:9:10",
														"nodeType": "YulTypedName",
														"src": "2450:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2461:6:10",
														"nodeType": "YulTypedName",
														"src": "2461:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2472:4:10",
														"nodeType": "YulTypedName",
														"src": "2472:4:10",
														"type": ""
													}
												],
												"src": "2384:184:10"
											},
											{
												"body": {
													"nativeSrc": "2643:177:10",
													"nodeType": "YulBlock",
													"src": "2643:177:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2689:16:10",
																"nodeType": "YulBlock",
																"src": "2689:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2698:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2698:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2701:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2701:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2691:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2691:6:10"
																			},
																			"nativeSrc": "2691:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2691:12:10"
																		},
																		"nativeSrc": "2691:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2691:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2664:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2664:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2673:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2673:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2660:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2660:3:10"
																		},
																		"nativeSrc": "2660:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2660:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2685:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2685:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2656:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2656:3:10"
																},
																"nativeSrc": "2656:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2656:32:10"
															},
															"nativeSrc": "2653:52:10",
															"nodeType": "YulIf",
															"src": "2653:52:10"
														},
														{
															"nativeSrc": "2714:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2714:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2740:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2740:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2727:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2727:12:10"
																},
																"nativeSrc": "2727:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2727:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2718:5:10",
																	"nodeType": "YulTypedName",
																	"src": "2718:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2784:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2784:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2759:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "2759:24:10"
																},
																"nativeSrc": "2759:31:10",
																"nodeType": "YulFunctionCall",
																"src": "2759:31:10"
															},
															"nativeSrc": "2759:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "2759:31:10"
														},
														{
															"nativeSrc": "2799:15:10",
															"nodeType": "YulAssignment",
															"src": "2799:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "2809:5:10",
																"nodeType": "YulIdentifier",
																"src": "2809:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2799:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2799:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2573:247:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2609:9:10",
														"nodeType": "YulTypedName",
														"src": "2609:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2620:7:10",
														"nodeType": "YulTypedName",
														"src": "2620:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2632:6:10",
														"nodeType": "YulTypedName",
														"src": "2632:6:10",
														"type": ""
													}
												],
												"src": "2573:247:10"
											},
											{
												"body": {
													"nativeSrc": "2909:332:10",
													"nodeType": "YulBlock",
													"src": "2909:332:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2955:16:10",
																"nodeType": "YulBlock",
																"src": "2955:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2964:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2964:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2967:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2967:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2957:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2957:6:10"
																			},
																			"nativeSrc": "2957:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2957:12:10"
																		},
																		"nativeSrc": "2957:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2957:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2930:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2930:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2939:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2939:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2926:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2926:3:10"
																		},
																		"nativeSrc": "2926:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2926:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2951:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2951:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2922:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:10"
																},
																"nativeSrc": "2922:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2922:32:10"
															},
															"nativeSrc": "2919:52:10",
															"nodeType": "YulIf",
															"src": "2919:52:10"
														},
														{
															"nativeSrc": "2980:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2980:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3006:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3006:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2993:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2993:12:10"
																},
																"nativeSrc": "2993:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2993:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2984:5:10",
																	"nodeType": "YulTypedName",
																	"src": "2984:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3050:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3025:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "3025:24:10"
																},
																"nativeSrc": "3025:31:10",
																"nodeType": "YulFunctionCall",
																"src": "3025:31:10"
															},
															"nativeSrc": "3025:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "3025:31:10"
														},
														{
															"nativeSrc": "3065:15:10",
															"nodeType": "YulAssignment",
															"src": "3065:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3075:5:10",
																"nodeType": "YulIdentifier",
																"src": "3075:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3065:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:10"
																}
															]
														},
														{
															"nativeSrc": "3089:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3089:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3121:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3121:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3132:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3132:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3117:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3117:3:10"
																		},
																		"nativeSrc": "3117:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3117:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3104:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3104:12:10"
																},
																"nativeSrc": "3104:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3104:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3093:7:10",
																	"nodeType": "YulTypedName",
																	"src": "3093:7:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3193:16:10",
																"nodeType": "YulBlock",
																"src": "3193:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3202:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3202:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3205:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3205:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3195:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3195:6:10"
																			},
																			"nativeSrc": "3195:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3195:12:10"
																		},
																		"nativeSrc": "3195:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3195:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "3158:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3158:7:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_1",
																								"nativeSrc": "3181:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "3181:7:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3174:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "3174:6:10"
																						},
																						"nativeSrc": "3174:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3174:15:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3167:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "3167:6:10"
																				},
																				"nativeSrc": "3167:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3167:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3155:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3155:2:10"
																		},
																		"nativeSrc": "3155:36:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3155:36:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3148:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3148:6:10"
																},
																"nativeSrc": "3148:44:10",
																"nodeType": "YulFunctionCall",
																"src": "3148:44:10"
															},
															"nativeSrc": "3145:64:10",
															"nodeType": "YulIf",
															"src": "3145:64:10"
														},
														{
															"nativeSrc": "3218:17:10",
															"nodeType": "YulAssignment",
															"src": "3218:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "3228:7:10",
																"nodeType": "YulIdentifier",
																"src": "3228:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3218:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2825:416:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2867:9:10",
														"nodeType": "YulTypedName",
														"src": "2867:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2878:7:10",
														"nodeType": "YulTypedName",
														"src": "2878:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2890:6:10",
														"nodeType": "YulTypedName",
														"src": "2890:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2898:6:10",
														"nodeType": "YulTypedName",
														"src": "2898:6:10",
														"type": ""
													}
												],
												"src": "2825:416:10"
											},
											{
												"body": {
													"nativeSrc": "3316:156:10",
													"nodeType": "YulBlock",
													"src": "3316:156:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3362:16:10",
																"nodeType": "YulBlock",
																"src": "3362:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3371:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3371:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3374:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3374:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3364:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3364:6:10"
																			},
																			"nativeSrc": "3364:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3364:12:10"
																		},
																		"nativeSrc": "3364:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3364:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3337:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3337:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3346:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3346:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3333:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3333:3:10"
																		},
																		"nativeSrc": "3333:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3333:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3358:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3358:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3329:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3329:3:10"
																},
																"nativeSrc": "3329:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3329:32:10"
															},
															"nativeSrc": "3326:52:10",
															"nodeType": "YulIf",
															"src": "3326:52:10"
														},
														{
															"nativeSrc": "3387:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3387:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3400:1:10",
																"nodeType": "YulLiteral",
																"src": "3400:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3391:5:10",
																	"nodeType": "YulTypedName",
																	"src": "3391:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3410:32:10",
															"nodeType": "YulAssignment",
															"src": "3410:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3432:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3432:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3419:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3419:12:10"
																},
																"nativeSrc": "3419:23:10",
																"nodeType": "YulFunctionCall",
																"src": "3419:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3410:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3410:5:10"
																}
															]
														},
														{
															"nativeSrc": "3451:15:10",
															"nodeType": "YulAssignment",
															"src": "3451:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3461:5:10",
																"nodeType": "YulIdentifier",
																"src": "3461:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3451:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3451:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3246:226:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3282:9:10",
														"nodeType": "YulTypedName",
														"src": "3282:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3293:7:10",
														"nodeType": "YulTypedName",
														"src": "3293:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3305:6:10",
														"nodeType": "YulTypedName",
														"src": "3305:6:10",
														"type": ""
													}
												],
												"src": "3246:226:10"
											},
											{
												"body": {
													"nativeSrc": "3564:301:10",
													"nodeType": "YulBlock",
													"src": "3564:301:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3610:16:10",
																"nodeType": "YulBlock",
																"src": "3610:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3619:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3619:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3622:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3622:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3612:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3612:6:10"
																			},
																			"nativeSrc": "3612:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3612:12:10"
																		},
																		"nativeSrc": "3612:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3612:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3585:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3585:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3594:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3594:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3581:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3581:3:10"
																		},
																		"nativeSrc": "3581:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3581:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3606:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3606:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3577:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3577:3:10"
																},
																"nativeSrc": "3577:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3577:32:10"
															},
															"nativeSrc": "3574:52:10",
															"nodeType": "YulIf",
															"src": "3574:52:10"
														},
														{
															"nativeSrc": "3635:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3635:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3661:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3661:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3648:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3648:12:10"
																},
																"nativeSrc": "3648:23:10",
																"nodeType": "YulFunctionCall",
																"src": "3648:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3639:5:10",
																	"nodeType": "YulTypedName",
																	"src": "3639:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3705:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3705:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3680:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "3680:24:10"
																},
																"nativeSrc": "3680:31:10",
																"nodeType": "YulFunctionCall",
																"src": "3680:31:10"
															},
															"nativeSrc": "3680:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "3680:31:10"
														},
														{
															"nativeSrc": "3720:15:10",
															"nodeType": "YulAssignment",
															"src": "3720:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3730:5:10",
																"nodeType": "YulIdentifier",
																"src": "3730:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3720:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3720:6:10"
																}
															]
														},
														{
															"nativeSrc": "3744:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3744:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3776:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3776:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3787:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3787:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3772:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3772:3:10"
																		},
																		"nativeSrc": "3772:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3772:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3759:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3759:12:10"
																},
																"nativeSrc": "3759:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3759:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3748:7:10",
																	"nodeType": "YulTypedName",
																	"src": "3748:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3825:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "3825:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3800:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "3800:24:10"
																},
																"nativeSrc": "3800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3800:33:10"
															},
															"nativeSrc": "3800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3800:33:10"
														},
														{
															"nativeSrc": "3842:17:10",
															"nodeType": "YulAssignment",
															"src": "3842:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "3852:7:10",
																"nodeType": "YulIdentifier",
																"src": "3852:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3842:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3477:388:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3522:9:10",
														"nodeType": "YulTypedName",
														"src": "3522:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3533:7:10",
														"nodeType": "YulTypedName",
														"src": "3533:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3545:6:10",
														"nodeType": "YulTypedName",
														"src": "3545:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3553:6:10",
														"nodeType": "YulTypedName",
														"src": "3553:6:10",
														"type": ""
													}
												],
												"src": "3477:388:10"
											},
											{
												"body": {
													"nativeSrc": "3925:325:10",
													"nodeType": "YulBlock",
													"src": "3925:325:10",
													"statements": [
														{
															"nativeSrc": "3935:22:10",
															"nodeType": "YulAssignment",
															"src": "3935:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3949:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3949:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3952:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3952:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3945:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:10"
																},
																"nativeSrc": "3945:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3945:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3935:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3935:6:10"
																}
															]
														},
														{
															"nativeSrc": "3966:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3966:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3996:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3996:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4002:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4002:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3992:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3992:3:10"
																},
																"nativeSrc": "3992:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3992:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3970:18:10",
																	"nodeType": "YulTypedName",
																	"src": "3970:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4043:31:10",
																"nodeType": "YulBlock",
																"src": "4043:31:10",
																"statements": [
																	{
																		"nativeSrc": "4045:27:10",
																		"nodeType": "YulAssignment",
																		"src": "4045:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4059:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "4059:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4067:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4067:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4055:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4055:3:10"
																			},
																			"nativeSrc": "4055:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4055:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4045:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4045:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4023:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4023:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4016:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4016:6:10"
																},
																"nativeSrc": "4016:26:10",
																"nodeType": "YulFunctionCall",
																"src": "4016:26:10"
															},
															"nativeSrc": "4013:61:10",
															"nodeType": "YulIf",
															"src": "4013:61:10"
														},
														{
															"body": {
																"nativeSrc": "4133:111:10",
																"nodeType": "YulBlock",
																"src": "4133:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4154:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4154:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4161:3:10",
																							"nodeType": "YulLiteral",
																							"src": "4161:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4166:10:10",
																							"nodeType": "YulLiteral",
																							"src": "4166:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4157:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4157:3:10"
																					},
																					"nativeSrc": "4157:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4157:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4147:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4147:6:10"
																			},
																			"nativeSrc": "4147:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4147:31:10"
																		},
																		"nativeSrc": "4147:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4147:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4198:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4198:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4201:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4201:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4191:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4191:6:10"
																			},
																			"nativeSrc": "4191:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4191:15:10"
																		},
																		"nativeSrc": "4191:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4191:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4226:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4226:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4229:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4229:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4219:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4219:6:10"
																			},
																			"nativeSrc": "4219:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4219:15:10"
																		},
																		"nativeSrc": "4219:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4219:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4089:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4089:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4112:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4112:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4120:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4120:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4109:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4109:2:10"
																		},
																		"nativeSrc": "4109:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4109:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4086:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4086:2:10"
																},
																"nativeSrc": "4086:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4086:38:10"
															},
															"nativeSrc": "4083:161:10",
															"nodeType": "YulIf",
															"src": "4083:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3870:380:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3905:4:10",
														"nodeType": "YulTypedName",
														"src": "3905:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3914:6:10",
														"nodeType": "YulTypedName",
														"src": "3914:6:10",
														"type": ""
													}
												],
												"src": "3870:380:10"
											},
											{
												"body": {
													"nativeSrc": "4429:165:10",
													"nodeType": "YulBlock",
													"src": "4429:165:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4446:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4446:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4457:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4457:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4439:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4439:6:10"
																},
																"nativeSrc": "4439:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4439:21:10"
															},
															"nativeSrc": "4439:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4439:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4480:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4480:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4491:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4491:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4476:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4476:3:10"
																		},
																		"nativeSrc": "4476:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4476:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4496:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4496:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4469:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4469:6:10"
																},
																"nativeSrc": "4469:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4469:30:10"
															},
															"nativeSrc": "4469:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4469:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4519:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4519:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4530:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4530:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4515:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4515:3:10"
																		},
																		"nativeSrc": "4515:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4515:18:10"
																	},
																	{
																		"hexValue": "496e76616c69642074617852617465",
																		"kind": "string",
																		"nativeSrc": "4535:17:10",
																		"nodeType": "YulLiteral",
																		"src": "4535:17:10",
																		"type": "",
																		"value": "Invalid taxRate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4508:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4508:6:10"
																},
																"nativeSrc": "4508:45:10",
																"nodeType": "YulFunctionCall",
																"src": "4508:45:10"
															},
															"nativeSrc": "4508:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "4508:45:10"
														},
														{
															"nativeSrc": "4562:26:10",
															"nodeType": "YulAssignment",
															"src": "4562:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4574:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4574:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4585:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4585:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4570:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:10"
																},
																"nativeSrc": "4570:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4570:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4562:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4562:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f82563bb70a22b157eb14fc3c2b9496aeb100294c9c03d469c6ab75fef2c1d9c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4255:339:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4406:9:10",
														"nodeType": "YulTypedName",
														"src": "4406:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4420:4:10",
														"nodeType": "YulTypedName",
														"src": "4420:4:10",
														"type": ""
													}
												],
												"src": "4255:339:10"
											},
											{
												"body": {
													"nativeSrc": "4756:188:10",
													"nodeType": "YulBlock",
													"src": "4756:188:10",
													"statements": [
														{
															"nativeSrc": "4766:26:10",
															"nodeType": "YulAssignment",
															"src": "4766:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4778:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4778:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4789:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4789:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4774:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4774:3:10"
																},
																"nativeSrc": "4774:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4774:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4766:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4766:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4808:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4808:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4823:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4823:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4839:3:10",
																								"nodeType": "YulLiteral",
																								"src": "4839:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4844:1:10",
																								"nodeType": "YulLiteral",
																								"src": "4844:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4835:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4835:3:10"
																						},
																						"nativeSrc": "4835:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "4835:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4848:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4848:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4831:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4831:3:10"
																				},
																				"nativeSrc": "4831:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4831:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4819:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4819:3:10"
																		},
																		"nativeSrc": "4819:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4819:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4801:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4801:6:10"
																},
																"nativeSrc": "4801:51:10",
																"nodeType": "YulFunctionCall",
																"src": "4801:51:10"
															},
															"nativeSrc": "4801:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "4801:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4872:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4872:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4883:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4883:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4868:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4868:3:10"
																		},
																		"nativeSrc": "4868:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4868:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4888:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4888:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4861:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:10"
																},
																"nativeSrc": "4861:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4861:34:10"
															},
															"nativeSrc": "4861:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4861:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4915:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4915:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4926:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4926:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4911:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4911:3:10"
																		},
																		"nativeSrc": "4911:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4911:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4931:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4931:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4904:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4904:6:10"
																},
																"nativeSrc": "4904:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4904:34:10"
															},
															"nativeSrc": "4904:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4904:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4599:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4709:9:10",
														"nodeType": "YulTypedName",
														"src": "4709:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4720:6:10",
														"nodeType": "YulTypedName",
														"src": "4720:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4728:6:10",
														"nodeType": "YulTypedName",
														"src": "4728:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4736:6:10",
														"nodeType": "YulTypedName",
														"src": "4736:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4747:4:10",
														"nodeType": "YulTypedName",
														"src": "4747:4:10",
														"type": ""
													}
												],
												"src": "4599:345:10"
											},
											{
												"body": {
													"nativeSrc": "4981:95:10",
													"nodeType": "YulBlock",
													"src": "4981:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4998:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4998:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5005:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5005:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5010:10:10",
																				"nodeType": "YulLiteral",
																				"src": "5010:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5001:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5001:3:10"
																		},
																		"nativeSrc": "5001:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5001:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4991:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4991:6:10"
																},
																"nativeSrc": "4991:31:10",
																"nodeType": "YulFunctionCall",
																"src": "4991:31:10"
															},
															"nativeSrc": "4991:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "4991:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5038:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5038:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5041:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5041:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5031:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5031:6:10"
																},
																"nativeSrc": "5031:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5031:15:10"
															},
															"nativeSrc": "5031:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5031:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5062:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5062:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5065:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5065:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5055:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5055:6:10"
																},
																"nativeSrc": "5055:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5055:15:10"
															},
															"nativeSrc": "5055:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5055:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4949:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4949:127:10"
											},
											{
												"body": {
													"nativeSrc": "5133:116:10",
													"nodeType": "YulBlock",
													"src": "5133:116:10",
													"statements": [
														{
															"nativeSrc": "5143:20:10",
															"nodeType": "YulAssignment",
															"src": "5143:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5158:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5158:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5161:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5161:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5154:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5154:3:10"
																},
																"nativeSrc": "5154:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5154:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5143:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5143:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5221:22:10",
																"nodeType": "YulBlock",
																"src": "5221:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5223:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5223:16:10"
																			},
																			"nativeSrc": "5223:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5223:18:10"
																		},
																		"nativeSrc": "5223:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5223:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5192:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "5192:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5185:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "5185:6:10"
																				},
																				"nativeSrc": "5185:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5185:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5199:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "5199:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5206:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "5206:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5215:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "5215:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5202:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "5202:3:10"
																						},
																						"nativeSrc": "5202:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "5202:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5196:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5196:2:10"
																				},
																				"nativeSrc": "5196:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5196:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5182:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5182:2:10"
																		},
																		"nativeSrc": "5182:37:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5182:37:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5175:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5175:6:10"
																},
																"nativeSrc": "5175:45:10",
																"nodeType": "YulFunctionCall",
																"src": "5175:45:10"
															},
															"nativeSrc": "5172:71:10",
															"nodeType": "YulIf",
															"src": "5172:71:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5081:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5112:1:10",
														"nodeType": "YulTypedName",
														"src": "5112:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5115:1:10",
														"nodeType": "YulTypedName",
														"src": "5115:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5121:7:10",
														"nodeType": "YulTypedName",
														"src": "5121:7:10",
														"type": ""
													}
												],
												"src": "5081:168:10"
											},
											{
												"body": {
													"nativeSrc": "5300:171:10",
													"nodeType": "YulBlock",
													"src": "5300:171:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5331:111:10",
																"nodeType": "YulBlock",
																"src": "5331:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5352:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5352:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5359:3:10",
																							"nodeType": "YulLiteral",
																							"src": "5359:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5364:10:10",
																							"nodeType": "YulLiteral",
																							"src": "5364:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5355:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5355:3:10"
																					},
																					"nativeSrc": "5355:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5355:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5345:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5345:6:10"
																			},
																			"nativeSrc": "5345:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5345:31:10"
																		},
																		"nativeSrc": "5345:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5345:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5396:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5396:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5399:4:10",
																					"nodeType": "YulLiteral",
																					"src": "5399:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5389:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5389:6:10"
																			},
																			"nativeSrc": "5389:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5389:15:10"
																		},
																		"nativeSrc": "5389:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5389:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5424:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5424:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5427:4:10",
																					"nodeType": "YulLiteral",
																					"src": "5427:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5417:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5417:6:10"
																			},
																			"nativeSrc": "5417:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5417:15:10"
																		},
																		"nativeSrc": "5417:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5417:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5320:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5320:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5313:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5313:6:10"
																},
																"nativeSrc": "5313:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5313:9:10"
															},
															"nativeSrc": "5310:132:10",
															"nodeType": "YulIf",
															"src": "5310:132:10"
														},
														{
															"nativeSrc": "5451:14:10",
															"nodeType": "YulAssignment",
															"src": "5451:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5460:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5460:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5463:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5463:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5456:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5456:3:10"
																},
																"nativeSrc": "5456:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5456:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5451:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "5451:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5254:217:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5285:1:10",
														"nodeType": "YulTypedName",
														"src": "5285:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5288:1:10",
														"nodeType": "YulTypedName",
														"src": "5288:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5294:1:10",
														"nodeType": "YulTypedName",
														"src": "5294:1:10",
														"type": ""
													}
												],
												"src": "5254:217:10"
											},
											{
												"body": {
													"nativeSrc": "5525:79:10",
													"nodeType": "YulBlock",
													"src": "5525:79:10",
													"statements": [
														{
															"nativeSrc": "5535:17:10",
															"nodeType": "YulAssignment",
															"src": "5535:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5547:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5547:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5550:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5550:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5543:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5543:3:10"
																},
																"nativeSrc": "5543:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5543:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5535:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5535:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5576:22:10",
																"nodeType": "YulBlock",
																"src": "5576:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5578:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5578:16:10"
																			},
																			"nativeSrc": "5578:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5578:18:10"
																		},
																		"nativeSrc": "5578:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5578:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5567:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5567:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5573:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5573:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5564:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5564:2:10"
																},
																"nativeSrc": "5564:11:10",
																"nodeType": "YulFunctionCall",
																"src": "5564:11:10"
															},
															"nativeSrc": "5561:37:10",
															"nodeType": "YulIf",
															"src": "5561:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5476:128:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5507:1:10",
														"nodeType": "YulTypedName",
														"src": "5507:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5510:1:10",
														"nodeType": "YulTypedName",
														"src": "5510:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5516:4:10",
														"nodeType": "YulTypedName",
														"src": "5516:4:10",
														"type": ""
													}
												],
												"src": "5476:128:10"
											},
											{
												"body": {
													"nativeSrc": "5657:77:10",
													"nodeType": "YulBlock",
													"src": "5657:77:10",
													"statements": [
														{
															"nativeSrc": "5667:16:10",
															"nodeType": "YulAssignment",
															"src": "5667:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5678:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5678:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5681:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5681:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5674:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5674:3:10"
																},
																"nativeSrc": "5674:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5674:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5667:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5667:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5706:22:10",
																"nodeType": "YulBlock",
																"src": "5706:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5708:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5708:16:10"
																			},
																			"nativeSrc": "5708:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5708:18:10"
																		},
																		"nativeSrc": "5708:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5708:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5698:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5698:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5701:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5701:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5695:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5695:2:10"
																},
																"nativeSrc": "5695:10:10",
																"nodeType": "YulFunctionCall",
																"src": "5695:10:10"
															},
															"nativeSrc": "5692:36:10",
															"nodeType": "YulIf",
															"src": "5692:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5609:125:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5640:1:10",
														"nodeType": "YulTypedName",
														"src": "5640:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5643:1:10",
														"nodeType": "YulTypedName",
														"src": "5643:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5649:3:10",
														"nodeType": "YulTypedName",
														"src": "5649:3:10",
														"type": ""
													}
												],
												"src": "5609:125:10"
											},
											{
												"body": {
													"nativeSrc": "5771:95:10",
													"nodeType": "YulBlock",
													"src": "5771:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5788:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5788:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5795:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5795:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5800:10:10",
																				"nodeType": "YulLiteral",
																				"src": "5800:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5791:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5791:3:10"
																		},
																		"nativeSrc": "5791:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5791:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5781:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5781:6:10"
																},
																"nativeSrc": "5781:31:10",
																"nodeType": "YulFunctionCall",
																"src": "5781:31:10"
															},
															"nativeSrc": "5781:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "5781:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5828:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5828:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5831:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5831:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5821:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5821:6:10"
																},
																"nativeSrc": "5821:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5821:15:10"
															},
															"nativeSrc": "5821:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5821:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5852:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5852:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5855:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5855:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5845:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5845:6:10"
																},
																"nativeSrc": "5845:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5845:15:10"
															},
															"nativeSrc": "5845:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5845:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5739:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5739:127:10"
											},
											{
												"body": {
													"nativeSrc": "5903:95:10",
													"nodeType": "YulBlock",
													"src": "5903:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5920:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5920:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5927:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5927:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5932:10:10",
																				"nodeType": "YulLiteral",
																				"src": "5932:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5923:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5923:3:10"
																		},
																		"nativeSrc": "5923:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5923:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5913:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5913:6:10"
																},
																"nativeSrc": "5913:31:10",
																"nodeType": "YulFunctionCall",
																"src": "5913:31:10"
															},
															"nativeSrc": "5913:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "5913:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5960:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5960:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5963:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5963:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5953:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5953:6:10"
																},
																"nativeSrc": "5953:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5953:15:10"
															},
															"nativeSrc": "5953:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5953:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5984:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5984:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5987:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5987:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5977:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5977:6:10"
																},
																"nativeSrc": "5977:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5977:15:10"
															},
															"nativeSrc": "5977:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5977:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5871:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5871:127:10"
											},
											{
												"body": {
													"nativeSrc": "6084:170:10",
													"nodeType": "YulBlock",
													"src": "6084:170:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6130:16:10",
																"nodeType": "YulBlock",
																"src": "6130:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6139:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6139:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6142:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6142:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6132:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6132:6:10"
																			},
																			"nativeSrc": "6132:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6132:12:10"
																		},
																		"nativeSrc": "6132:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6132:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6105:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6105:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6114:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6114:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6101:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6101:3:10"
																		},
																		"nativeSrc": "6101:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6101:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6126:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6126:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6097:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6097:3:10"
																},
																"nativeSrc": "6097:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6097:32:10"
															},
															"nativeSrc": "6094:52:10",
															"nodeType": "YulIf",
															"src": "6094:52:10"
														},
														{
															"nativeSrc": "6155:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6155:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6174:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6174:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6168:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6168:5:10"
																},
																"nativeSrc": "6168:16:10",
																"nodeType": "YulFunctionCall",
																"src": "6168:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6159:5:10",
																	"nodeType": "YulTypedName",
																	"src": "6159:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6218:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6218:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6193:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "6193:24:10"
																},
																"nativeSrc": "6193:31:10",
																"nodeType": "YulFunctionCall",
																"src": "6193:31:10"
															},
															"nativeSrc": "6193:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "6193:31:10"
														},
														{
															"nativeSrc": "6233:15:10",
															"nodeType": "YulAssignment",
															"src": "6233:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "6243:5:10",
																"nodeType": "YulIdentifier",
																"src": "6243:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6233:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6233:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "6003:251:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6050:9:10",
														"nodeType": "YulTypedName",
														"src": "6050:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6061:7:10",
														"nodeType": "YulTypedName",
														"src": "6061:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6073:6:10",
														"nodeType": "YulTypedName",
														"src": "6073:6:10",
														"type": ""
													}
												],
												"src": "6003:251:10"
											},
											{
												"body": {
													"nativeSrc": "6530:688:10",
													"nodeType": "YulBlock",
													"src": "6530:688:10",
													"statements": [
														{
															"nativeSrc": "6540:33:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6540:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6558:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6558:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6569:3:10",
																		"nodeType": "YulLiteral",
																		"src": "6569:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6554:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6554:3:10"
																},
																"nativeSrc": "6554:19:10",
																"nodeType": "YulFunctionCall",
																"src": "6554:19:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "6544:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6544:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6589:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6589:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6600:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6600:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6582:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6582:6:10"
																},
																"nativeSrc": "6582:25:10",
																"nodeType": "YulFunctionCall",
																"src": "6582:25:10"
															},
															"nativeSrc": "6582:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "6582:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6627:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6627:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6638:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6638:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6623:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6623:3:10"
																		},
																		"nativeSrc": "6623:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6623:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6643:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6643:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6616:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6616:6:10"
																},
																"nativeSrc": "6616:34:10",
																"nodeType": "YulFunctionCall",
																"src": "6616:34:10"
															},
															"nativeSrc": "6616:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "6616:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6670:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6670:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6681:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6681:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6666:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6666:3:10"
																		},
																		"nativeSrc": "6666:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6666:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6686:3:10",
																		"nodeType": "YulLiteral",
																		"src": "6686:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6659:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6659:6:10"
																},
																"nativeSrc": "6659:31:10",
																"nodeType": "YulFunctionCall",
																"src": "6659:31:10"
															},
															"nativeSrc": "6659:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "6659:31:10"
														},
														{
															"nativeSrc": "6699:17:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6699:17:10",
															"value": {
																"name": "tail_1",
																"nativeSrc": "6710:6:10",
																"nodeType": "YulIdentifier",
																"src": "6710:6:10"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "6703:3:10",
																	"nodeType": "YulTypedName",
																	"src": "6703:3:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6725:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6725:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6745:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6745:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6739:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6739:5:10"
																},
																"nativeSrc": "6739:13:10",
																"nodeType": "YulFunctionCall",
																"src": "6739:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6729:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6729:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "6768:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6768:6:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6776:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6776:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6761:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6761:6:10"
																},
																"nativeSrc": "6761:22:10",
																"nodeType": "YulFunctionCall",
																"src": "6761:22:10"
															},
															"nativeSrc": "6761:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "6761:22:10"
														},
														{
															"nativeSrc": "6792:26:10",
															"nodeType": "YulAssignment",
															"src": "6792:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6803:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6803:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6814:3:10",
																		"nodeType": "YulLiteral",
																		"src": "6814:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6799:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6799:3:10"
																},
																"nativeSrc": "6799:19:10",
																"nodeType": "YulFunctionCall",
																"src": "6799:19:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6792:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6792:3:10"
																}
															]
														},
														{
															"nativeSrc": "6827:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6827:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6845:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6845:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6853:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6853:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6841:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6841:3:10"
																},
																"nativeSrc": "6841:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6841:15:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "6831:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6831:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6865:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6865:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6874:1:10",
																"nodeType": "YulLiteral",
																"src": "6874:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6869:1:10",
																	"nodeType": "YulTypedName",
																	"src": "6869:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6933:146:10",
																"nodeType": "YulBlock",
																"src": "6933:146:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "6954:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6954:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "6969:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6969:6:10"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "6963:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "6963:5:10"
																							},
																							"nativeSrc": "6963:13:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6963:13:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "6986:3:10",
																											"nodeType": "YulLiteral",
																											"src": "6986:3:10",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6991:1:10",
																											"nodeType": "YulLiteral",
																											"src": "6991:1:10",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "6982:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "6982:3:10"
																									},
																									"nativeSrc": "6982:11:10",
																									"nodeType": "YulFunctionCall",
																									"src": "6982:11:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6995:1:10",
																									"nodeType": "YulLiteral",
																									"src": "6995:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "6978:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "6978:3:10"
																							},
																							"nativeSrc": "6978:19:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6978:19:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6959:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6959:3:10"
																					},
																					"nativeSrc": "6959:39:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6959:39:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6947:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6947:6:10"
																			},
																			"nativeSrc": "6947:52:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6947:52:10"
																		},
																		"nativeSrc": "6947:52:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6947:52:10"
																	},
																	{
																		"nativeSrc": "7012:19:10",
																		"nodeType": "YulAssignment",
																		"src": "7012:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "7023:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7023:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7028:2:10",
																					"nodeType": "YulLiteral",
																					"src": "7028:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7019:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7019:3:10"
																			},
																			"nativeSrc": "7019:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7019:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7012:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7012:3:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7044:25:10",
																		"nodeType": "YulAssignment",
																		"src": "7044:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7058:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "7058:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7066:2:10",
																					"nodeType": "YulLiteral",
																					"src": "7066:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7054:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7054:3:10"
																			},
																			"nativeSrc": "7054:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7054:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7044:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7044:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6895:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6895:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6898:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6898:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6892:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6892:2:10"
																},
																"nativeSrc": "6892:13:10",
																"nodeType": "YulFunctionCall",
																"src": "6892:13:10"
															},
															"nativeSrc": "6884:195:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6906:18:10",
																"nodeType": "YulBlock",
																"src": "6906:18:10",
																"statements": [
																	{
																		"nativeSrc": "6908:14:10",
																		"nodeType": "YulAssignment",
																		"src": "6908:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6917:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "6917:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6920:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6920:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6913:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6913:3:10"
																			},
																			"nativeSrc": "6913:9:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6913:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6908:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "6908:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6888:3:10",
																"nodeType": "YulBlock",
																"src": "6888:3:10",
																"statements": []
															},
															"src": "6884:195:10"
														},
														{
															"nativeSrc": "7088:11:10",
															"nodeType": "YulAssignment",
															"src": "7088:11:10",
															"value": {
																"name": "pos",
																"nativeSrc": "7096:3:10",
																"nodeType": "YulIdentifier",
																"src": "7096:3:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7088:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7088:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7119:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7119:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7130:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7130:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7115:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7115:3:10"
																		},
																		"nativeSrc": "7115:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7115:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "7139:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7139:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7155:3:10",
																								"nodeType": "YulLiteral",
																								"src": "7155:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7160:1:10",
																								"nodeType": "YulLiteral",
																								"src": "7160:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7151:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "7151:3:10"
																						},
																						"nativeSrc": "7151:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "7151:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7164:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7164:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7147:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7147:3:10"
																				},
																				"nativeSrc": "7147:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7147:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7135:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7135:3:10"
																		},
																		"nativeSrc": "7135:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7135:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7108:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7108:6:10"
																},
																"nativeSrc": "7108:60:10",
																"nodeType": "YulFunctionCall",
																"src": "7108:60:10"
															},
															"nativeSrc": "7108:60:10",
															"nodeType": "YulExpressionStatement",
															"src": "7108:60:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7188:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7188:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7199:3:10",
																				"nodeType": "YulLiteral",
																				"src": "7199:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7184:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7184:3:10"
																		},
																		"nativeSrc": "7184:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7184:19:10"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "7205:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7205:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7177:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7177:6:10"
																},
																"nativeSrc": "7177:35:10",
																"nodeType": "YulFunctionCall",
																"src": "7177:35:10"
															},
															"nativeSrc": "7177:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "7177:35:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6259:959:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6467:9:10",
														"nodeType": "YulTypedName",
														"src": "6467:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6478:6:10",
														"nodeType": "YulTypedName",
														"src": "6478:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6486:6:10",
														"nodeType": "YulTypedName",
														"src": "6486:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6494:6:10",
														"nodeType": "YulTypedName",
														"src": "6494:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6502:6:10",
														"nodeType": "YulTypedName",
														"src": "6502:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6510:6:10",
														"nodeType": "YulTypedName",
														"src": "6510:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6521:4:10",
														"nodeType": "YulTypedName",
														"src": "6521:4:10",
														"type": ""
													}
												],
												"src": "6259:959:10"
											},
											{
												"body": {
													"nativeSrc": "7397:179:10",
													"nodeType": "YulBlock",
													"src": "7397:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7414:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7414:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7425:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7425:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7407:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7407:6:10"
																},
																"nativeSrc": "7407:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7407:21:10"
															},
															"nativeSrc": "7407:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7407:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7448:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7448:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7459:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7459:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7444:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7444:3:10"
																		},
																		"nativeSrc": "7444:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7444:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7464:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7464:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7437:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7437:6:10"
																},
																"nativeSrc": "7437:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7437:30:10"
															},
															"nativeSrc": "7437:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7437:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7487:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7487:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7498:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7498:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7483:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7483:3:10"
																		},
																		"nativeSrc": "7483:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7483:18:10"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "7503:31:10",
																		"nodeType": "YulLiteral",
																		"src": "7503:31:10",
																		"type": "",
																		"value": "Address: insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7476:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7476:6:10"
																},
																"nativeSrc": "7476:59:10",
																"nodeType": "YulFunctionCall",
																"src": "7476:59:10"
															},
															"nativeSrc": "7476:59:10",
															"nodeType": "YulExpressionStatement",
															"src": "7476:59:10"
														},
														{
															"nativeSrc": "7544:26:10",
															"nodeType": "YulAssignment",
															"src": "7544:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7556:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7556:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7567:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7567:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7552:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7552:3:10"
																},
																"nativeSrc": "7552:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7552:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7544:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7544:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7223:353:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7374:9:10",
														"nodeType": "YulTypedName",
														"src": "7374:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7388:4:10",
														"nodeType": "YulTypedName",
														"src": "7388:4:10",
														"type": ""
													}
												],
												"src": "7223:353:10"
											},
											{
												"body": {
													"nativeSrc": "7772:14:10",
													"nodeType": "YulBlock",
													"src": "7772:14:10",
													"statements": [
														{
															"nativeSrc": "7774:10:10",
															"nodeType": "YulAssignment",
															"src": "7774:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "7781:3:10",
																"nodeType": "YulIdentifier",
																"src": "7781:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7774:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7774:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7581:205:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7756:3:10",
														"nodeType": "YulTypedName",
														"src": "7756:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7764:3:10",
														"nodeType": "YulTypedName",
														"src": "7764:3:10",
														"type": ""
													}
												],
												"src": "7581:205:10"
											},
											{
												"body": {
													"nativeSrc": "7965:248:10",
													"nodeType": "YulBlock",
													"src": "7965:248:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7982:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7982:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7993:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7993:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7975:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7975:6:10"
																},
																"nativeSrc": "7975:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7975:21:10"
															},
															"nativeSrc": "7975:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7975:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8016:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8016:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8027:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8027:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8012:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8012:3:10"
																		},
																		"nativeSrc": "8012:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8012:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8032:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8032:2:10",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8005:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8005:6:10"
																},
																"nativeSrc": "8005:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8005:30:10"
															},
															"nativeSrc": "8005:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8005:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8055:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8055:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8066:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8066:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8051:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8051:3:10"
																		},
																		"nativeSrc": "8051:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8051:18:10"
																	},
																	{
																		"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c2072",
																		"kind": "string",
																		"nativeSrc": "8071:34:10",
																		"nodeType": "YulLiteral",
																		"src": "8071:34:10",
																		"type": "",
																		"value": "Address: unable to send value, r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8044:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8044:6:10"
																},
																"nativeSrc": "8044:62:10",
																"nodeType": "YulFunctionCall",
																"src": "8044:62:10"
															},
															"nativeSrc": "8044:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "8044:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8126:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8126:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8137:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8137:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8122:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8122:3:10"
																		},
																		"nativeSrc": "8122:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8122:18:10"
																	},
																	{
																		"hexValue": "6563697069656e74206d61792068617665207265766572746564",
																		"kind": "string",
																		"nativeSrc": "8142:28:10",
																		"nodeType": "YulLiteral",
																		"src": "8142:28:10",
																		"type": "",
																		"value": "ecipient may have reverted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8115:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8115:6:10"
																},
																"nativeSrc": "8115:56:10",
																"nodeType": "YulFunctionCall",
																"src": "8115:56:10"
															},
															"nativeSrc": "8115:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "8115:56:10"
														},
														{
															"nativeSrc": "8180:27:10",
															"nodeType": "YulAssignment",
															"src": "8180:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8192:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8192:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8203:3:10",
																		"nodeType": "YulLiteral",
																		"src": "8203:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8188:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8188:3:10"
																},
																"nativeSrc": "8188:19:10",
																"nodeType": "YulFunctionCall",
																"src": "8188:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8180:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8180:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7791:422:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7942:9:10",
														"nodeType": "YulTypedName",
														"src": "7942:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7956:4:10",
														"nodeType": "YulTypedName",
														"src": "7956:4:10",
														"type": ""
													}
												],
												"src": "7791:422:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$1776__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f82563bb70a22b157eb14fc3c2b9496aeb100294c9c03d469c6ab75fef2c1d9c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid taxRate\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Address: unable to send value, r\")\n        mstore(add(headStart, 96), \"ecipient may have reverted\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"964": [
									{
										"length": 32,
										"start": 444
									},
									{
										"length": 32,
										"start": 2207
									},
									{
										"length": 32,
										"start": 2389
									}
								],
								"968": [
									{
										"length": 32,
										"start": 1972
									},
									{
										"length": 32,
										"start": 2511
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xC0246668 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xC6D69A30 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x771A3A1D EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xA82ED9EC EQ PUSH2 0x31C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x4FBEE193 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD2A45 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x1694505E EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DE JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x125 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x13E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x550 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x563 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH20 0x9AC64CC6E4415144C455BD8E4837FEA55603E5C3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0xF55 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x3FE CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0xF98 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0xF98 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x489 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x460 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x489 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4A0 DUP2 DUP6 DUP6 PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x4EC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x519 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x519 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x539 JUMPI PUSH2 0x529 DUP5 CALLER DUP5 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x534 DUP5 DUP5 DUP5 PUSH2 0x784 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH2 0x544 DUP5 DUP5 DUP5 PUSH2 0xA19 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x558 PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x561 PUSH0 PUSH2 0xA69 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0xF98 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x5A9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x5D6 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x5D6 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5E6 CALLER DUP5 DUP5 PUSH2 0x784 JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x5F5 DUP4 DUP4 PUSH2 0xABA JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x608 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x9D8F7706EA1113D1A167B526ECA956215946DD36CC7DF39EB16180222D8B5DF7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x66E PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x14 DUP2 LT PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642074617852617465 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x6C2 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x6F4 DUP2 PUSH2 0xA69 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x704 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAC7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x77E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x77E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAC7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP4 PUSH2 0x795 SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x79F SWAP2 SWAP1 PUSH2 0xFFB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7AC DUP3 DUP5 PUSH2 0x101A JUMP JUMPDEST SWAP1 POP PUSH2 0x7D9 DUP6 PUSH32 0x0 DUP5 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x7E8 SWAP1 PUSH2 0x1388 PUSH2 0x102D JUMP JUMPDEST NUMBER GT PUSH2 0xA07 JUMPI ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO DUP1 ISZERO SWAP1 DUP2 SWAP1 PUSH2 0x818 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x832 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xA04 JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x87D JUMPI PUSH2 0x87D PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91D SWAP2 SWAP1 PUSH2 0x1054 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x930 JUMPI PUSH2 0x930 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x994 SWAP1 DUP7 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x106F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9BD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP SELFBALANCE SWAP3 POP POP DUP2 ISZERO SWAP1 POP PUSH2 0x9F4 JUMPI PUSH2 0x9F4 PUSH32 0x0 DUP3 PUSH2 0xBF6 JUMP JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMPDEST PUSH2 0xA12 DUP6 DUP6 DUP4 PUSH2 0xB99 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xA26 DUP6 DUP3 DUP6 PUSH2 0x709 JUMP JUMPDEST PUSH2 0xA31 DUP6 DUP6 DUP6 PUSH2 0xB99 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4A0 DUP2 DUP6 DUP6 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xAF0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB19 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x77E JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB8B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBEB JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x704 DUP4 DUP4 DUP4 PUSH2 0xD0B JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x704 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD35 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x102D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xDA5 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD87 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDC1 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE24 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE5D JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xE40 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xEAC DUP2 PUSH2 0xE7C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xECC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xED7 DUP2 PUSH2 0xE7C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xEE7 DUP2 PUSH2 0xE7C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF08 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF13 DUP2 PUSH2 0xE7C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF2B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF36 DUP2 PUSH2 0xE7C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF4A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF65 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF7D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF88 DUP2 PUSH2 0xE7C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xF4A DUP2 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFAC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFCA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0xFD0 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1015 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0xFD0 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0xFD0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1064 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF13 DUP2 PUSH2 0xE7C JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE DUP7 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP5 ADD MSTORE DUP1 DUP7 MLOAD DUP1 DUP4 MSTORE PUSH1 0xC0 DUP6 ADD SWAP2 POP PUSH1 0x20 DUP9 ADD SWAP3 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10BF JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1098 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x60 DUP5 ADD MSTORE POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SLT 0xCE SMOD KECCAK256 0x2B 0xCF PUSH15 0xA3146E4A83775F1D4EE32086F642F0 PUSH23 0xEE90AFD024EA043E64736F6C634300081A003300000000 ",
							"sourceMap": "410:4681:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:46;;;;;;;;;;;;667:6;628:46;;;;;-1:-1:-1;;;;;178:32:10;;;160:51;;148:2;133:18;628:46:6;;;;;;;;2074:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4293:186::-;;;;;;;;;;-1:-1:-1;4293:186:2;;;;;:::i;:::-;;:::i;:::-;;;1427:14:10;;1420:22;1402:41;;1390:2;1375:18;4293:186:2;1262:187:10;818:51:6;;;;;;;;;;;;;;;3144:97:2;;;;;;;;;;-1:-1:-1;3222:12:2;;3144:97;;;1835:25:10;;;1823:2;1808:18;3144:97:2;1689:177:10;2695:506:6;;;;;;;;;;-1:-1:-1;2695:506:6;;;;;:::i;:::-;;:::i;3002:82:2:-;;;;;;;;;;-1:-1:-1;3002:82:2;;3075:2;2526:36:10;;2514:2;2499:18;3002:82:2;2384:184:10;876:28:6;;;;;;;;;;-1:-1:-1;876:28:6;;;;-1:-1:-1;;;;;876:28:6;;;4591:126;;;;;;;;;;-1:-1:-1;4591:126:6;;;;;:::i;:::-;-1:-1:-1;;;;;4681:28:6;4657:4;4681:28;;;:19;:28;;;;;;;;;4591:126;3299:116:2;;;;;;;;;;-1:-1:-1;3299:116:2;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;;;;;;;;;;;:::i;:::-;;785:26:6;;;;;;;;;;;;;;;;1638:85:0;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;2276:93:2;;;;;;;;;;;;;:::i;681:95:6:-;;;;;;;;;;;;734:42;681:95;;2261:426;;;;;;;;;;-1:-1:-1;2261:426:6;;;;;:::i;:::-;;:::i;4879:209::-;;;;;;;;;;-1:-1:-1;4879:209:6;;;;;:::i;:::-;;:::i;4725:146::-;;;;;;;;;;-1:-1:-1;4725:146:6;;;;;:::i;:::-;;:::i;3846:140:2:-;;;;;;;;;;-1:-1:-1;3846:140:2;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:5;4420:31:2;735:10:5;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;2695:506:6:-;-1:-1:-1;;;;;2854:25:6;;2817:4;2854:25;;;:19;:25;;;;;;;;2853:26;:54;;;;-1:-1:-1;;;;;;2884:23:6;;;;;;:19;:23;;;;;;;;2883:24;2853:54;2852:125;;;;-1:-1:-1;2940:13:6;;-1:-1:-1;;;;;2940:13:6;2926:10;:27;;:50;;-1:-1:-1;2963:13:6;;-1:-1:-1;;;;;2957:19:6;;;2963:13;;2957:19;2926:50;2834:338;;;3004:40;3020:4;3026:10;3038:5;3004:15;:40::i;:::-;3059:33;3076:4;3082:2;3086:5;3059:16;:33::i;:::-;2834:338;;;3125:35;3144:4;3150:2;3154:5;3125:18;:35::i;:::-;;2834:338;-1:-1:-1;3189:4:6;2695:506;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;2261:426:6:-;2413:10;2356:4;2393:31;;;:19;:31;;;;;;;;2392:32;:60;;;;-1:-1:-1;;;;;;2429:23:6;;;;;;:19;:23;;;;;;;;2428:24;2392:60;2391:131;;;;-1:-1:-1;2485:13:6;;-1:-1:-1;;;;;2485:13:6;2471:10;:27;;:50;;-1:-1:-1;2508:13:6;;-1:-1:-1;;;;;2502:19:6;;;2508:13;;2502:19;2471:50;2373:285;;;2549:39;2566:10;2578:2;2582:5;2549:16;:39::i;:::-;2373:285;;;2621:25;2636:2;2640:5;2621:14;:25::i;:::-;;2373:285;-1:-1:-1;2675:4:6;2261:426;;;;:::o;4879:209::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4991:28:6;::::1;;::::0;;;:19:::1;:28;::::0;;;;;;;;:39;;-1:-1:-1;;4991:39:6::1;::::0;::::1;;::::0;;::::1;::::0;;;5046:34;;1402:41:10;;;5046:34:6::1;::::0;1375:18:10;5046:34:6::1;;;;;;;4879:209:::0;;:::o;4725:146::-;1531:13:0;:11;:13::i;:::-;4812:2:6::1;4801:8;:13;4793:41;;;::::0;-1:-1:-1;;;4793:41:6;;4457:2:10;4793:41:6::1;::::0;::::1;4439:21:10::0;4496:2;4476:18;;;4469:30;-1:-1:-1;;;4515:18:10;;;4508:45;4570:18;;4793:41:6::1;;;;;;;;;4845:7;:18:::0;4725:146::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;160:51:10::0;133:18;;2672:31:0::1;14:203:10::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;4819:32:10;;10936:60:2;;;4801:51:10;4868:18;;;4861:34;;;4911:18;;;4904:34;;;4774:18;;10936:60:2;4599:345:10;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;3209:1374:6:-;3330:17;3371:3;3360:7;;3351:6;:16;;;;:::i;:::-;3350:24;;;;:::i;:::-;3330:44;-1:-1:-1;3385:22:6;3410:18;3330:44;3410:6;:18;:::i;:::-;3385:43;;3439:49;3455:4;3461:15;3478:9;3439:15;:49::i;:::-;3519:11;;:18;;3533:4;3519:18;:::i;:::-;3503:12;:34;3499:1025;;3603:4;3554:28;3390:18:2;;;;;;;;;;;3641:24:6;;;;;;;3686:20;;-1:-1:-1;3698:8:6;;-1:-1:-1;;;3698:8:6;;;;3697:9;3686:20;:45;;;;-1:-1:-1;3718:13:6;;-1:-1:-1;;;;;3710:21:6;;;3718:13;;3710:21;;3686:45;3682:831;;;3752:8;:15;;-1:-1:-1;;;;3752:15:6;-1:-1:-1;;;3752:15:6;;;3812:16;;;3826:1;3812:16;;;;;;;;-1:-1:-1;;3812:16:6;;;;;;;;;;-1:-1:-1;3812:16:6;3788:40;;3865:4;3847;3852:1;3847:7;;;;;;;;:::i;:::-;;;;;;:23;-1:-1:-1;;;;;3847:23:6;;;-1:-1:-1;;;;;3847:23:6;;;;;3899:15;-1:-1:-1;;;;;3899:20:6;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3889:4;3894:1;3889:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3889:32:6;;;:7;;;;;;;;;:32;3942:327;;-1:-1:-1;;;3942:327:6;;:15;:88;;;;;;:327;;4057:20;;4104:1;;4160:4;;4199;;4231:15;;3942:327;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4311:21:6;;-1:-1:-1;;4357:14:6;;;-1:-1:-1;4353:108:6;;4396:45;4412:15;4430:10;4396:7;:45::i;:::-;-1:-1:-1;;4481:8:6;:16;;-1:-1:-1;;;;4481:16:6;;;3682:831;3539:985;;3499:1025;4534:41;4550:4;4556:2;4560:14;4534:15;:41::i;:::-;3319:1264;;3209:1374;;;:::o;5039:244:2:-;5126:4;735:10:5;5182:37:2;5198:4;735:10:5;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;160:51:10;133:18;;1901:40:0;14:203:10;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;3610:178:2:-;3679:4;735:10:5;3733:27:2;735:10:5;3750:2:2;3754:5;3733:9;:27::i;9949:432::-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;160:51:10;133:18;;10103:32:2;14:203:10;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;160:51:10;133:18;;10203:31:2;14:203:10;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;1835:25:10;;1823:2;1808:18;;1689:177;10333:31:2;;;;;;;;9949:432;;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;160:51:10;133:18;;5780:30:2;14:203:10;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;160:51:10;133:18;;5873:32:2;14:203:10;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1864:389:6:-;1991:6;1966:21;:31;;1944:110;;;;-1:-1:-1;;;1944:110:6;;7425:2:10;1944:110:6;;;7407:21:10;7464:2;7444:18;;;7437:30;7503:31;7483:18;;;7476:59;7552:18;;1944:110:6;7223:353:10;1944:110:6;2068:12;2086:9;-1:-1:-1;;;;;2086:14:6;2108:6;2086:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:52;;;2152:7;2130:115;;;;-1:-1:-1;;;2130:115:6;;7993:2:10;2130:115:6;;;7975:21:10;8032:2;8012:18;;;8005:30;8071:34;8051:18;;;8044:62;8142:28;8122:18;;;8115:56;8188:19;;2130:115:6;7791:422:10;6271:1107:2;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;4819:32:10;;6649:50:2;;;4801:51:10;4868:18;;;4861:34;;;4911:18;;;4904:34;;;4774:18;;6649:50:2;4599:345:10;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;1835::10;;1823:2;1808:18;;1689:177;7346:25:2;;;;;;;;6271:1107;;;:::o;222:527:10:-;371:2;360:9;353:21;334:4;403:6;397:13;446:6;441:2;430:9;426:18;419:34;471:1;481:140;495:6;492:1;489:13;481:140;;;606:2;590:14;;;586:23;;580:30;575:2;556:17;;;552:26;545:66;510:10;481:140;;;485:3;670:1;665:2;656:6;645:9;641:22;637:31;630:42;740:2;733;729:7;724:2;716:6;712:15;708:29;697:9;693:45;689:54;681:62;;;222:527;;;;:::o;754:131::-;-1:-1:-1;;;;;829:31:10;;819:42;;809:70;;875:1;872;865:12;890:367;958:6;966;1019:2;1007:9;998:7;994:23;990:32;987:52;;;1035:1;1032;1025:12;987:52;1074:9;1061:23;1093:31;1118:5;1093:31;:::i;:::-;1143:5;1221:2;1206:18;;;;1193:32;;-1:-1:-1;;;890:367:10:o;1871:508::-;1948:6;1956;1964;2017:2;2005:9;1996:7;1992:23;1988:32;1985:52;;;2033:1;2030;2023:12;1985:52;2072:9;2059:23;2091:31;2116:5;2091:31;:::i;:::-;2141:5;-1:-1:-1;2198:2:10;2183:18;;2170:32;2211:33;2170:32;2211:33;:::i;:::-;1871:508;;2263:7;;-1:-1:-1;;;2343:2:10;2328:18;;;;2315:32;;1871:508::o;2573:247::-;2632:6;2685:2;2673:9;2664:7;2660:23;2656:32;2653:52;;;2701:1;2698;2691:12;2653:52;2740:9;2727:23;2759:31;2784:5;2759:31;:::i;:::-;2809:5;2573:247;-1:-1:-1;;;2573:247:10:o;2825:416::-;2890:6;2898;2951:2;2939:9;2930:7;2926:23;2922:32;2919:52;;;2967:1;2964;2957:12;2919:52;3006:9;2993:23;3025:31;3050:5;3025:31;:::i;:::-;3075:5;-1:-1:-1;3132:2:10;3117:18;;3104:32;3174:15;;3167:23;3155:36;;3145:64;;3205:1;3202;3195:12;3145:64;3228:7;3218:17;;;2825:416;;;;;:::o;3246:226::-;3305:6;3358:2;3346:9;3337:7;3333:23;3329:32;3326:52;;;3374:1;3371;3364:12;3326:52;-1:-1:-1;3419:23:10;;3246:226;-1:-1:-1;3246:226:10:o;3477:388::-;3545:6;3553;3606:2;3594:9;3585:7;3581:23;3577:32;3574:52;;;3622:1;3619;3612:12;3574:52;3661:9;3648:23;3680:31;3705:5;3680:31;:::i;:::-;3730:5;-1:-1:-1;3787:2:10;3772:18;;3759:32;3800:33;3759:32;3800:33;:::i;3870:380::-;3949:1;3945:12;;;;3992;;;4013:61;;4067:4;4059:6;4055:17;4045:27;;4013:61;4120:2;4112:6;4109:14;4089:18;4086:38;4083:161;;4166:10;4161:3;4157:20;4154:1;4147:31;4201:4;4198:1;4191:15;4229:4;4226:1;4219:15;4083:161;;3870:380;;;:::o;4949:127::-;5010:10;5005:3;5001:20;4998:1;4991:31;5041:4;5038:1;5031:15;5065:4;5062:1;5055:15;5081:168;5154:9;;;5185;;5202:15;;;5196:22;;5182:37;5172:71;;5223:18;;:::i;5254:217::-;5294:1;5320;5310:132;;5364:10;5359:3;5355:20;5352:1;5345:31;5399:4;5396:1;5389:15;5427:4;5424:1;5417:15;5310:132;-1:-1:-1;5456:9:10;;5254:217::o;5476:128::-;5543:9;;;5564:11;;;5561:37;;;5578:18;;:::i;5609:125::-;5674:9;;;5695:10;;;5692:36;;;5708:18;;:::i;5871:127::-;5932:10;5927:3;5923:20;5920:1;5913:31;5963:4;5960:1;5953:15;5987:4;5984:1;5977:15;6003:251;6073:6;6126:2;6114:9;6105:7;6101:23;6097:32;6094:52;;;6142:1;6139;6132:12;6094:52;6174:9;6168:16;6193:31;6218:5;6193:31;:::i;6259:959::-;6521:4;6569:3;6558:9;6554:19;6600:6;6589:9;6582:25;6643:6;6638:2;6627:9;6623:18;6616:34;6686:3;6681:2;6670:9;6666:18;6659:31;6710:6;6745;6739:13;6776:6;6768;6761:22;6814:3;6803:9;6799:19;6792:26;;6853:2;6845:6;6841:15;6827:29;;6874:1;6884:195;6898:6;6895:1;6892:13;6884:195;;;6963:13;;-1:-1:-1;;;;;6959:39:10;6947:52;;7028:2;7054:15;;;;7019:12;;;;6995:1;6913:9;6884:195;;;-1:-1:-1;;;;;;;7135:32:10;;;;7130:2;7115:18;;7108:60;-1:-1:-1;;7199:3:10;7184:19;7177:35;7096:3;6259:959;-1:-1:-1;;;6259:959:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "874600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEAD()": "228",
								"UNISWAP_V2_ROUTER()": "315",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24774",
								"balanceOf(address)": "2642",
								"decimals()": "221",
								"excludeFromFees(address,bool)": "28332",
								"isExcludedFromFees(address)": "2629",
								"name()": "infinite",
								"owner()": "2386",
								"renounceOwnership()": "infinite",
								"setTaxRate(uint256)": "24575",
								"symbol()": "infinite",
								"taxRate()": "2339",
								"totalSupply()": "2392",
								"transfer(address,uint256)": "59998",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniswapV2Pair()": "2392",
								"uniswapV2Router()": "infinite"
							},
							"internal": {
								"_transferWithTax(address,address,uint256)": "infinite",
								"sendETH(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 410,
									"end": 5091,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 810,
									"end": 811,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 785,
									"end": 811,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 785,
									"end": 811,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1156,
									"end": 1819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1247,
									"end": 1257,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2130B730B730AA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "42414E41"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3096,
									"end": 3147,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1270,
									"end": 1304,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1304,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1304,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 1270,
									"end": 1304,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1341,
									"modifierDepth": 2,
									"name": "NUMBER",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1326,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1315,
									"end": 1341,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 734,
									"end": 776,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9AC64CC6E4415144C455BD8E4837FEA55603E5C3"
								},
								{
									"begin": 1352,
									"end": 1407,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1352,
									"end": 1407,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1352,
									"end": 1407,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1352,
									"end": 1407,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C45A0155"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1475,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "C45A0155"
								},
								{
									"begin": 1452,
									"end": 1475,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 734,
									"end": 776,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "STATICCALL",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1452,
									"end": 1477,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1452,
									"end": 1477,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1452,
									"end": 1477,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1434,
									"end": 1489,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "C9C65396"
								},
								{
									"begin": 1512,
									"end": 1516,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1547,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 1547,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1532,
									"end": 1552,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1552,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "AD5C4648"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "STATICCALL",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 1554,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1532,
									"end": 1554,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1532,
									"end": 1554,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1434,
									"end": 1565,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1434,
									"end": 1565,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3350,
									"end": 3382,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3350,
									"end": 3382,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3350,
									"end": 3382,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1434,
									"end": 1565,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3332,
									"end": 3383,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3419,
									"end": 3451,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3419,
									"end": 3451,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3399,
									"end": 3417,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3399,
									"end": 3417,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3399,
									"end": 3417,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3392,
									"end": 3452,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3305,
									"end": 3323,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 3305,
									"end": 3323,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "CALL",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1565,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1434,
									"end": 1565,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1434,
									"end": 1565,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1431,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1418,
									"end": 1565,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1565,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1418,
									"end": 1565,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1418,
									"end": 1565,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1565,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1565,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1565,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1565,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1565,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1565,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1565,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1565,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1565,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1576,
									"end": 1633,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1593,
									"end": 1597,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 667,
									"end": 673,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "DEAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1576,
									"end": 1584,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1576,
									"end": 1633,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1576,
									"end": 1633,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1576,
									"end": 1633,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1675,
									"end": 1679,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1644,
									"end": 1663,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1644,
									"end": 1672,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1664,
									"end": 1671,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1664,
									"end": 1671,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1664,
									"end": 1671,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1644,
									"end": 1672,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1672,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1672,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1672,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1679,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1679,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1679,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1679,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1679,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1644,
									"end": 1679,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1679,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1679,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1679,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1679,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1679,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1709,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1715,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1715,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1715,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1715,
									"name": "PUSH",
									"source": 6,
									"value": "960B1051749987B45B5679007FFF577A1C2F763EC21C15A6C5EB193075003785"
								},
								{
									"begin": 1690,
									"end": 1722,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1722,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1722,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1722,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1644,
									"end": 1679,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1690,
									"end": 1722,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1722,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1722,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1722,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1722,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1761,
									"end": 1765,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1767,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1767,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1767,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1767,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1774,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1774,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1774,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1774,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1774,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1774,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1774,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1774,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1811,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1793,
									"end": 1803,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1805,
									"end": 1810,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "43DACAF91C1A84FF08000000"
								},
								{
									"begin": 1787,
									"end": 1792,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1787,
									"end": 1811,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1811,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1787,
									"end": 1811,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1819,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8989,
									"end": 9117,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 8989,
									"end": 9117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9073,
									"end": 9110,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 9082,
									"end": 9087,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9089,
									"end": 9096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9098,
									"end": 9103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9105,
									"end": 9109,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 9073,
									"end": 9081,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 9073,
									"end": 9110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9073,
									"end": 9110,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 9073,
									"end": 9110,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8989,
									"end": 9117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8989,
									"end": 9117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8989,
									"end": 9117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8989,
									"end": 9117,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3096,
									"end": 3147,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2950,
									"end": 3153,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10381,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 9949,
									"end": 10381,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10061,
									"end": 10080,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 10061,
									"end": 10080,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10057,
									"end": 10146,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 10057,
									"end": 10146,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E602DF05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 10132,
									"end": 10133,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3096,
									"end": 3147,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10103,
									"end": 10135,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2950,
									"end": 3153,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10057,
									"end": 10146,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 10057,
									"end": 10146,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10159,
									"end": 10180,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 10159,
									"end": 10180,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10155,
									"end": 10245,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 10155,
									"end": 10245,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4A1406B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 10231,
									"end": 10232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3096,
									"end": 3147,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10203,
									"end": 10234,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2950,
									"end": 3153,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10155,
									"end": 10245,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 10155,
									"end": 10245,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10265,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10272,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10281,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10289,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10289,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10254,
									"end": 10289,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 10299,
									"end": 10375,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10299,
									"end": 10375,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 10299,
									"end": 10375,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 10299,
									"end": 10375,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 10349,
									"end": 10356,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10342,
									"end": 10347,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "PUSH",
									"source": 2,
									"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
								},
								{
									"begin": 10358,
									"end": 10363,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3609,
									"end": 3634,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3609,
									"end": 3634,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3597,
									"end": 3599,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3582,
									"end": 3600,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3582,
									"end": 3600,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3463,
									"end": 3640,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10333,
									"end": 10364,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 10299,
									"end": 10375,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 10299,
									"end": 10375,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10381,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10381,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10381,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10381,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9949,
									"end": 10381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4092,
									"end": 4124,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4092,
									"end": 4124,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4074,
									"end": 4125,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4141,
									"end": 4159,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4141,
									"end": 4159,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4141,
									"end": 4159,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4134,
									"end": 4168,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4134,
									"end": 4168,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4134,
									"end": 4168,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4184,
									"end": 4202,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 4184,
									"end": 4202,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4184,
									"end": 4202,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4177,
									"end": 4211,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4177,
									"end": 4211,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4177,
									"end": 4211,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4047,
									"end": 4065,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 4047,
									"end": 4065,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 3872,
									"end": 4217,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3609,
									"end": 3634,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3609,
									"end": 3634,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3597,
									"end": 3599,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3582,
									"end": 3600,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3582,
									"end": 3600,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3463,
									"end": 3640,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1096,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1139,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1181,
									"end": 1208,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1171,
									"end": 1209,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1240,
									"end": 1244,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1225,
									"end": 1245,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1313,
									"end": 1316,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1302,
									"end": 1322,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1292,
									"end": 1323,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1381,
									"end": 1394,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 952,
									"end": 1470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1646,
									"end": 2945,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1646,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 1821,
									"end": 1839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1900,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1894,
									"end": 1898,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1850,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2027,
									"end": 2029,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2016,
									"end": 2030,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2016,
									"end": 2030,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2044,
									"end": 2045,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2732,
									"end": 2733,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2749,
									"end": 2755,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2795,
									"end": 2821,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1595,
									"end": 1619,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1581,
									"end": 1621,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1578,
									"end": 1635,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2848,
									"end": 2929,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2848,
									"end": 2929,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2009,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 2009,
									"end": 2939,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2207,
									"end": 2214,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2204,
									"end": 2205,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2268,
									"end": 2310,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2268,
									"end": 2310,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2396,
									"end": 2400,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2349,
									"end": 2350,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2223,
									"end": 2235,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2197,
									"end": 2200,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2434,
									"end": 2441,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2431,
									"end": 2450,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2498,
									"end": 2524,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2587,
									"end": 2588,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2599,
									"end": 2602,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 2579,
									"end": 2603,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2612,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2571,
									"end": 2613,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2556,
									"end": 2614,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2541,
									"end": 2615,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2541,
									"end": 2615,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2675,
									"end": 2676,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2655,
									"end": 2677,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2642,
									"end": 2678,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2642,
									"end": 2678,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1646,
									"end": 2945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3645,
									"end": 3867,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 3645,
									"end": 3867,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3710,
									"end": 3719,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3710,
									"end": 3719,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3710,
									"end": 3719,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3731,
									"end": 3741,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3731,
									"end": 3741,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3731,
									"end": 3741,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3728,
									"end": 3861,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3728,
									"end": 3861,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 3728,
									"end": 3861,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3783,
									"end": 3793,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 3778,
									"end": 3781,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 3774,
									"end": 3794,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3771,
									"end": 3772,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3764,
									"end": 3795,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3818,
									"end": 3822,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 3815,
									"end": 3816,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3808,
									"end": 3823,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 3850,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3843,
									"end": 3844,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3836,
									"end": 3851,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3728,
									"end": 3861,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 3728,
									"end": 3861,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3645,
									"end": 3867,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3645,
									"end": 3867,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3645,
									"end": 3867,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3645,
									"end": 3867,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3645,
									"end": 3867,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3872,
									"end": 4217,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3872,
									"end": 4217,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "968"
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "964"
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 5091,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b212ce07202bcf6ea3146e4a83775f1d4ee32086f642f076ee90afd024ea043e64736f6c634300081a0033",
									".code": [
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "C0246668"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "C6D69A30"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "771A3A1D"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "A82ED9EC"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "49BD5A5E"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "4FBEE193"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "3FD2A45"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "1694505E"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 410,
											"end": 5091,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 628,
											"end": 674,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 628,
											"end": 674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 667,
											"end": 673,
											"name": "PUSH",
											"source": 6,
											"value": "DEAD"
										},
										{
											"begin": 628,
											"end": 674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 628,
											"end": 674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 628,
											"end": 674,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 628,
											"end": 674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 674,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1442,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1443,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1443,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1392,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1375,
											"end": 1393,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1262,
											"end": 1449,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 818,
											"end": 869,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 818,
											"end": 869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 869,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 818,
											"end": 869,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 818,
											"end": 869,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 818,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 818,
											"end": 869,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 818,
											"end": 869,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 869,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 818,
											"end": 869,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 818,
											"end": 869,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 818,
											"end": 869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 818,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 818,
											"end": 869,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "964"
										},
										{
											"begin": 818,
											"end": 869,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 818,
											"end": 869,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1860,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1835,
											"end": 1860,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1835,
											"end": 1860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1823,
											"end": 1825,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1689,
											"end": 1866,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2695,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2695,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2526,
											"end": 2562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2384,
											"end": 2568,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 876,
											"end": 904,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 876,
											"end": 904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 904,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 876,
											"end": 904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 876,
											"end": 904,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 876,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 876,
											"end": 904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 876,
											"end": 904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 876,
											"end": 904,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 876,
											"end": 904,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 876,
											"end": 904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 876,
											"end": 904,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 876,
											"end": 904,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 876,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 876,
											"end": 904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 876,
											"end": 904,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 876,
											"end": 904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 876,
											"end": 904,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4591,
											"end": 4717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4657,
											"end": 4661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4717,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 811,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 785,
											"end": 811,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 785,
											"end": 811,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 785,
											"end": 811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 785,
											"end": 811,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 785,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 785,
											"end": 811,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 785,
											"end": 811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 785,
											"end": 811,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 785,
											"end": 811,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 785,
											"end": 811,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 785,
											"end": 811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 785,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 785,
											"end": 811,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 785,
											"end": 811,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 785,
											"end": 811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 785,
											"end": 811,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 681,
											"end": 776,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 681,
											"end": 776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 681,
											"end": 776,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 681,
											"end": 776,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 681,
											"end": 776,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 681,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 681,
											"end": 776,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 681,
											"end": 776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 776,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 681,
											"end": 776,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 681,
											"end": 776,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 681,
											"end": 776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 681,
											"end": 776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 734,
											"end": 776,
											"name": "PUSH",
											"source": 6,
											"value": "9AC64CC6E4415144C455BD8E4837FEA55603E5C3"
										},
										{
											"begin": 681,
											"end": 776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 681,
											"end": 776,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2261,
											"end": 2687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2261,
											"end": 2687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4879,
											"end": 5088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4879,
											"end": 5088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4725,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4725,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2854,
											"end": 2879,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2879,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2879,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2879,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2879,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2873,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2854,
											"end": 2879,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2879,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2879,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2879,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2879,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2879,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2879,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2854,
											"end": 2879,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2879,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2907,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2907,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2853,
											"end": 2907,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2907,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2907,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2853,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2852,
											"end": 2977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2852,
											"end": 2977,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2852,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2852,
											"end": 2977,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2940,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2940,
											"end": 2953,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2940,
											"end": 2953,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2926,
											"end": 2936,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2926,
											"end": 2953,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2926,
											"end": 2953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2926,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2926,
											"end": 2976,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2963,
											"end": 2976,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2963,
											"end": 2976,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2957,
											"end": 2976,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2976,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 2976,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 2976,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2976,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2926,
											"end": 2976,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2926,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 3172,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2834,
											"end": 3172,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3020,
											"end": 3024,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3036,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3043,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3004,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3044,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3004,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3076,
											"end": 3080,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3086,
											"end": 3091,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3059,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3092,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3059,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2834,
											"end": 3172,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 3172,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2834,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3144,
											"end": 3148,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3152,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3125,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3160,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3125,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 3172,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2834,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3189,
											"end": 3193,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 3201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2423,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2393,
											"end": 2424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2424,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2424,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2424,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2393,
											"end": 2424,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2452,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2452,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2392,
											"end": 2452,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2452,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2452,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2392,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2522,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2522,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2391,
											"end": 2522,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2485,
											"end": 2498,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2485,
											"end": 2498,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2485,
											"end": 2498,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2481,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2498,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2498,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2471,
											"end": 2521,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2508,
											"end": 2521,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2508,
											"end": 2521,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2502,
											"end": 2521,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2502,
											"end": 2521,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2502,
											"end": 2521,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2521,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2521,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2502,
											"end": 2521,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2521,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2471,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2658,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2373,
											"end": 2658,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2566,
											"end": 2576,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2580,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2587,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2549,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2549,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2373,
											"end": 2658,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2658,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2373,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2636,
											"end": 2638,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2640,
											"end": 2645,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2621,
											"end": 2646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2646,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2621,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2658,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2373,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2675,
											"end": 2679,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4991,
											"end": 5019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5030,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4991,
											"end": 5030,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5030,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5030,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5030,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5030,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5030,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5046,
											"end": 5080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5046,
											"end": 5080,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1443,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1443,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1443,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5046,
											"end": 5080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9D8F7706EA1113D1A167B526ECA956215946DD36CC7DF39EB16180222D8B5DF7"
										},
										{
											"begin": 5046,
											"end": 5080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1375,
											"end": 1393,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5046,
											"end": 5080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5046,
											"end": 5080,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5046,
											"end": 5080,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5046,
											"end": 5080,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5046,
											"end": 5080,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5046,
											"end": 5080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5046,
											"end": 5080,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4725,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4801,
											"end": 4809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4814,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4834,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4793,
											"end": 4834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4834,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4459,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4793,
											"end": 4834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4439,
											"end": 4460,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4496,
											"end": 4498,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 4476,
											"end": 4494,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4476,
											"end": 4494,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4499,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642074617852617465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4515,
											"end": 4533,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4515,
											"end": 4533,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4533,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4508,
											"end": 4553,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4570,
											"end": 4588,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4570,
											"end": 4588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4793,
											"end": 4834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4819,
											"end": 4851,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4819,
											"end": 4851,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4868,
											"end": 4886,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4868,
											"end": 4886,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4868,
											"end": 4886,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 4895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 4895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 4895,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4904,
											"end": 4938,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4904,
											"end": 4938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4904,
											"end": 4938,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4774,
											"end": 4792,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4774,
											"end": 4792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4599,
											"end": 4944,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3209,
											"end": 4583,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3209,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3374,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3360,
											"end": 3367,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3360,
											"end": 3367,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3357,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3351,
											"end": 3367,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3351,
											"end": 3367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3367,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3351,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3350,
											"end": 3374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3350,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3374,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3350,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3385,
											"end": 3407,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3330,
											"end": 3374,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3416,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3410,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3439,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3455,
											"end": 3459,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "968"
										},
										{
											"begin": 3478,
											"end": 3487,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3439,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3439,
											"end": 3488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3439,
											"end": 3488,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3439,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3530,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3519,
											"end": 3530,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3537,
											"name": "PUSH",
											"source": 6,
											"value": "1388"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3519,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3537,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3499,
											"end": 4524,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3607,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3665,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3665,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3665,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3665,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3665,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3686,
											"end": 3706,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3698,
											"end": 3706,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3698,
											"end": 3706,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3698,
											"end": 3706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3706,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3706,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3698,
											"end": 3706,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3706,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3686,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3731,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3686,
											"end": 3731,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3718,
											"end": 3731,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3718,
											"end": 3731,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3710,
											"end": 3731,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3731,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3731,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3731,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3731,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3731,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3686,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 4513,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3682,
											"end": 4513,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3760,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3752,
											"end": 3767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3767,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3752,
											"end": 3767,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3752,
											"end": 3767,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3767,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3827,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3812,
											"end": 3828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 3828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 3828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3869,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 3853,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3847,
											"end": 3854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3847,
											"end": 3870,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3870,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3847,
											"end": 3870,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3870,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3870,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3914,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "964"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "PUSH",
											"source": 6,
											"value": "AD5C4648"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3899,
											"end": 3921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3893,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3895,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3889,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3889,
											"end": 3921,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3921,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "791AC947"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3957,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "964"
										},
										{
											"begin": 3942,
											"end": 4030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4030,
											"name": "PUSH",
											"source": 6,
											"value": "791AC947"
										},
										{
											"begin": 3942,
											"end": 4030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4077,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4203,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3942,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3942,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4311,
											"end": 4332,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4332,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4353,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 4353,
											"end": 4461,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 4412,
											"end": 4427,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "968"
										},
										{
											"begin": 4430,
											"end": 4440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4396,
											"end": 4441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4441,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 4396,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4481,
											"end": 4489,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4481,
											"end": 4497,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4481,
											"end": 4497,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4481,
											"end": 4497,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4481,
											"end": 4497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4481,
											"end": 4497,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 4513,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3682,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 4524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 4524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 4524,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3499,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4534,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4550,
											"end": 4554,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4558,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4534,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 4534,
											"end": 4575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4534,
											"end": 4575,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4534,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 4583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 4583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 4583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 4583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 4583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 4583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1860,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1835,
											"end": 1860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1823,
											"end": 1825,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1689,
											"end": 1866,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1864,
											"end": 2253,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1864,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 1997,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1997,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1997,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 1944,
											"end": 2054,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 2054,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1944,
											"end": 2054,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 2054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 2054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7427,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1944,
											"end": 2054,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1944,
											"end": 2054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 2054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7407,
											"end": 7428,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7464,
											"end": 7466,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 7444,
											"end": 7462,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7444,
											"end": 7462,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7444,
											"end": 7462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7437,
											"end": 7467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7503,
											"end": 7534,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A20696E73756666696369656E742062616C616E6365000000"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7476,
											"end": 7535,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1944,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 7223,
											"end": 7576,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1944,
											"end": 2054,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 1944,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2095,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2100,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2114,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2130,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2130,
											"end": 2245,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2130,
											"end": 2245,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2130,
											"end": 2245,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2130,
											"end": 2245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2130,
											"end": 2245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 7995,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2130,
											"end": 2245,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2130,
											"end": 2245,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2130,
											"end": 2245,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 7996,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8032,
											"end": 8034,
											"name": "PUSH",
											"source": 10,
											"value": "3A"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8035,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8071,
											"end": 8105,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8044,
											"end": 8106,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8142,
											"end": 8170,
											"name": "PUSH",
											"source": 10,
											"value": "6563697069656E74206D61792068617665207265766572746564000000000000"
										},
										{
											"begin": 8122,
											"end": 8140,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8122,
											"end": 8140,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8122,
											"end": 8140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8115,
											"end": 8171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8188,
											"end": 8207,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8188,
											"end": 8207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2130,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 7791,
											"end": 8213,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4819,
											"end": 4851,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4819,
											"end": 4851,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4868,
											"end": 4886,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4868,
											"end": 4886,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4868,
											"end": 4886,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 4895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 4895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 4895,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4904,
											"end": 4938,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4904,
											"end": 4938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4904,
											"end": 4938,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4774,
											"end": 4792,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4774,
											"end": 4792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4599,
											"end": 4944,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1860,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1835,
											"end": 1860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1823,
											"end": 1825,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1689,
											"end": 1866,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 222,
											"end": 749,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 222,
											"end": 749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 373,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 353,
											"end": 374,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 334,
											"end": 338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 397,
											"end": 410,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 446,
											"end": 452,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 441,
											"end": 443,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 439,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 426,
											"end": 444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 419,
											"end": 453,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 471,
											"end": 472,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 621,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 481,
											"end": 621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 495,
											"end": 501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 492,
											"end": 493,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 489,
											"end": 502,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 481,
											"end": 621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 481,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 481,
											"end": 621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 606,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 590,
											"end": 604,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 590,
											"end": 604,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 586,
											"end": 609,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 586,
											"end": 609,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 580,
											"end": 610,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 575,
											"end": 577,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 573,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 556,
											"end": 573,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 556,
											"end": 573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 552,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 545,
											"end": 611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 510,
											"end": 520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 481,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 481,
											"end": 621,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 481,
											"end": 621,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 481,
											"end": 621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 485,
											"end": 488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 670,
											"end": 671,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 667,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 662,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 645,
											"end": 654,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 641,
											"end": 663,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 637,
											"end": 668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 630,
											"end": 672,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 740,
											"end": 742,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 735,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 729,
											"end": 736,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 724,
											"end": 726,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 716,
											"end": 722,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 712,
											"end": 727,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 708,
											"end": 737,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 697,
											"end": 706,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 693,
											"end": 738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 689,
											"end": 743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 681,
											"end": 743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 681,
											"end": 743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 681,
											"end": 743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 222,
											"end": 749,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 222,
											"end": 749,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 222,
											"end": 749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 222,
											"end": 749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 222,
											"end": 749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 754,
											"end": 885,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 754,
											"end": 885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 829,
											"end": 860,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 829,
											"end": 860,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 819,
											"end": 861,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 819,
											"end": 861,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 809,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 809,
											"end": 879,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 875,
											"end": 876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 873,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 877,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 890,
											"end": 1257,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 890,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 958,
											"end": 964,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1021,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1016,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 998,
											"end": 1005,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 990,
											"end": 1022,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 987,
											"end": 1039,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 987,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 987,
											"end": 1039,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1037,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 987,
											"end": 1039,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 987,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1084,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1093,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 1118,
											"end": 1123,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1093,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 1093,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1093,
											"end": 1124,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 1093,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1148,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1224,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1206,
											"end": 1224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1206,
											"end": 1224,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1206,
											"end": 1224,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1225,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1225,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 890,
											"end": 1257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1871,
											"end": 2379,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1871,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1954,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2019,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2005,
											"end": 2014,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2003,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2015,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2020,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2037,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 1985,
											"end": 2037,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2033,
											"end": 2034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2031,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2023,
											"end": 2035,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2037,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 1985,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 2116,
											"end": 2121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2091,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2122,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 2091,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2200,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2170,
											"end": 2202,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 2170,
											"end": 2202,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2211,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2211,
											"end": 2244,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 2211,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1871,
											"end": 2379,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1871,
											"end": 2379,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2343,
											"end": 2345,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1871,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2820,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 2573,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2687,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2660,
											"end": 2683,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2702,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2699,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2703,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2749,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 2784,
											"end": 2789,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2759,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2790,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 2759,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2809,
											"end": 2814,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2820,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2573,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 3241,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2825,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2904,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2951,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2948,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2930,
											"end": 2937,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2926,
											"end": 2949,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2922,
											"end": 2954,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2919,
											"end": 2971,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2919,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2919,
											"end": 2971,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2965,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2957,
											"end": 2969,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2919,
											"end": 2971,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2919,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3006,
											"end": 3015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3016,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3025,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3056,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 3025,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3080,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3132,
											"end": 3134,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3135,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3189,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3167,
											"end": 3190,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3191,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 3145,
											"end": 3209,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3205,
											"end": 3206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3203,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3207,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3209,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 3145,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3235,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3235,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 3241,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 3241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 3241,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 3241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 3241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3472,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 3246,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3360,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3337,
											"end": 3344,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3333,
											"end": 3356,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3329,
											"end": 3361,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3326,
											"end": 3378,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3326,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 3326,
											"end": 3378,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3374,
											"end": 3375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3372,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3326,
											"end": 3378,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 3326,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3419,
											"end": 3442,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3472,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3246,
											"end": 3472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3865,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 3477,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3559,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3604,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3609,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3574,
											"end": 3626,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3574,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 3574,
											"end": 3626,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3622,
											"end": 3623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3624,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3574,
											"end": 3626,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 3574,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3670,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3671,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3680,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3711,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 3680,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3730,
											"end": 3735,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3791,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 3759,
											"end": 3791,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3800,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 4250,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 3870,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3992,
											"end": 4004,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3992,
											"end": 4004,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3992,
											"end": 4004,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4055,
											"end": 4072,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4120,
											"end": 4122,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4118,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4123,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4124,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 4083,
											"end": 4244,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4166,
											"end": 4176,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 4161,
											"end": 4164,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4157,
											"end": 4177,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4154,
											"end": 4155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4147,
											"end": 4178,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4201,
											"end": 4205,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 4198,
											"end": 4199,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4191,
											"end": 4206,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4233,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4226,
											"end": 4227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4234,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4244,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 4083,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 4250,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 4250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 4250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 4250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4949,
											"end": 5076,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 4949,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5010,
											"end": 5020,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5005,
											"end": 5008,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5001,
											"end": 5021,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4998,
											"end": 4999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 5022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5045,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5038,
											"end": 5039,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5031,
											"end": 5046,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5065,
											"end": 5069,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5062,
											"end": 5063,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5055,
											"end": 5070,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5249,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 5081,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5154,
											"end": 5163,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5154,
											"end": 5163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5154,
											"end": 5163,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5185,
											"end": 5194,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5185,
											"end": 5194,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5202,
											"end": 5217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5202,
											"end": 5217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5202,
											"end": 5217,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5172,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5172,
											"end": 5243,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5223,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5223,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 5223,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5254,
											"end": 5471,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 5254,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5321,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5310,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 5310,
											"end": 5442,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5374,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5359,
											"end": 5362,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5352,
											"end": 5353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5345,
											"end": 5376,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5403,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5389,
											"end": 5404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5431,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5424,
											"end": 5425,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5417,
											"end": 5432,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5310,
											"end": 5442,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 5310,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5254,
											"end": 5471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5476,
											"end": 5604,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 5476,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5543,
											"end": 5552,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5543,
											"end": 5552,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5543,
											"end": 5552,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5575,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5598,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5561,
											"end": 5598,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5578,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 5578,
											"end": 5596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5734,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 5609,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5683,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5683,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5695,
											"end": 5705,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5695,
											"end": 5705,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5695,
											"end": 5705,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5692,
											"end": 5728,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5692,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5692,
											"end": 5728,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5708,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 5708,
											"end": 5726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5871,
											"end": 5998,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 5871,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5942,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5927,
											"end": 5930,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5923,
											"end": 5943,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5921,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5944,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5963,
											"end": 5967,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 5960,
											"end": 5961,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5953,
											"end": 5968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 5991,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5984,
											"end": 5985,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5992,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6254,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 6003,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6073,
											"end": 6079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6128,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6114,
											"end": 6123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6105,
											"end": 6112,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6101,
											"end": 6124,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6097,
											"end": 6129,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6146,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 6094,
											"end": 6146,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6142,
											"end": 6143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6139,
											"end": 6140,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6132,
											"end": 6144,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6146,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 6094,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6168,
											"end": 6184,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6193,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 6218,
											"end": 6223,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6193,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 6193,
											"end": 6224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6259,
											"end": 7218,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 6259,
											"end": 7218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6521,
											"end": 6525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6569,
											"end": 6572,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 6558,
											"end": 6567,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6554,
											"end": 6573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6600,
											"end": 6606,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6589,
											"end": 6598,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6582,
											"end": 6607,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6643,
											"end": 6649,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6640,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6636,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6616,
											"end": 6650,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6689,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 6681,
											"end": 6683,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6670,
											"end": 6679,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 6684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6659,
											"end": 6690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6710,
											"end": 6716,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6751,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6739,
											"end": 6752,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6776,
											"end": 6782,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 6774,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6783,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6814,
											"end": 6817,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 6803,
											"end": 6812,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6799,
											"end": 6818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6792,
											"end": 6818,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6792,
											"end": 6818,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6845,
											"end": 6851,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6827,
											"end": 6856,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6827,
											"end": 6856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6874,
											"end": 6875,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 7079,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 6884,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6898,
											"end": 6904,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6895,
											"end": 6896,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6892,
											"end": 6905,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6884,
											"end": 7079,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6884,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 6884,
											"end": 7079,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6963,
											"end": 6976,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6963,
											"end": 6976,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6959,
											"end": 6998,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6947,
											"end": 6999,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6947,
											"end": 6999,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7054,
											"end": 7069,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7069,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7069,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7069,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7031,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7031,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6995,
											"end": 6996,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6913,
											"end": 6922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6884,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 6884,
											"end": 7079,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6884,
											"end": 7079,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 6884,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7135,
											"end": 7167,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7167,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7167,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7130,
											"end": 7132,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7108,
											"end": 7168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7199,
											"end": 7202,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7184,
											"end": 7203,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7177,
											"end": 7212,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7096,
											"end": 7099,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6259,
											"end": 7218,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6259,
											"end": 7218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/BananaToken.sol",
								"contracts/interfaces/IUniswapV2Factory.sol",
								"contracts/interfaces/IUniswapV2Pair.sol",
								"contracts/interfaces/IUniswapV2Router02.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEAD()": "03fd2a45",
							"UNISWAP_V2_ROUTER()": "a82ed9ec",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"excludeFromFees(address,bool)": "c0246668",
							"isExcludedFromFees(address)": "4fbee193",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setTaxRate(uint256)": "c6d69a30",
							"symbol()": "95d89b41",
							"taxRate()": "771a3a1d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniswapV2Pair()": "49bd5a5e",
							"uniswapV2Router()": "1694505e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketingWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isExcluded\",\"type\":\"bool\"}],\"name\":\"ExcludeFromFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEAD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNISWAP_V2_ROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taxRate\",\"type\":\"uint256\"}],\"name\":\"setTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BananaToken.sol\":\"BananaToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/BananaToken.sol\":{\"keccak256\":\"0x355a69b06f4b66d7ad399a2ee38b64412e33bbfb59677f5607864a8934989f26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b72c17d810998aee97064007af8dedf9b64ec4ff0d91c7b4d7cb9e3338943763\",\"dweb:/ipfs/Qmf2tVXbpCepbL2b6owaHiSeaxm1piYQBT6jGjQcFQQijq\"]},\"contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe47612f9fe2912302bf9ba74bd548d09831a62e728d20ed9595ca06652b330bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c68717b92d5006488ba4ad97412ecd833f491e72e2418294b5d4fc2be6c4f987\",\"dweb:/ipfs/QmZBxEgdxwTnxNMM5y26LKy6SrpSzS8zPR2zVdTbkwWgGp\"]},\"contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0xf861a1d687aa77822407313ff67b9196a223cd898801496b8842a9766b4dbc79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fba077eb831136b4f3f0bf7c14cce11a7d733d3d20d12e25fd13e247398dc42\",\"dweb:/ipfs/QmSm5CDExxAWVRUHJFBAdtWvWSS6dMKUEGUR3voyDoE7ri\"]},\"contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x02493d44b7425230c32ca3057699f8ded1a4c1f327d022faf0a40e1d794988d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2faa7c180106c7126baa11d8ebd204b153a09d1ff7f70623986d6fd595f1f100\",\"dweb:/ipfs/QmZxqWYxNM7B4E92fna8GXWRTc82X8bpmNLuTvkpE3Nn6J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/BananaToken.sol:BananaToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/BananaToken.sol:BananaToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/BananaToken.sol:BananaToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/BananaToken.sol:BananaToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/BananaToken.sol:BananaToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/BananaToken.sol:BananaToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 961,
								"contract": "contracts/BananaToken.sol:BananaToken",
								"label": "taxRate",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 966,
								"contract": "contracts/BananaToken.sol:BananaToken",
								"label": "uniswapV2Pair",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 970,
								"contract": "contracts/BananaToken.sol:BananaToken",
								"label": "swapping",
								"offset": 20,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 972,
								"contract": "contracts/BananaToken.sol:BananaToken",
								"label": "launchBlock",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 976,
								"contract": "contracts/BananaToken.sol:BananaToken",
								"label": "_isExcludedFromFees",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe47612f9fe2912302bf9ba74bd548d09831a62e728d20ed9595ca06652b330bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c68717b92d5006488ba4ad97412ecd833f491e72e2418294b5d4fc2be6c4f987\",\"dweb:/ipfs/QmZBxEgdxwTnxNMM5y26LKy6SrpSzS8zPR2zVdTbkwWgGp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0xf861a1d687aa77822407313ff67b9196a223cd898801496b8842a9766b4dbc79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fba077eb831136b4f3f0bf7c14cce11a7d733d3d20d12e25fd13e247398dc42\",\"dweb:/ipfs/QmSm5CDExxAWVRUHJFBAdtWvWSS6dMKUEGUR3voyDoE7ri\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x02493d44b7425230c32ca3057699f8ded1a4c1f327d022faf0a40e1d794988d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2faa7c180106c7126baa11d8ebd204b153a09d1ff7f70623986d6fd595f1f100\",\"dweb:/ipfs/QmZxqWYxNM7B4E92fna8GXWRTc82X8bpmNLuTvkpE3Nn6J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/BananaToken.sol": {
				"ast": {
					"absolutePath": "contracts/BananaToken.sol",
					"exportedSymbols": {
						"BananaToken": [
							1417
						],
						"ERC20": [
							799
						],
						"IUniswapV2Factory": [
							1480
						],
						"IUniswapV2Pair": [
							1703
						],
						"IUniswapV2Router02": [
							1776
						],
						"Ownable": [
							147
						]
					},
					"id": 1418,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 800,
							"src": "60:68:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 936,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "68:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 148,
							"src": "130:67:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 938,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "138:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IUniswapV2Router02.sol",
							"file": "./interfaces/IUniswapV2Router02.sol",
							"id": 941,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 1777,
							"src": "199:71:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 940,
										"name": "IUniswapV2Router02",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1776,
										"src": "207:18:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IUniswapV2Pair.sol",
							"file": "./interfaces/IUniswapV2Pair.sol",
							"id": 943,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 1704,
							"src": "272:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 942,
										"name": "IUniswapV2Pair",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1703,
										"src": "280:14:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IUniswapV2Factory.sol",
							"file": "./interfaces/IUniswapV2Factory.sol",
							"id": 945,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 1481,
							"src": "337:69:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 944,
										"name": "IUniswapV2Factory",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1480,
										"src": "345:17:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 946,
										"name": "ERC20",
										"nameLocations": [
											"434:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "434:5:6"
									},
									"id": 947,
									"nodeType": "InheritanceSpecifier",
									"src": "434:5:6"
								},
								{
									"baseName": {
										"id": 948,
										"name": "Ownable",
										"nameLocations": [
											"441:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "441:7:6"
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "441:7:6"
								}
							],
							"canonicalName": "BananaToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1417,
							"linearizedBaseContracts": [
								1417,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "BananaToken",
							"nameLocation": "419:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "03fd2a45",
									"id": 955,
									"mutability": "constant",
									"name": "DEAD",
									"nameLocation": "652:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "628:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 950,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307864656164",
												"id": 953,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "667:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_57005_by_1",
													"typeString": "int_const 57005"
												},
												"value": "0xdead"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_57005_by_1",
													"typeString": "int_const 57005"
												}
											],
											"id": 952,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "659:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 951,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "659:7:6",
												"typeDescriptions": {}
											}
										},
										"id": 954,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "659:15:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a82ed9ec",
									"id": 958,
									"mutability": "constant",
									"name": "UNISWAP_V2_ROUTER",
									"nameLocation": "705:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "681:95:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 956,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "681:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307839416336344363366534343135313434433435354244384534383337466561353536303365356333",
										"id": 957,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "734:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "771a3a1d",
									"id": 961,
									"mutability": "mutable",
									"name": "taxRate",
									"nameLocation": "800:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "785:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 959,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "785:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 960,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "810:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1694505e",
									"id": 964,
									"mutability": "immutable",
									"name": "uniswapV2Router",
									"nameLocation": "854:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "818:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$1776",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 963,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 962,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"818:18:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1776,
											"src": "818:18:6"
										},
										"referencedDeclaration": 1776,
										"src": "818:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1776",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "49bd5a5e",
									"id": 966,
									"mutability": "mutable",
									"name": "uniswapV2Pair",
									"nameLocation": "891:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "876:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 965,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "876:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 968,
									"mutability": "immutable",
									"name": "marketingWallet",
									"nameLocation": "937:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "911:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 967,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "911:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 970,
									"mutability": "mutable",
									"name": "swapping",
									"nameLocation": "972:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "959:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 969,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "959:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 972,
									"mutability": "mutable",
									"name": "launchBlock",
									"nameLocation": "1003:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "987:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 971,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "987:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 976,
									"mutability": "mutable",
									"name": "_isExcludedFromFees",
									"nameLocation": "1056:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "1023:52:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 975,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 973,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1031:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1023:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 974,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1042:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "9d8f7706ea1113d1a167b526eca956215946dd36cc7df39eb16180222d8b5df7",
									"id": 982,
									"name": "ExcludeFromFees",
									"nameLocation": "1090:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1122:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1106:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": false,
												"mutability": "mutable",
												"name": "isExcluded",
												"nameLocation": "1136:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1131:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 979,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1131:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1105:42:6"
									},
									"src": "1084:64:6"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "1259:560:6",
										"statements": [
											{
												"expression": {
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 995,
														"name": "marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "1270:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 996,
														"name": "_marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "1288:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1270:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "1270:34:6"
											},
											{
												"expression": {
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 999,
														"name": "launchBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "1315:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1000,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1329:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1335:6:6",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "1329:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1315:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "1315:26:6"
											},
											{
												"expression": {
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1004,
														"name": "uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "1352:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1776",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1006,
																"name": "UNISWAP_V2_ROUTER",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "1389:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1005,
															"name": "IUniswapV2Router02",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "1370:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1776_$",
																"typeString": "type(contract IUniswapV2Router02)"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1370:37:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1776",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "1352:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1776",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "1352:55:6"
											},
											{
												"expression": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1010,
														"name": "uniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "1418:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1019,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1512:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_BananaToken_$1417",
																			"typeString": "contract BananaToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_BananaToken_$1417",
																			"typeString": "contract BananaToken"
																		}
																	],
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1504:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1017,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1504:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1504:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1021,
																		"name": "uniswapV2Router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "1532:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$1776",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	},
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1548:4:6",
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1715,
																	"src": "1532:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1532:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1012,
																				"name": "uniswapV2Router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "1452:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$1776",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			},
																			"id": 1013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1468:7:6",
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1710,
																			"src": "1452:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1452:25:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1011,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "1434:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1480_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1434:44:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$1480",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1479:10:6",
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1469,
															"src": "1434:55:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1434:131:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1418:147:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "1418:147:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1030,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1593:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BananaToken_$1417",
																		"typeString": "contract BananaToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BananaToken_$1417",
																		"typeString": "contract BananaToken"
																	}
																],
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1585:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1028,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1585:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1585:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1034,
																	"name": "DEAD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "1608:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1600:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1032,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1600:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1600:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1620:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1037,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1620:7:6",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1036,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1615:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1615:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1629:3:6",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "1615:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1027,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "1576:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1576:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "1576:57:6"
											},
											{
												"expression": {
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1043,
															"name": "_isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1644:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1046,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1044,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1664:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1664:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1644:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1675:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1644:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "1644:35:6"
											},
											{
												"expression": {
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1050,
															"name": "_isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1690:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1052,
														"indexExpression": {
															"id": 1051,
															"name": "DEAD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "1710:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1690:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1718:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1690:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "1690:32:6"
											},
											{
												"expression": {
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1056,
															"name": "_isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1733:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1061,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1059,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1761:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BananaToken_$1417",
																		"typeString": "contract BananaToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BananaToken_$1417",
																		"typeString": "contract BananaToken"
																	}
																],
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1753:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1057,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1753:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1753:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1733:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1770:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1733:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "1733:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1066,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1793:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1797:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1793:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3231653237",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1805:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_21000000000000000000000000000_by_1",
																"typeString": "int_const 21000000000000000000000000000"
															},
															"value": "21e27"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_21000000000000000000000000000_by_1",
																"typeString": "int_const 21000000000000000000000000000"
															}
														],
														"id": 1065,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1787:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1787:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "1787:24:6"
											}
										]
									},
									"id": 1072,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "42616e616e61546f6b656e",
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1216:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_bf01d5fc9fd15df298b1584a210cce0fe9cfe0633ffbdae7432adaf0288e65ef",
														"typeString": "literal_string \"BananaToken\""
													},
													"value": "BananaToken"
												},
												{
													"hexValue": "42414e41",
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1231:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d908a40a5e65c7e6cf1c71ee98960eab979a7ac65a192d2df9b7ea20c79d2d1e",
														"typeString": "literal_string \"BANA\""
													},
													"value": "BANA"
												}
											],
											"id": 989,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 986,
												"name": "ERC20",
												"nameLocations": [
													"1210:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1210:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1210:28:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 991,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1247:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1251:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1247:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 993,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 990,
												"name": "Ownable",
												"nameLocations": [
													"1239:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1239:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1239:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "_marketingWallet",
												"nameLocation": "1186:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1178:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:42:6"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:6"
									},
									"scope": 1417,
									"src": "1156:663:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "1854:2:6",
										"statements": []
									},
									"id": 1076,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:2:6"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1854:0:6"
									},
									"scope": 1417,
									"src": "1827:29:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "1933:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1086,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1974:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BananaToken_$1417",
																				"typeString": "contract BananaToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BananaToken_$1417",
																				"typeString": "contract BananaToken"
																			}
																		],
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1966:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1084,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1966:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1966:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1980:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "1966:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1089,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "1991:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1966:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2012:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1083,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1944:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1944:110:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "1944:110:6"
											},
											{
												"assignments": [
													1095,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1095,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2073:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1108,
														"src": "2068:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1094,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2068:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1102,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2116:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1096,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "2086:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2096:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2086:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1098,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "2108:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2086:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2067:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1104,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "2152:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2174:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2130:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2130:115:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "2130:115:6"
											}
										]
									},
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendETH",
									"nameLocation": "1873:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1897:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1881:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1881:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1916:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1908:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1880:43:6"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:6"
									},
									"scope": 1417,
									"src": "1864:389:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "2362:325:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "2392:32:6",
																	"subExpression": {
																		"baseExpression": {
																			"id": 1119,
																			"name": "_isExcludedFromFees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "2393:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1122,
																		"indexExpression": {
																			"expression": {
																				"id": 1120,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2413:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2417:6:6",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2413:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2393:31:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "2428:24:6",
																	"subExpression": {
																		"baseExpression": {
																			"id": 1124,
																			"name": "_isExcludedFromFees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "2429:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1126,
																		"indexExpression": {
																			"id": 1125,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1111,
																			"src": "2449:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2429:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2392:60:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1129,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2391:62:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1130,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2471:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2475:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2471:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1132,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "2485:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2471:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1134,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "2502:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1135,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "2508:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2502:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2471:50:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1138,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2470:52:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2391:131:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1155,
													"nodeType": "Block",
													"src": "2606:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1151,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "2636:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1152,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "2640:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1148,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2621:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_BananaToken_$1417_$",
																			"typeString": "type(contract super BananaToken)"
																		}
																	},
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2627:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 409,
																	"src": "2621:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2621:25:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1154,
															"nodeType": "ExpressionStatement",
															"src": "2621:25:6"
														}
													]
												},
												"id": 1156,
												"nodeType": "IfStatement",
												"src": "2373:285:6",
												"trueBody": {
													"id": 1147,
													"nodeType": "Block",
													"src": "2534:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1141,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2566:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2570:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2566:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1143,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "2578:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1144,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "2582:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1140,
																	"name": "_transferWithTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "2549:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2549:39:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1146,
															"nodeType": "ExpressionStatement",
															"src": "2549:39:6"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1118,
												"id": 1158,
												"nodeType": "Return",
												"src": "2668:11:6"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2270:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1115,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2338:8:6"
									},
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2297:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2289:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2289:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2318:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2310:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2278:52:6"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2356:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2356:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:6:6"
									},
									"scope": 1417,
									"src": "2261:426:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "2823:378:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "2853:26:6",
																	"subExpression": {
																		"baseExpression": {
																			"id": 1172,
																			"name": "_isExcludedFromFees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "2854:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1174,
																		"indexExpression": {
																			"id": 1173,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1162,
																			"src": "2874:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2854:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "2883:24:6",
																	"subExpression": {
																		"baseExpression": {
																			"id": 1176,
																			"name": "_isExcludedFromFees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "2884:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1178,
																		"indexExpression": {
																			"id": 1177,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1164,
																			"src": "2904:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2884:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2853:54:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1181,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2852:56:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1182,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2926:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2930:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2926:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1184,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "2940:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2926:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1186,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "2957:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1187,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "2963:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2957:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2926:50:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1190,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2925:52:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2852:125:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "3110:62:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1209,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1162,
																		"src": "3144:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1210,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "3150:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1211,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "3154:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1206,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "3125:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_BananaToken_$1417_$",
																			"typeString": "type(contract super BananaToken)"
																		}
																	},
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3131:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 482,
																	"src": "3125:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) returns (bool)"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3125:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1213,
															"nodeType": "ExpressionStatement",
															"src": "3125:35:6"
														}
													]
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "2834:338:6",
												"trueBody": {
													"id": 1205,
													"nodeType": "Block",
													"src": "2989:115:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1193,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1162,
																		"src": "3020:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1194,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3026:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3030:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3026:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1196,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "3038:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1192,
																	"name": "_spendAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "3004:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3004:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1198,
															"nodeType": "ExpressionStatement",
															"src": "3004:40:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1200,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1162,
																		"src": "3076:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1201,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "3082:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1202,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "3086:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1199,
																	"name": "_transferWithTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "3059:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3059:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1204,
															"nodeType": "ExpressionStatement",
															"src": "3059:33:6"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3189:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1171,
												"id": 1217,
												"nodeType": "Return",
												"src": "3182:11:6"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2704:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1168,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2799:8:6"
									},
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2735:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "2727:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2758:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "2750:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2750:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2779:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "2771:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2716:75:6"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "2817:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2817:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:6:6"
									},
									"scope": 1417,
									"src": "2695:506:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "3319:1264:6",
										"statements": [
											{
												"assignments": [
													1229
												],
												"declarations": [
													{
														"constant": false,
														"id": 1229,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "3338:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1363,
														"src": "3330:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3330:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1236,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1230,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "3351:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1231,
																	"name": "taxRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "3360:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3351:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1233,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3350:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3371:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3350:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3330:44:6"
											},
											{
												"assignments": [
													1238
												],
												"declarations": [
													{
														"constant": false,
														"id": 1238,
														"mutability": "mutable",
														"name": "transferAmount",
														"nameLocation": "3393:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1363,
														"src": "3385:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1237,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3385:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1242,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1239,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "3410:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1240,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "3419:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3410:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3385:43:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1246,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "3455:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1247,
															"name": "marketingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "3461:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1248,
															"name": "taxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "3478:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1243,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3439:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_BananaToken_$1417_$",
																"typeString": "type(contract super BananaToken)"
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3445:9:6",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 529,
														"src": "3439:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3439:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "3439:49:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1251,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3503:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3509:6:6",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "3503:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1253,
															"name": "launchBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "3519:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "35303030",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3533:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															},
															"value": "5000"
														},
														"src": "3519:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3503:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "3499:1025:6",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "3539:985:6",
													"statements": [
														{
															"assignments": [
																1258
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1258,
																	"mutability": "mutable",
																	"name": "contractTokenBalance",
																	"nameLocation": "3562:20:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1353,
																	"src": "3554:28:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1257,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3554:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1265,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1262,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3603:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BananaToken_$1417",
																					"typeString": "contract BananaToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BananaToken_$1417",
																					"typeString": "contract BananaToken"
																				}
																			],
																			"id": 1261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3595:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1260,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3595:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3595:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1259,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "3585:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3585:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3554:55:6"
														},
														{
															"assignments": [
																1267
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1267,
																	"mutability": "mutable",
																	"name": "canSwap",
																	"nameLocation": "3631:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1353,
																	"src": "3626:12:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1266,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3626:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1271,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1268,
																	"name": "contractTokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "3641:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3664:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3641:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3626:39:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1272,
																		"name": "canSwap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "3686:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "3697:9:6",
																		"subExpression": {
																			"id": 1273,
																			"name": "swapping",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "3698:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "3686:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1276,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "3710:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 1277,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "3718:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3710:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3686:45:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1352,
															"nodeType": "IfStatement",
															"src": "3682:831:6",
															"trueBody": {
																"id": 1351,
																"nodeType": "Block",
																"src": "3733:780:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1280,
																				"name": "swapping",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 970,
																				"src": "3752:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3763:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "3752:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1283,
																		"nodeType": "ExpressionStatement",
																		"src": "3752:15:6"
																	},
																	{
																		"assignments": [
																			1288
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1288,
																				"mutability": "mutable",
																				"name": "path",
																				"nameLocation": "3805:4:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1351,
																				"src": "3788:21:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[]"
																				},
																				"typeName": {
																					"baseType": {
																						"id": 1286,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3788:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 1287,
																					"nodeType": "ArrayTypeName",
																					"src": "3788:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[]"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1294,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "32",
																					"id": 1292,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3826:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					}
																				],
																				"id": 1291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "NewExpression",
																				"src": "3812:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (address[] memory)"
																				},
																				"typeName": {
																					"baseType": {
																						"id": 1289,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3816:7:6",
																						"stateMutability": "nonpayable",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 1290,
																					"nodeType": "ArrayTypeName",
																					"src": "3816:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[]"
																					}
																				}
																			},
																			"id": 1293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3812:16:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3788:40:6"
																	},
																	{
																		"expression": {
																			"id": 1302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1295,
																					"name": "path",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1288,
																					"src": "3847:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1297,
																				"indexExpression": {
																					"hexValue": "30",
																					"id": 1296,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3852:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3847:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1300,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "3865:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_BananaToken_$1417",
																							"typeString": "contract BananaToken"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_BananaToken_$1417",
																							"typeString": "contract BananaToken"
																						}
																					],
																					"id": 1299,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3857:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1298,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3857:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3857:13:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "3847:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1303,
																		"nodeType": "ExpressionStatement",
																		"src": "3847:23:6"
																	},
																	{
																		"expression": {
																			"id": 1310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1304,
																					"name": "path",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1288,
																					"src": "3889:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1306,
																				"indexExpression": {
																					"hexValue": "31",
																					"id": 1305,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3894:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3889:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 1307,
																						"name": "uniswapV2Router",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 964,
																						"src": "3899:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IUniswapV2Router02_$1776",
																							"typeString": "contract IUniswapV2Router02"
																						}
																					},
																					"id": 1308,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3915:4:6",
																					"memberName": "WETH",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1715,
																					"src": "3899:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																						"typeString": "function () pure external returns (address)"
																					}
																				},
																				"id": 1309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3899:22:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "3889:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1311,
																		"nodeType": "ExpressionStatement",
																		"src": "3889:32:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1315,
																					"name": "contractTokenBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1258,
																					"src": "4057:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4104:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				{
																					"id": 1317,
																					"name": "path",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1288,
																					"src": "4160:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 1320,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "4199:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_BananaToken_$1417",
																								"typeString": "contract BananaToken"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_BananaToken_$1417",
																								"typeString": "contract BananaToken"
																							}
																						],
																						"id": 1319,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4191:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1318,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "4191:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1321,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4191:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1322,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "4231:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4237:9:6",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "4231:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					{
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1312,
																					"name": "uniswapV2Router",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "3942:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IUniswapV2Router02_$1776",
																						"typeString": "contract IUniswapV2Router02"
																					}
																				},
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3980:50:6",
																				"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1775,
																				"src": "3942:88:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
																				}
																			},
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3942:327:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1325,
																		"nodeType": "ExpressionStatement",
																		"src": "3942:327:6"
																	},
																	{
																		"assignments": [
																			1327
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1327,
																				"mutability": "mutable",
																				"name": "newBalance",
																				"nameLocation": "4298:10:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1351,
																				"src": "4290:18:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1326,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4290:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1333,
																		"initialValue": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1330,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "4319:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_BananaToken_$1417",
																							"typeString": "contract BananaToken"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_BananaToken_$1417",
																							"typeString": "contract BananaToken"
																						}
																					],
																					"id": 1329,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4311:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1328,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "4311:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4311:13:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4325:7:6",
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"src": "4311:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4290:42:6"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1334,
																				"name": "newBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1327,
																				"src": "4357:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1335,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4370:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "4357:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1346,
																		"nodeType": "IfStatement",
																		"src": "4353:108:6",
																		"trueBody": {
																			"id": 1345,
																			"nodeType": "Block",
																			"src": "4373:88:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1340,
																										"name": "marketingWallet",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 968,
																										"src": "4412:15:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1339,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4404:8:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_payable_$",
																										"typeString": "type(address payable)"
																									},
																									"typeName": {
																										"id": 1338,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "4404:8:6",
																										"stateMutability": "payable",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1341,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4404:24:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							},
																							{
																								"id": 1342,
																								"name": "newBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1327,
																								"src": "4430:10:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1337,
																							"name": "sendETH",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1109,
																							"src": "4396:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
																								"typeString": "function (address payable,uint256)"
																							}
																						},
																						"id": 1343,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4396:45:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1344,
																					"nodeType": "ExpressionStatement",
																					"src": "4396:45:6"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1347,
																				"name": "swapping",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 970,
																				"src": "4481:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 1348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4492:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "4481:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1350,
																		"nodeType": "ExpressionStatement",
																		"src": "4481:16:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1358,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "4550:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1359,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "4556:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1360,
															"name": "transferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "4560:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1355,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4534:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_BananaToken_$1417_$",
																"typeString": "type(contract super BananaToken)"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4540:9:6",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 529,
														"src": "4534:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4534:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "4534:41:6"
											}
										]
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferWithTax",
									"nameLocation": "3218:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3253:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "3245:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3245:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3276:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "3268:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3268:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3297:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "3289:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3234:76:6"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3319:0:6"
									},
									"scope": 1417,
									"src": "3209:1374:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "4663:54:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1371,
														"name": "_isExcludedFromFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "4681:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1373,
													"indexExpression": {
														"id": 1372,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1366,
														"src": "4701:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4681:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1370,
												"id": 1374,
												"nodeType": "Return",
												"src": "4674:35:6"
											}
										]
									},
									"functionSelector": "4fbee193",
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcludedFromFees",
									"nameLocation": "4600:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4627:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "4619:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:17:6"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "4657:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1368,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4657:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4656:6:6"
									},
									"scope": 1417,
									"src": "4591:126:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "4782:89:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1384,
																"name": "_taxRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "4801:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3230",
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4812:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "4801:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642074617852617465",
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4816:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f82563bb70a22b157eb14fc3c2b9496aeb100294c9c03d469c6ab75fef2c1d9c",
																"typeString": "literal_string \"Invalid taxRate\""
															},
															"value": "Invalid taxRate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f82563bb70a22b157eb14fc3c2b9496aeb100294c9c03d469c6ab75fef2c1d9c",
																"typeString": "literal_string \"Invalid taxRate\""
															}
														],
														"id": 1383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4793:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4793:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "4793:41:6"
											},
											{
												"expression": {
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1390,
														"name": "taxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4845:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1391,
														"name": "_taxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "4855:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4845:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "4845:18:6"
											}
										]
									},
									"functionSelector": "c6d69a30",
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1381,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1380,
												"name": "onlyOwner",
												"nameLocations": [
													"4772:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4772:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4772:9:6"
										}
									],
									"name": "setTaxRate",
									"nameLocation": "4734:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "_taxRate",
												"nameLocation": "4753:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "4745:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4745:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4744:18:6"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4782:0:6"
									},
									"scope": 1417,
									"src": "4725:146:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "4980:108:6",
										"statements": [
											{
												"expression": {
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1404,
															"name": "_isExcludedFromFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "4991:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1406,
														"indexExpression": {
															"id": 1405,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "5011:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4991:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1407,
														"name": "excluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "5022:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4991:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "4991:39:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1411,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "5062:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1412,
															"name": "excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "5071:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1410,
														"name": "ExcludeFromFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "5046:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5046:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "EmitStatement",
												"src": "5041:39:6"
											}
										]
									},
									"functionSelector": "c0246668",
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1402,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1401,
												"name": "onlyOwner",
												"nameLocations": [
													"4970:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4970:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4970:9:6"
										}
									],
									"name": "excludeFromFees",
									"nameLocation": "4888:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4922:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "4914:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4914:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "excluded",
												"nameLocation": "4945:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "4940:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4940:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4903:57:6"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4980:0:6"
									},
									"scope": 1417,
									"src": "4879:209:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1418,
							"src": "410:4681:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								982
							]
						}
					],
					"src": "33:5060:6"
				},
				"id": 6
			},
			"contracts/interfaces/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							1480
						]
					},
					"id": 1481,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1419,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1480,
							"linearizedBaseContracts": [
								1480
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "72:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
									"id": 1429,
									"name": "PairCreated",
									"nameLocation": "103:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "141:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "125:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "125:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "174:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "158:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "199:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "191:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "214:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "214:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:114:7"
									},
									"src": "97:132:7"
								},
								{
									"functionSelector": "017e7e58",
									"id": 1434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "246:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:7"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "277:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "276:9:7"
									},
									"scope": 1480,
									"src": "237:49:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 1439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "303:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:2:7"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "340:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "339:9:7"
									},
									"scope": 1480,
									"src": "294:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 1448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "366:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "382:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "374:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "398:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "390:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "373:32:7"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "464:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "456:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:14:7"
									},
									"scope": 1480,
									"src": "357:113:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "487:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "496:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:9:7"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "536:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "528:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "527:14:7"
									},
									"scope": 1480,
									"src": "478:64:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 1460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "559:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "573:2:7"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "599:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:9:7"
									},
									"scope": 1480,
									"src": "550:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 1469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "625:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "644:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "636:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "660:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "652:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:32:7"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "712:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "704:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:14:7"
									},
									"scope": 1480,
									"src": "616:102:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 1474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nameLocation": "735:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "744:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "743:9:7"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "761:0:7"
									},
									"scope": 1480,
									"src": "726:36:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 1479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nameLocation": "779:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "794:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:9:7"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "811:0:7"
									},
									"scope": 1480,
									"src": "770:42:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1481,
							"src": "62:753:7",
							"usedErrors": [],
							"usedEvents": [
								1429
							]
						}
					],
					"src": "35:782:7"
				},
				"id": 7
			},
			"contracts/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							1703
						]
					},
					"id": 1704,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1482,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Pair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1703,
							"linearizedBaseContracts": [
								1703
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "72:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1490,
									"name": "Approval",
									"nameLocation": "100:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "135:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "119:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "167:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "151:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "193:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "185:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:97:8"
									},
									"src": "94:112:8"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1498,
									"name": "Transfer",
									"nameLocation": "218:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "243:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "227:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "227:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "265:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "249:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "277:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "269:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "226:57:8"
									},
									"src": "212:72:8"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "301:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:2:8"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "331:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1500,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "331:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:15:8"
									},
									"scope": 1703,
									"src": "292:54:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "363:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "369:2:8"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "395:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1505,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "395:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:15:8"
									},
									"scope": 1703,
									"src": "354:56:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "427:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:2:8"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "461:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1510,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "461:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:7:8"
									},
									"scope": 1703,
									"src": "418:50:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "485:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:8"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "522:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:9:8"
									},
									"scope": 1703,
									"src": "476:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "548:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "566:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "558:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "558:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:15:8"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "596:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:9:8"
									},
									"scope": 1703,
									"src": "539:66:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "622:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "640:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "632:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "655:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "647:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:32:8"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "714:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:9:8"
									},
									"scope": 1703,
									"src": "613:110:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1543,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "740:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "756:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "748:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "773:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "765:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:8"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "798:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "798:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:6:8"
									},
									"scope": 1703,
									"src": "731:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "821:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "838:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "830:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "850:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "842:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:27:8"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "875:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "875:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:6:8"
									},
									"scope": 1703,
									"src": "812:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "898:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "929:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "921:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "952:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "944:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "973:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "965:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:75:8"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "1004:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1004:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:6:8"
									},
									"scope": 1703,
									"src": "889:121:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 1568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "1027:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:2:8"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "1069:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1565,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:9:8"
									},
									"scope": 1703,
									"src": "1018:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 1573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "1095:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1110:2:8"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "1136:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1570,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:9:8"
									},
									"scope": 1703,
									"src": "1086:59:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 1580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1162:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1177:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1169:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:15:8"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1207:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1207:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1206:9:8"
									},
									"scope": 1703,
									"src": "1153:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 1597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1233:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1258:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1250:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1282:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1274:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1308:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1300:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1332:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1324:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1324:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1357:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1351:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1589,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1351:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1377:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1369:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1591,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1397:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1389:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1593,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:166:8"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1414:0:8"
									},
									"scope": 1703,
									"src": "1224:191:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
									"id": 1605,
									"name": "Mint",
									"nameLocation": "1429:4:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1450:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "1434:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1466:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "1458:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1483:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "1475:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:58:8"
									},
									"src": "1423:69:8"
								},
								{
									"anonymous": false,
									"eventSelector": "d78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822",
									"id": 1619,
									"name": "Swap",
									"nameLocation": "1506:4:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1537:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1521:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "1562:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1554:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1554:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "1590:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1582:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "1618:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1610:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "1647:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1639:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1639:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1684:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1668:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1668:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:183:8"
									},
									"src": "1500:194:8"
								},
								{
									"anonymous": false,
									"eventSelector": "1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1",
									"id": 1625,
									"name": "Sync",
									"nameLocation": "1706:4:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1719:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "1711:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1620,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1737:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "1729:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1622,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1710:36:8"
									},
									"src": "1700:47:8"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 1630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nameLocation": "1764:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1781:2:8"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1807:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:9:8"
									},
									"scope": 1703,
									"src": "1755:61:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 1635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "1833:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1840:2:8"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "1866:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:9:8"
									},
									"scope": 1703,
									"src": "1824:51:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "1892:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1898:2:8"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "1924:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1923:9:8"
									},
									"scope": 1703,
									"src": "1883:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "1950:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1956:2:8"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "1982:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1981:9:8"
									},
									"scope": 1703,
									"src": "1941:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "2008:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2019:2:8"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "2094:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2086:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1647,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "2125:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2117:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1649,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "2155:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2148:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1651,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2148:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2071:113:8"
									},
									"scope": 1703,
									"src": "1999:186:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 1659,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nameLocation": "2202:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2222:2:8"
									},
									"returnParameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "2248:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:8"
									},
									"scope": 1703,
									"src": "2193:64:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 1664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nameLocation": "2274:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2294:2:8"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "2320:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2320:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2319:9:8"
									},
									"scope": 1703,
									"src": "2265:64:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 1669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nameLocation": "2346:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2351:2:8"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "2377:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2377:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:9:8"
									},
									"scope": 1703,
									"src": "2337:49:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 1676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2403:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2416:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "2408:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:12:8"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2446:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "2438:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2437:19:8"
									},
									"scope": 1703,
									"src": "2394:63:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 1687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "2474:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "2497:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "2489:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "2526:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "2518:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2555:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "2547:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2583:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "2568:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2568:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2478:116:8"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:0:8"
									},
									"scope": 1703,
									"src": "2465:139:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 1692,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "2621:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2634:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "2626:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2626:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:12:8"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2646:0:8"
									},
									"scope": 1703,
									"src": "2612:35:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 1695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "2664:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:2:8"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2679:0:8"
									},
									"scope": 1703,
									"src": "2655:25:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 1702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "2697:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "2708:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "2717:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:18:8"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2734:0:8"
									},
									"scope": 1703,
									"src": "2688:47:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1704,
							"src": "62:2676:8",
							"usedErrors": [],
							"usedEvents": [
								1490,
								1498,
								1605,
								1619,
								1625
							]
						}
					],
					"src": "35:2705:8"
				},
				"id": 8
			},
			"contracts/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router02": [
							1776
						]
					},
					"id": 1777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1705,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1776,
							"linearizedBaseContracts": [
								1776
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "72:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "107:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:9"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "140:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:9:9"
									},
									"scope": 1776,
									"src": "98:51:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "166:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "170:2:9"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "196:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "196:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:9:9"
									},
									"scope": 1776,
									"src": "157:48:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "222:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "253:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "245:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "245:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "278:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "270:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "303:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "295:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "336:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "328:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "369:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "361:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "398:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "390:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "427:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "419:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "448:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "440:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "234:229:9"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "490:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "482:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "507:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "499:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "524:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "516:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:53:9"
									},
									"scope": 1776,
									"src": "213:322:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "552:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "586:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "578:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "610:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "602:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "647:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "639:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "680:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "672:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "711:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "703:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "732:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "724:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:180:9"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "809:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "801:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "830:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "822:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "849:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "841:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:59:9"
									},
									"scope": 1776,
									"src": "543:317:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1775,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "877:50:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "946:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "938:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "973:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "965:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1015:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "996:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1766,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "996:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1767,
													"nodeType": "ArrayTypeName",
													"src": "996:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1038:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "1030:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1059:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "1051:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "927:147:9"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1083:0:9"
									},
									"scope": 1776,
									"src": "868:216:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1777,
							"src": "62:1025:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:1054:9"
				},
				"id": 9
			}
		}
	}
}